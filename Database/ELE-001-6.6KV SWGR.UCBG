L3.3

resizeText 1
zoomLines 0
zoomArrows 0
doLasso 1
opaqueMove 1
selectDistance 30
adjustFonts 1
doubleBuffer 1
clipping 1
nCopyAreas 0
drawTextLimit 0.5
saveObjects 1
canvasBackground #bf00bf00bf00
defaultForeground #c000c000c000
layers 1
layerName 0 0
layerName 1 1
layerName 2 2
layerName 3 3
layerName 4 4
layerName 5 5
layerName 6 6
layerName 7 7
layerName 8 8
layerName 9 9
layerName 10 10
layerName 11 11
layerName 12 12
layerName 13 13
layerName 14 14
layerName 15 15
layerName 16 16
layerName 17 17
layerName 18 18
layerName 19 19
layerName 20 20
layerName 21 21
layerName 22 22
layerName 23 23
layerName 24 24
layerName 25 25
layerName 26 26
layerName 27 27
layerName 28 28
layerName 29 29
layerName 30 30
layerName 31 31
gend

N 0
P 2.33337 903.999
T 0 0 1 0 0
0 0
R 0 0
0
	0 3 1 0
	0 1 1
!
27e
e6e6e6
a7a7a7
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
object.tooltip=" ";
end script
end dynamics
	0 0 1880 83.3336
	0 3 2 0
	0 1 1
!
27e
e6e6e6
a7a7a7
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	0 0 1539.08 82.6666
	0 3 3 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	684.355 0 171.571 82.6666
	0 4 4 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	684.355 40.6667 171.571 42 2 1
	0 4 5 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	684.355 0 171.571 42 2 1
	0 2 6 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 7 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1367.51 0 171.571 82.6666
	0 4 8 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1367.51 40.6667 171.571 42 2 1
	0 4 9 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1367.51 0 171.571 42 2 1
	0 2 10 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 11 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1195.22 0 171.571 82.6666
	0 4 12 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1195.22 40.6667 171.571 42 2 1
	0 4 13 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1195.22 0 171.571 42 2 1
	0 2 14 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 15 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1026.53 0 171.571 82.6666
	0 4 16 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1026.53 40.6667 171.571 42 2 1
	0 4 17 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1026.53 0 171.571 42 2 1
	0 2 18 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 19 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	854.244 0 171.571 82.6666
	0 4 20 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	854.244 40.6667 171.571 42 2 1
	0 4 21 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	854.244 0 171.571 42 2 1
	0 2 22 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 23 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	169.888 0 171.571 82.6666
	0 4 24 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	169.888 40.6667 171.571 42 2 1
	0 4 25 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	169.888 0 171.571 42 2 1
	0 2 26 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 27 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	0 0 171.571 82.6666
	0 4 28 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	0 40.6667 171.571 42 2 1
	0 4 29 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	0 0 171.571 42 2 1
	0 2 30 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 31 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	513.267 0 171.571 82.6666
	0 4 32 0
	Name RND_R_BE28550
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	513.267 0 171.571 42 2 1
	0 4 33 0
	Name RND_R_BE283D0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	513.267 40.6667 171.571 42 2 1
	0 2 34 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 35 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	342.178 0 171.571 82.6666
	0 4 36 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	342.178 40.6667 171.571 42 2 1
	0 4 37 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	342.178 0 171.571 42 2 1
	0 2 38 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 39 0
	0 1 1
!
=
	0 0 0 0
	0 3 40 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1536.7 0.666992 171.311 82.6666
	0 4 41 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1536.7 41.3337 171.311 42 2 1
	0 4 42 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1536.7 0.666992 171.311 42 2 1
	0 2 43 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 44 0
	0 1 1
!
27e
808080
a7a7a7
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE28550",PG_GRAPHICS_ALTER_BG);
LcBg(SO_Obj,"RND_R_BE283D0",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1708.69 0.333618 171.311 82.6666
	0 4 45 0
	Name RND_R_BE283D0
	0 1 1
!
27e
808080
a7a7a7
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1708.69 41.0002 171.311 42 2 1
	0 4 46 0
	Name RND_R_BE28550
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
end script
end dynamics
	1708.69 0.333618 171.311 42 2 1
	0 2 47 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 48 0
	0 1 1
!
=
	0 0 0 0
N 49
P 0 0
T 0 0 1 0 0
0 0
R 0 0
0
	0 4 50 0
	0 1 1
!
27e
fbe4d5
fbe4d5
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_BOP_HEADER);
LcFg(SO_Obj,"",PG_BOP_HEADER);
end script
end dynamics
	0 0 1880 40 1 0
N 51
P 4 0
T 0 24420 1 0 0
0 0
R 0 0
0
	1 1 52 0
	0 1 1
!
346
3a3a3a
-1-1-1
0 0
-*-Tahoma-regular-r-normal-*-28-*-*-p-*-iso8859-1-
dynamics
script
object.string = "BOP";
end script
end dynamics
	0 0 0
	BOP
N 53
P 137.671 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 54 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	MW
N 55
P 80.6667 960.004
T 0 24420 1 0 0
0 0
R 0 0
0
	1 1 56 0
	Name VAR189
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "12CJP01GH5086XQ52"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 57
P 137.671 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 58 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	MW
N 59
P 80.6667 919.338
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 60 0
	Name VAR190
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "11CJP01GH5086XQ52"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 61
P 6.43774 901.599
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 62 0
	0 1 1
!
346
000000
000000
0 0
-*-Tahoma-regular-r-normal-*-13-*-*-p-*-iso8859-1-
	0 0 0
	GT#11 MW
N 63
P 6.43774 942.933
T 0 3814 1 0 0
0 0
R 0 0
0
	1 1 64 0
	0 1 1
!
=
	0 0 0
	GT#12 MW
N 65
P 794.171 919.338
T 0 3814 1 0 0
0 0
R 0 0
0
	1 1 66 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mbar
N 67
P 733.166 919.338
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 68 0
	Name VAR191
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "11HAH53CF001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 69
P 898.452 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 70 0
	Name VAR192
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "11HAH31CF001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 71
P 960.171 919.338
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 72 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mbar
N 73
P 1075.45 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 74 0
	Name VAR193
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "11HAH11 CF001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 75
P 1135.5 919.338
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 76 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mbar
N 77
P 1241.45 919.338
T 0 -32768 1 0 0
0 0
R 0 0
0
	1 1 78 0
	Name VAR194
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "11HAD50CL001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 79
P 1303.5 919.338
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 80 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mmwg
N 81
P 1414.45 919.338
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 82 0
	Name VAR195
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "11HAD30CL001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 83
P 1474.5 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 84 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mmwg
N 85
P 1585.45 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 86 0
	Name VAR196
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "11HAD10CL001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 87
P 1644.5 919.338
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 88 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mmwg
N 89
P 684.566 942.933
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 90 0
	0 1 1
!
346
000000
000000
0 0
-*-Tahoma-regular-r-normal-*-13-*-*-p-*-iso8859-1-
	0 0 0
	HP STEAM FLOW HRSG#12
N 91
P 857.78 942.933
T 0 261 1 0 0
0 0
R 0 0
0
	1 1 92 0
	0 1 1
!
=
	0 0 0
	IP STEAM FLOW HRSG#12
N 93
P 1210.07 942.933
T 0 261 1 0 0
0 0
R 0 0
0
	1 1 94 0
	0 1 1
!
=
	0 0 0
	HP DRUM LVL HRSG#12
N 95
P 1382.4 942.933
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 96 0
	0 1 1
!
=
	0 0 0
	IP DRUM LVL HRSG#12
N 97
P 1553.73 942.933
T 0 3814 1 0 0
0 0
R 0 0
0
	1 1 98 0
	0 1 1
!
=
	0 0 0
	LP DRUM LVL HRSG#12
N 99
P 794.171 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 100 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mbar
N 101
P 733.166 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 102 0
	Name VAR197
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "12HAH53CF001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 103
P 1029.78 942.933
T 0 242 1 0 0
0 0
R 0 0
0
	1 1 104 0
	0 1 1
!
346
000000
000000
0 0
-*-Tahoma-regular-r-normal-*-13-*-*-p-*-iso8859-1-
	0 0 0
	LP STEAM FLOW HRSG#12
N 105
P 898.452 960.004
T 0 3814 1 0 0
0 0
R 0 0
0
	1 1 106 0
	Name VAR198
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "12HAH31CF001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 107
P 960.171 960.004
T 0 261 1 0 0
0 0
R 0 0
0
	1 1 108 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mbar
N 109
P 1075.45 960.004
T 0 -32768 1 0 0
0 0
R 0 0
0
	1 1 110 0
	Name VAR199
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "12HAH11 CF001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 111
P 1135.5 960.004
T 0 3055 1 0 0
0 0
R 0 0
0
	1 1 112 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mbar
N 113
P 1241.45 960.004
T 0 16487 1 0 0
0 0
R 0 0
0
	1 1 114 0
	Name VAR200
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "12HAD50CL001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 115
P 1303.5 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 116 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mmwg
N 117
P 1414.45 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 118 0
	Name VAR201
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "12HAD30CL001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 119
P 1474.5 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 120 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mmwg
N 121
P 1585.45 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 122 0
	Name VAR202
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "12HAD10CL001XQ50"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 123
P 1644.5 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 124 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mmwg
N 125
P 423.333 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 126 0
	Name VAR203
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = fgc;
object.background = PG_GRAPHICS_ALTER_BG;
object.string = value;
end script
end dynamics
	0 0 0
	0.00
N 127
P 349.104 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 128 0
	0 1 1
!
346
000000
000000
0 0
-*-Tahoma-regular-r-normal-*-13-*-*-p-*-iso8859-1-
dynamics
script
object.string = "I/L NAT. GAS PRESS.";
end script
end dynamics
	0 0 0
	I/L NAT. GAS PRESS.
N 129
P 424 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 130 0
	Name VAR204
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = fgc;
object.background = PG_GRAPHICS_ALTER_BG;
object.string = value;
end script
end dynamics
	0 0 0
	0.00
N 131
P 1754.12 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 132 0
	Name VAR205
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "TEMPERATURE"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 133
P 1813.17 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 134 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	degC
N 135
P 1727.73 942.933
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 136 0
	0 1 1
!
346
000000
000000
0 0
-*-Tahoma-regular-r-normal-*-13-*-*-p-*-iso8859-1-
	0 0 0
	AMBIENT HUMIDITY
N 137
P 1754.79 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 138 0
	Name VAR206
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "HUMIDITY"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 139
P 1813.84 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 140 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	bar
N 141
P 194.397 942.933
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 142 0
	0 1 1
!
346
000000
000000
0 0
-*-Tahoma-regular-r-normal-*-13-*-*-p-*-iso8859-1-
dynamics
script
object.string = "TOTAL PLANT LOAD";
end script
end dynamics
	0 0 0
	TOTAL PLANT LOAD
N 143
P 222.117 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 144 0
	Name VAR207
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "LOAD"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 145
P 235.45 917.671
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 146 0
	Name VAR208
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = RGB(0,0,0);
object.background = PG_GRAPHICS_ALTER_BG;
TAG1 = "ST_DWATT"
TagRead(SO_Obj,TAG1,".PV",VAL);
object.string = VAL;
object.tooltip = TAG1;
end script
end dynamics
	0 0 0
	0.00
N 147
P 294.5 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 148 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	MW
N 149
P 349.771 942.933
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 150 0
	0 1 1
!
346
000000
000000
0 0
-*-Tahoma-regular-r-normal-*-13-*-*-p-*-iso8859-1-
dynamics
script
object.string = "I/L NAT. GAS FLOW";
end script
end dynamics
	0 0 0
	I/L NAT. GAS FLOW
N 151
P 653.671 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 152 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	bar
N 153
P 596.667 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 154 0
	Name VAR209
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = fgc;
object.background = PG_GRAPHICS_ALTER_BG;
object.string = value;
end script
end dynamics
	0 0 0
	0.00
N 155
P 654.338 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 156 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	bar
N 157
P 597.333 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 158 0
	Name VAR210
	0 1 1
!
346
000000
a7a7a7
1 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_ALTER_BG);
if (first == 0) {
 fg_col = object.foreground; // color if normal
 bg_col = 0;
 al_col = -1; // red if alarm
 first = 1;
}
object.foreground = fgc;
object.background = PG_GRAPHICS_ALTER_BG;
object.string = value;
end script
end dynamics
	0 0 0
	0.00
N 159
P 533.104 942.933
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 160 0
	0 1 1
!
346
000000
000000
0 0
-*-Tahoma-regular-r-normal-*-13-*-*-p-*-iso8859-1-
dynamics
script
object.string = "MAIN STEAM FLOW";
end script
end dynamics
	0 0 0
	MAIN STEAM FLOW
N 161
P 479.671 919.338
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 162 0
	0 1 1
!
346
4d4d4d
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	bar
N 163
P 478.838 960.004
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 164 0
	0 1 1
!
=
dynamics
script
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	mbar
N 165
P 208.4 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 166 0
	0 1 1
!
346
000000
000000
0 0
-*-Tahoma-regular-r-normal-*-13-*-*-p-*-iso8859-1-
dynamics
script
object.string = "ST MW";
end script
end dynamics
	0 0 0
	ST MW
N 167
P 857.78 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 168 0
	0 1 1
!
=
	0 0 0
	IP STEAM FLOW HRSG#11
N 169
P 1209.07 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 170 0
	0 1 1
!
=
	0 0 0
	HP DRUM LVL HRSG#11
N 171
P 1384.4 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 172 0
	0 1 1
!
=
	0 0 0
	IP DRUM LVL HRSG#11
N 173
P 1029.78 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 174 0
	0 1 1
!
=
	0 0 0
	LP STEAM FLOW HRSG#11
N 175
P 685.899 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 176 0
	0 1 1
!
=
	0 0 0
	HP STEAM FLOW HRSG#11
N 177
P 531.438 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 178 0
	0 1 1
!
=
dynamics
script
object.string = "MAIN STEAM PRESS.";
end script
end dynamics
	0 0 0
	MAIN STEAM PRESS.
N 179
P 1553.73 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 180 0
	0 1 1
!
=
	0 0 0
	LP DRUM LVL HRSG#11
N 181
P 1734.07 901.599
T 0 0 1 0 0
0 0
R 0 0
0
	1 1 182 0
	0 1 1
!
=
	0 0 0
	AMBIENT TEMP
N 183
P 0 0
T 0 0 1 0 0
0 0
R 0 0
0
	0 0 184 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
TEMPLATE_BOP;
func Sym_Tag_List() {
//12CJP01GH5086XQ52=1;
//11CJP01GH5086XQ52=2;
//11HAH53CF901 DMS_OUT=3;
//11HAH31CF901_DMS_OUT=4;
//11HAH11CF901_DMS_OUT=5;
//11HAD50CL901_S=6;
//11HAD30CL901_S=7;
//11HAD10CL901_S=8;
//12HAH53CF901 DMS_OUT=9;
//12HAH31CF901_DMS_OUT=10;
//12HAH11CF901_DMS_OUT=11;
//12HAD50CL901_S=12;
//12HAD30CL901_S=13;
//12HAD10CL901_S=14;
//00EKG20CP001XQ50=15;
//GT2_GASFLOW=16;
//TEMPERATURE=17;
//HUMIDITY=18;
//LOAD=19;
//ST_DWATT=20;
//00LBA10CP011XQ50=21;
//GT2_PRESS=22;
}
func Sym_Tag_Refr() {
//12CJP01GH5086XQ52=12CJP01GH5086XQ52;
//11CJP01GH5086XQ52=11CJP01GH5086XQ52;
//11HAH53CF901 DMS_OUT=11HAH53CF001XQ50;
//11HAH31CF901_DMS_OUT=11HAH31CF001XQ50;
//11HAH11CF901_DMS_OUT=11HAH11 CF001XQ50;
//11HAD50CL901_S=11HAD50CL001XQ50;
//11HAD30CL901_S=11HAD30CL001XQ50;
//11HAD10CL901_S=11HAD10CL001XQ50;
//12HAH53CF901 DMS_OUT=12HAH53CF001XQ50;
//12HAH31CF901_DMS_OUT=12HAH31CF001XQ50;
//12HAH11CF901_DMS_OUT=12HAH11 CF001XQ50;
//12HAD50CL901_S=12HAD50CL001XQ50;
//12HAD30CL901_S=12HAD30CL001XQ50;
//12HAD10CL901_S=12HAD10CL001XQ50;
//00EKG20CP001XQ50=00EKG20CP001XQ50;
//GT2_GASFLOW=GT2_GASFLOW;
//TEMPERATURE=TEMPERATURE;
//HUMIDITY=HUMIDITY;
//LOAD=LOAD;
//ST_DWATT=ST_DWATT;
//00LBA10CP011XQ50=00LBA10CP011XQ50;
//GT2_PRESS=GT2_PRESS;
}
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	1882.33 0
	1882.33 987.333
	0 987.333
N 185
P 84 468
T -1
R 0 0
0
	0 6 186 0
	Name RND_L_2A61120
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	0 289.667
N 187
P 1310 338
T -1
R 0 0
0
	0 6 188 0
	0 1 1
!
27e
-1aa00
-1aa00
2
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 62
	0 0
N 189
P 0 0
T -1
R 0 0
0
	0 4 190 0
	Name #WVP
	0 1 1
!
27e
bfbfbf
008040
0
0
0
0 0
	0 0 1883 989 3 0
N 191
P 798 0
T -1
R 0 0
0
	1 1 192 0
	0 1 1
!
346
3a3a3a
-1-1-1
0 0
-*-Tahoma-regular-r-normal-*-28-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_MAJORLABEL);
end script
end dynamics
	0 0 0
	6.6kV SWITCHGEAR
N 193
P 333 46
T -1
R 0 0
0
	1 1 194 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	FROM GT UNIT #11
N 195
P 389 77.8
T -1
R 0 0
0
	0 0 196 0
	Name TRI1
	0 1 1
!
27e
c86e00
c86e00
1
0
0
1 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11.5 23.2
	0 0
	23 0
N 197
P 400 100
T -1
R 0 0
0
	0 6 198 0
	0 1 1
!
27e
c86e00
c86e00
2
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	0 0
	0 74
N 199
P 400 224
T -1
R 0 0
0
	0 6 200 0
	0 1 1
!
27e
-1aa00
-1aa00
2
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 92
	0 0
N 201
P 8 400
T -1
R 0 0
0
	0 6 202 0
	Name ABC1
	0 1 1
!
27e
-1aa00
c86e00
1
0
0
0 0
dynamics
script

;
end script
end dynamics
	2
	790 0
	0 0
N 203
P 1254 44
T -1
R 0 0
0
	1 1 204 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	FROM GT UNIT #12
N 205
P 467 808.33
T -1
R 0 0
0
	1 1 206 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	   TO 400V SWITCHGEAR 1
N 207
P 644 808.33
T -1
R 0 0
0
	1 1 208 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	     TO 400VSWITCHGEAR 2
N 209
P 976 808.33
T -1
R 0 0
0
	1 1 210 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	   TO 400V SWITCHGEAR 1
N 211
P 1147.67 808.33
T -1
R 0 0
0
	1 1 212 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	     TO 400VSWITCHGEAR 2
N 213
P 1760.75 390.666
T -1
R 0 0
0
	0 0 214 0
	Name VAR32
	0 1 1
!
27e
c0c0c0
808080
6
0
0
1 0
	0 1 0
	2 0 0 0 1 
	5
	31.3212 0
	0.4217 0.137483
	0 19.385
	30.8035 20
	40.9179 10.1462
N 215
P 916 400
T -1
R 0 0
0
	0 6 216 0
	0 1 1
!
27e
-1aa00
-1aa00
2
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	846 0
	0 5.96046e-008
N 217
P 513 456.236
T -1
R 0 0
0
	0 6 218 0
	Name RND_L_2A61120
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	1 245.764
N 219
P 512 395.667
T -1
R 0 0
0
	0 6 220 0
	Name RND_L_29D77F8_X
	0 1 1
!
=
dynamics
script

;
end script
end dynamics
	2
	0 50
	1 0
N 221
P 512.667 742
T -1
R 0 0
0
	0 6 222 0
	Name RND_L_29D77F8
	0 1 1
!
27e
9682aa
723604
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	2
	0 40
	0.333537 0
N 223
P 501 781.334
T -1
R 0 0
0
	0 0 224 0
	Name RND_P_B191E00
	0 1 1
!
27e
9682aa
723604
1
0
0
1 0
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11.5 23
	23 0
	0 0
N 225
P 1298 78.8
T -1
R 0 0
0
	0 0 226 0
	0 1 1
!
27e
c86e00
c86e00
1
0
0
1 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11.5 23.2
	0 0
	23 0
N 227
P 1310 100
T -1
R 0 0
0
	0 6 228 0
	0 1 1
!
27e
c86e00
c86e00
2
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	0 0
	0 80
N 229
P 1290 110
T -1
R 0 0
0
	0 3 230 0
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_2A2E8D8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_2A2E8A8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_2A2E878",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_2A2E8D8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_2A2E8A8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_2A2E878",PG_10kvto15kv);
end script
end dynamics
	0 0 10 60
	0 3 231 0
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	0 0 10 56.3265
	0 6 232 0
	Name RND_L_2A2E878
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	0 0
	10 4.08163
	0 6 233 0
	Name RND_L_2A2E8A8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	9 4.08163
	9 56.3265
	0 2 234 0
	0 1 1
!
27e
000000
b4b4b4
0
0
0
0 0
	0 0 0 0
	0 6 235 0
	Name RND_L_2A2E8D8
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	9 55.5102
	1 60
	0 2 236 0
	0 1 1
!
27e
000000
b4b4b4
0
0
0
0 0
	0 0 0 0
N 237
P 1318 110
T -1
R 0 0
0
	0 3 238 0
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29D75E8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29D71C8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29D71F8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29D7288",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29D75E8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29D71C8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29D71F8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29D7288",PG_10kvto15kv);
end script
end dynamics
	0 0 10 61
	0 6 239 0
	Name RND_L_29D7288
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	1 56.4354
	9 61
	0 6 240 0
	Name RND_L_29D71F8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	10 0
	0 4.14966
	0 6 241 0
	Name RND_L_29D71C8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	1 18.6735
	1 57.2653
	0 6 242 0
	Name RND_L_29D75E8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	1 4.14966
	1 25.3129
	0 2 243 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 244
P 1310 230
T -1
R 0 0
0
	0 6 245 0
	0 1 1
!
27e
-1aa00
-1aa00
2
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 64
	0 0
N 246
P 697.333 558
T -1
R 0 0
0
	0 6 247 0
	Name RND_L_2A61120
	0 1 1
!
27e
-1aa00
-1aa00
1
1
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	1.16652 0
	0 45.9997
N 248
P 698 431.333
T -1
R 0 0
0
	0 6 249 0
	Name RND_L_2A61120
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	0 281
N 250
P 698 742
T -1
R 0 0
0
	0 6 251 0
	Name RND_L_29D77F8
	0 1 1
!
27e
9682aa
723604
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	2
	0 42
	0 0
N 252
P 685.833 780.667
T -1
R 0 0
0
	0 0 253 0
	Name RND_P_B191E00
	0 1 1
!
27e
9682aa
723604
1
0
0
1 0
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11.5 23
	23 0
	0 0
N 254
P 1028 454
T -1
R 0 0
0
	0 6 255 0
	Name RND_L_2A61120
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	0 252
N 256
P 1028 399.5
T -1
R 0 0
0
	0 6 257 0
	Name RND_L_29D77F8_Z
	0 1 1
!
27e
-1-100
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 45.8333
	0 0
N 258
P 1028 743
T -1
R 0 0
0
	0 6 259 0
	Name RND_L_29D77F8
	0 1 1
!
27e
9682aa
723604
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	2
	0 42.3333
	0 0
N 260
P 1017 781
T -1
R 0 0
0
	0 0 261 0
	Name RND_P_B191E00
	0 1 1
!
27e
9682aa
723604
1
0
0
1 0
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11.5 23
	23 0
	0 0
N 262
P 1199.34 452
T -1
R 0 0
0
	0 6 263 0
	Name RND_L_2A61120
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	0.241194 275
N 264
P 1200 746
T -1
R 0 0
0
	0 6 265 0
	Name RND_L_29D77F8
	0 1 1
!
27e
9682aa
723604
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	2
	0 36.6667
	0 0
N 266
P 1189.17 781
T -1
R 0 0
0
	0 0 267 0
	Name RND_P_B191E00
	0 1 1
!
27e
9682aa
723604
1
0
0
1 0
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11.5 23
	23 0
	0 0
N 268
P 1357.67 451.143
T -1
R 0 0
0
	0 6 269 0
	Name RND_L_2A61120
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	0 275
N 270
P 1546.43 452.714
T -1
R 0 0
0
	0 6 271 0
	Name RND_L_2A61120
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	0 275
N 272
P 347 444.667
T -1
R 0 0
0
	0 6 273 0
	Name RND_L_2A61120
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	0 275
N 274
P 346.667 395.667
T -1
R 0 0
0
	0 6 275 0
	Name RND_L_29D77F8_Y
	0 1 1
!
=
	2
	0 50.6663
	0.333293 0
N 276
P 213.333 449
T -1
R 0 0
0
	0 6 277 0
	Name RND_L_2A61120
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	0 275
N 278
P 212 400
T -1
R 0 0
0
	0 6 279 0
	Name RND_L_29D77F8
	0 1 1
!
27e
-1aa00
c86e00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 46.6667
	1.33299 0
N 280
P 84 400
T -1
R 0 0
0
	0 6 281 0
	Name RND_L_29D77F8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 45.3333
	0 0
N 282
P 420.5 153.5
T -1
R 0 0
0
	1 1 283 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	        11BBT10   STATION SERVICETRANSFORMER 1 SST#1      11.5KV/6.9kV
N 284
P 1089.5 152.5
T -1
R 0 0
0
	1 1 285 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	        12BBT10   STATION SERVICETRANSFORMER 2 SST#2      11.5KV/6.9kV
N 286
P 620 858
T 286 0 1 0 0
0 0
R 0 0
0
	0 3 287 0
	Name VAR211
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 288 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 289 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 290 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 291 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 292 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 293 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 294 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 295 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 296 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 297 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 298 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 299 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 300 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 301 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 302 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 303 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 304 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 305 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 306 0
	0 1 1
!
=
	0 0 0 0
N 307
P 620 858
T 286 0 1 0 0
0 0
R 0 0
0
	0 0 308 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 309
P 427 858
T 309 0 1 0 0
0 0
R 0 0
0
	0 3 310 0
	Name VAR212
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 311 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 312 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 313 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 314 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 315 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 316 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 317 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 318 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 319 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 320 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 321 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 322 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 323 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 324 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 325 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 326 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 327 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 328 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 329 0
	0 1 1
!
=
	0 0 0 0
N 330
P 427 858
T 309 0 1 0 0
0 0
R 0 0
0
	0 0 331 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 332
P 948.667 858
T 332 0 1 0 0
0 0
R 0 0
0
	0 3 333 0
	Name VAR213
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 334 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 335 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 336 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 337 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 338 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 339 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 340 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 341 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 342 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 343 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 344 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 345 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 346 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 347 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 348 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 349 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 350 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 351 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 352 0
	0 1 1
!
=
	0 0 0 0
N 353
P 948.667 858
T 332 0 1 0 0
0 0
R 0 0
0
	0 0 354 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 355
P 1370 364
T 355 0 1 0 0
0 0
R 0 0
0
	0 3 356 0
	Name VAR214
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 357 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 358 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 359 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 360 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 361 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 362 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 363 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 364 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 365 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 366 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 367 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 368 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 369 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 370 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 371 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 372 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 373 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 374 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 375 0
	0 1 1
!
=
	0 0 0 0
N 376
P 1370 364
T 355 0 1 0 0
0 0
R 0 0
0
	0 0 377 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 378
P 381 128
T -1
R 0 0
0
	0 6 379 0
	0 1 1
!
27e
c0c0c0
bfbfbf
0
0
0
0 0
	2
	0 0
	5 5
N 380
P 683 692.667
T -1
R 0 0
0
	0 3 381 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"RND_P_29F3420",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_P_29F3420",PG_5p5kvto10kv);
LcBg(SO_Obj,"RND_T_29F33F0",EL_MED_VOLT);
LcFg(SO_Obj,"RND_T_29F33F0",PG_250to5p5kv);
LcBg(SO_Obj,"RND_C_29F33C0",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F33C0",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F3390",PG_250to5p5kv);
LcFg(SO_Obj,"RND_C_29F3360",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 50
	0 5 382 0
	Name RND_C_29F3360
	0 1 1
!
2fe
-1aa00
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 31
	0 23040
	0 5 383 0
	Name RND_C_29F3390
	0 1 1
!
2fe
9682aa
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	0 20 30 30
	0 23040
	0 5 384 0
	Name RND_C_29F33C0
	0 1 1
!
2fe
-1aa00
-1aa00
1
0
0
0 0
1
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 30
	0 23040
	1 1 385 0
	Name RND_T_29F33F0
	0 1 1
!
346
9682aa
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	8 26 0
	Y
	0 0 386 0
	Name RND_P_29F3420
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11 14
	19 14
	15 6
	0 2 387 0
	0 1 1
!
27e
c0c0c0
bfbfbf
0
0
0
0 0
	0 0 0 0
N 388
P 498 692.667
T -1
R 0 0
0
	0 3 389 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"RND_P_29F3420",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_P_29F3420",PG_5p5kvto10kv);
LcBg(SO_Obj,"RND_T_29F33F0",EL_MED_VOLT);
LcFg(SO_Obj,"RND_T_29F33F0",PG_250to5p5kv);
LcBg(SO_Obj,"RND_C_29F33C0",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F33C0",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F3390",PG_250to5p5kv);
LcFg(SO_Obj,"RND_C_29F3360",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 50
	0 5 390 0
	Name RND_C_29F3360
	0 1 1
!
2fe
-1aa00
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 31
	0 23040
	0 5 391 0
	Name RND_C_29F3390
	0 1 1
!
2fe
9682aa
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	0 20 30 30
	0 23040
	0 5 392 0
	Name RND_C_29F33C0
	0 1 1
!
2fe
-1aa00
-1aa00
1
0
0
0 0
1
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 30
	0 23040
	1 1 393 0
	Name RND_T_29F33F0
	0 1 1
!
346
9682aa
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	8 26 0
	Y
	0 0 394 0
	Name RND_P_29F3420
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11 14
	19 14
	15 6
	0 2 395 0
	0 1 1
!
27e
c0c0c0
bfbfbf
0
0
0
0 0
	0 0 0 0
N 396
P 369 164
T -1
R 0 0
0
	0 3 397 0
	0 1 1
!
=
dynamics
script
LcFg(SO_Obj,"RND_P_29F3420",PG_10kvto15kv);
LcFg(SO_Obj,"RND_T_29F33F0",PG_10kvto15kv);
LcFg(SO_Obj,"RND_C_29F33C0",PG_10kvto15kv);
LcFg(SO_Obj,"RND_C_29F3390",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F3360",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29F3330",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29F3330",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29F3300",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29F3300",PG_10kvto15kv);
end script
end dynamics
	0 0 46 62
	0 6 398 0
	Name RND_L_29F3300
	0 1 1
!
27e
c86e00
c86e00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	6 8
	18.8 18.4
	0 6 399 0
	Name RND_L_29F3330
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	11.2 0
	0 15.2
	0 5 400 0
	Name RND_C_29F3360
	0 1 1
!
2fe
c86e00
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	16 10 30 31
	0 23040
	0 5 401 0
	Name RND_C_29F3390
	0 1 1
!
2fe
-1aa00
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	16 30 30 30
	0 23040
	0 5 402 0
	Name RND_C_29F33C0
	0 1 1
!
2fe
c86e00
-1-1-1
1
0
0
0 0
1
dynamics
script
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	16 10 30 30
	0 23040
	1 1 403 0
	Name RND_T_29F33F0
	0 1 1
!
346
c86e00
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	24 38 0
	Y
	0 0 404 0
	Name RND_P_29F3420
	0 1 1
!
27e
c86e00
-1-1-1
1
0
0
0 0
dynamics
script
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	27 26
	35 26
	31 18
	0 2 405 0
	0 1 1
!
27e
c0c0c0
bfbfbf
0
0
0
0 0
	0 0 0 0
N 406
P 1278 170
T -1
R 0 0
0
	0 3 407 0
	0 1 1
!
=
dynamics
script
LcFg(SO_Obj,"RND_P_29F3420",PG_10kvto15kv);
LcFg(SO_Obj,"RND_T_29F33F0",PG_10kvto15kv);
LcFg(SO_Obj,"RND_C_29F33C0",PG_10kvto15kv);
LcFg(SO_Obj,"RND_C_29F3390",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F3360",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29F3330",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29F3330",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29F3300",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29F3300",PG_10kvto15kv);
end script
end dynamics
	0 0 46 62
	0 6 408 0
	Name RND_L_29F3300
	0 1 1
!
27e
c86e00
c86e00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	6 8
	18.8 18.4
	0 6 409 0
	Name RND_L_29F3330
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	11.2 0
	0 15.2
	0 5 410 0
	Name RND_C_29F3360
	0 1 1
!
2fe
c86e00
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	16 10 30 31
	0 23040
	0 5 411 0
	Name RND_C_29F3390
	0 1 1
!
2fe
-1aa00
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	16 30 30 30
	0 23040
	0 5 412 0
	Name RND_C_29F33C0
	0 1 1
!
2fe
c86e00
-1-1-1
1
0
0
0 0
1
dynamics
script
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	16 10 30 30
	0 23040
	1 1 413 0
	Name RND_T_29F33F0
	0 1 1
!
346
c86e00
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	24 38 0
	Y
	0 0 414 0
	Name RND_P_29F3420
	0 1 1
!
27e
c86e00
-1-1-1
1
0
0
0 0
dynamics
script
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	27 26
	35 26
	31 18
	0 2 415 0
	0 1 1
!
27e
c0c0c0
bfbfbf
0
0
0
0 0
	0 0 0 0
N 416
P 1015 694
T -1
R 0 0
0
	0 3 417 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"RND_P_29F3420",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_P_29F3420",PG_5p5kvto10kv);
LcBg(SO_Obj,"RND_T_29F33F0",EL_MED_VOLT);
LcFg(SO_Obj,"RND_T_29F33F0",PG_250to5p5kv);
LcBg(SO_Obj,"RND_C_29F33C0",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F33C0",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F3390",PG_250to5p5kv);
LcFg(SO_Obj,"RND_C_29F3360",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 50
	0 5 418 0
	Name RND_C_29F3360
	0 1 1
!
2fe
-1aa00
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 31
	0 23040
	0 5 419 0
	Name RND_C_29F3390
	0 1 1
!
2fe
9682aa
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	0 20 30 30
	0 23040
	0 5 420 0
	Name RND_C_29F33C0
	0 1 1
!
2fe
-1aa00
-1aa00
1
0
0
0 0
1
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 30
	0 23040
	1 1 421 0
	Name RND_T_29F33F0
	0 1 1
!
346
9682aa
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	8 26 0
	Y
	0 0 422 0
	Name RND_P_29F3420
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11 14
	19 14
	15 6
	0 2 423 0
	0 1 1
!
27e
c0c0c0
bfbfbf
0
0
0
0 0
	0 0 0 0
N 424
P 1184.67 697
T -1
R 0 0
0
	0 3 425 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"RND_P_29F3420",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_P_29F3420",PG_5p5kvto10kv);
LcBg(SO_Obj,"RND_T_29F33F0",EL_MED_VOLT);
LcFg(SO_Obj,"RND_T_29F33F0",PG_250to5p5kv);
LcBg(SO_Obj,"RND_C_29F33C0",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F33C0",PG_5p5kvto10kv);
LcFg(SO_Obj,"RND_C_29F3390",PG_250to5p5kv);
LcFg(SO_Obj,"RND_C_29F3360",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 50
	0 5 426 0
	Name RND_C_29F3360
	0 1 1
!
2fe
-1aa00
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 31
	0 23040
	0 5 427 0
	Name RND_C_29F3390
	0 1 1
!
2fe
9682aa
-1-1-1
1
0
0
2 0
1
dynamics
script
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	0 20 30 30
	0 23040
	0 5 428 0
	Name RND_C_29F33C0
	0 1 1
!
2fe
-1aa00
-1aa00
1
0
0
0 0
1
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 0 30 30
	0 23040
	1 1 429 0
	Name RND_T_29F33F0
	0 1 1
!
346
9682aa
000000
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",EL_MED_VOLT);
LcFg(SO_Obj,"",PG_250to5p5kv);
end script
end dynamics
	8 26 0
	Y
	0 0 430 0
	Name RND_P_29F3420
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	3
	11 14
	19 14
	15 6
	0 2 431 0
	0 1 1
!
27e
c0c0c0
bfbfbf
0
0
0
0 0
	0 0 0 0
N 432
P 746.667 512.667
T 432 0 1 0 0
0 0
R 0 0
0
	0 3 433 0
	Name VAR215
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 434 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 435 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 436 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 437 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 438 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 439 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 440 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 441 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 442 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 443 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 444 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 445 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 446 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 447 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 448 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 449 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 450 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 451 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 452 0
	0 1 1
!
=
	0 0 0 0
N 453
P 746.667 512.667
T 432 0 1 0 0
0 0
R 0 0
0
	0 0 454 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 455
P 901 701.333
T -1
R 0 0
0
	1 1 456 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	10BFT20AUX. SERVICETRANS. #2
N 457
P 1075 701.333
T -1
R 0 0
0
	1 1 458 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	10BFU20AUX. SERVICETRANS #4
N 459
P 724 701.333
T -1
R 0 0
0
	1 1 460 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	10BFU10AUX. SERVICETRANS #3
N 461
P 533 701.333
T -1
R 0 0
0
	1 1 462 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	10BFT10AUX. SERVICETRANS #1
N 463
P 1596.33 376.333
T -1
R 0 0
0
	1 1 464 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	BUS-B
N 465
P 260 375
T -1
R 0 0
0
	1 1 466 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	BUS-A
N 467
P 95.3333 86.0003
T 467 0 1 0 0
0 0
R 0 0
0
	0 3 468 0
	Name VAR216
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 469 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 470 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 471 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 472 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 473 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 474 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 475 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 476 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 477 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 478 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 479 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 480 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 481 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 482 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 483 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 484 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 485 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 486 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 487 0
	0 1 1
!
=
	0 0 0 0
N 488
P 95.3333 86.0003
T 467 0 1 0 0
0 0
R 0 0
0
	0 0 489 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 490
P 95.3333 154.667
T 490 0 1 0 0
0 0
R 0 0
0
	0 3 491 0
	Name VAR217
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 492 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 493 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 494 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 495 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 496 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 497 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 498 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 499 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 500 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 501 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 502 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 503 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 504 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 505 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 506 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 507 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 508 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 509 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 510 0
	0 1 1
!
=
	0 0 0 0
N 511
P 95.3333 154.667
T 490 0 1 0 0
0 0
R 0 0
0
	0 0 512 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 513
P 95.3333 194
T 513 0 1 0 0
0 0
R 0 0
0
	0 3 514 0
	Name VAR218
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 515 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 516 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 517 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 518 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 519 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 520 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 521 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 522 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 523 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 524 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 525 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 526 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 527 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 528 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 529 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 530 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 531 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 532 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 533 0
	0 1 1
!
=
	0 0 0 0
N 534
P 95.3333 194
T 513 0 1 0 0
0 0
R 0 0
0
	0 0 535 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 536
P 95.3333 230.667
T 536 0 1 0 0
0 0
R 0 0
0
	0 3 537 0
	Name VAR219
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 538 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 539 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 540 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 541 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 542 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 543 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 544 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 545 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 546 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 547 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 548 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 549 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 550 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 551 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 552 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 553 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 554 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 555 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 556 0
	0 1 1
!
=
	0 0 0 0
N 557
P 95.3333 230.667
T 536 0 1 0 0
0 0
R 0 0
0
	0 0 558 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 559
P 95.3333 296.667
T 559 0 1 0 0
0 0
R 0 0
0
	0 3 560 0
	Name VAR220
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 561 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 562 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 563 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 564 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 565 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 566 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 567 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 568 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 569 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 570 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 571 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 572 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 573 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 574 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 575 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 576 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 577 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 578 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 579 0
	0 1 1
!
=
	0 0 0 0
N 580
P 95.3333 296.667
T 559 0 1 0 0
0 0
R 0 0
0
	0 0 581 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 582
P 1372 96.0003
T 582 0 1 0 0
0 0
R 0 0
0
	0 3 583 0
	Name VAR221
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 584 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 585 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 586 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 587 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 588 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 589 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 590 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 591 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 592 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 593 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 594 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 595 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 596 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 597 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 598 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 599 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 600 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 601 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 602 0
	0 1 1
!
=
	0 0 0 0
N 603
P 1372 96.0003
T 582 0 1 0 0
0 0
R 0 0
0
	0 0 604 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 605
P 1372 164.667
T 605 0 1 0 0
0 0
R 0 0
0
	0 3 606 0
	Name VAR222
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 607 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 608 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 609 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 610 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 611 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 612 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 613 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 614 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 615 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 616 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 617 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 618 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 619 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 620 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 621 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 622 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 623 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 624 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 625 0
	0 1 1
!
=
	0 0 0 0
N 626
P 1372 164.667
T 605 0 1 0 0
0 0
R 0 0
0
	0 0 627 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 628
P 1372 204
T 628 0 1 0 0
0 0
R 0 0
0
	0 3 629 0
	Name VAR223
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 630 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 631 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 632 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 633 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 634 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 635 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 636 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 637 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 638 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 639 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 640 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 641 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 642 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 643 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 644 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 645 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 646 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 647 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 648 0
	0 1 1
!
=
	0 0 0 0
N 649
P 1372 204
T 628 0 1 0 0
0 0
R 0 0
0
	0 0 650 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 651
P 1372 240.667
T 651 0 1 0 0
0 0
R 0 0
0
	0 3 652 0
	Name VAR224
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 653 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 654 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 655 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 656 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 657 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 658 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 659 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 660 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 661 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 662 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 663 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 664 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 665 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 666 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 667 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 668 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 669 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 670 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 671 0
	0 1 1
!
=
	0 0 0 0
N 672
P 1372 240.667
T 651 0 1 0 0
0 0
R 0 0
0
	0 0 673 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 674
P 1372 306.667
T 674 0 1 0 0
0 0
R 0 0
0
	0 3 675 0
	Name VAR225
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 676 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 677 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 678 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 679 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 680 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 681 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 682 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 683 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 684 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 685 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 686 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 687 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 688 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 689 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 690 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 691 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 692 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 693 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 694 0
	0 1 1
!
=
	0 0 0 0
N 695
P 1372 306.667
T 674 0 1 0 0
0 0
R 0 0
0
	0 0 696 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 697
P 110.667 56
T -1
R 0 0
0
	1 1 698 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	FEEDER-1 VOLTAGE
N 699
P 111.333 128.667
T -1
R 0 0
0
	1 1 700 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	FEEDER-1 CURRENT
N 701
P 92 270.667
T -1
R 0 0
0
	1 1 702 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	FEEDER-1 ACTIVE POWER
N 703
P 1382 70
T -1
R 0 0
0
	1 1 704 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	FEEDER-2 VOLTAGE
N 705
P 1382.67 138.666
T -1
R 0 0
0
	1 1 706 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	FEEDER-2 CURRENT
N 707
P 1363.33 284.666
T -1
R 0 0
0
	1 1 708 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	FEEDER-2 ACTIVE POWER
N 709
P 297.333 808.33
T -1
R 0 0
0
	1 1 710 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	CONDENSATE   PUMP #1
N 711
P 151.333 808.33
T -1
R 0 0
0
	1 1 712 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	HRSG#12 HP FW   PUMP #1
N 713
P 18.348 808.33
T -1
R 0 0
0
	1 1 714 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	HRSG#11 HP FW   PUMP #1
N 715
P 12 103
T -1
R 0 0
0
	0 4 716 0
	0 1 1
!
27e
c0c0c0
bfbfbf
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_GRAPHICS_BACKGROUND);
end script
end dynamics
	0 0 17 18 0 0
N 717
P 1278 858
T 717 0 1 0 0
0 0
R 0 0
0
	0 3 718 0
	Name VAR226
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 719 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 720 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 721 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 722 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 723 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 724 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 725 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 726 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 727 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 728 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 729 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 730 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 731 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 732 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 733 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 734 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 735 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 736 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 737 0
	0 1 1
!
=
	0 0 0 0
N 738
P 1278 858
T 717 0 1 0 0
0 0
R 0 0
0
	0 0 739 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 740
P 133.985 858
T 740 0 1 0 0
0 0
R 0 0
0
	0 3 741 0
	Name VAR227
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 742 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 743 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 744 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 745 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 746 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 747 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 748 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 749 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 750 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 751 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 752 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 753 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 754 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 755 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 756 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 757 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 758 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 759 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 760 0
	0 1 1
!
=
	0 0 0 0
N 761
P 133.985 858
T 740 0 1 0 0
0 0
R 0 0
0
	0 0 762 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 763
P 1468 858
T 763 0 1 0 0
0 0
R 0 0
0
	0 3 764 0
	Name VAR228
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 765 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 766 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 767 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 768 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 769 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 770 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 771 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 772 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 773 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 774 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 775 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 776 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 777 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 778 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 779 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 780 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 781 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 782 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 783 0
	0 1 1
!
=
	0 0 0 0
N 784
P 1468 858
T 763 0 1 0 0
0 0
R 0 0
0
	0 0 785 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 786
P 1314.33 808.33
T -1
R 0 0
0
	1 1 787 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	CONDENSATE   PUMP #2
N 788
P 1506.33 808.33
T -1
R 0 0
0
	1 1 789 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	HRSG#11 HP FW   PUMP #2
N 790
P 358 241
T 790 0 1 0 0
0 0
R 0 0
0
	0 3 791 0
	Name VAR229
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31
	0 6 792 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31
	0 6 793 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31
	31 0
	0 2 794 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 795
P 329 240
T 790 0 1 0 0
0 0
R 0 0
0
	0 3 796 0
	Name VAR230
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44
	0 3 797 0
	0 1 1
!
=
	0 35 20 9
	0 0 798 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35
	30 35
	30 35
	30 35
	0 0 799 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39
	23 39
	23 39
	23 39
	0 0 800 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43
	21 43
	0 2 801 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 802 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20
	20 35
	0 6 803 0
	Name S2
	0 1 1
!
=
	2
	20 20
	30 20
	0 6 804 0
	Name S1
	0 1 1
!
=
	2
	60 20
	70 20
	0 0 805 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20
	28 20
	28 20
	0 0 806 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20
	58 20
	58 20
	58 20
	0 5 807 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4
	0 23040
	0 5 808 0
	Name C2
	0 1 1
!
=
	57 17 4 4
	0 23040
	0 2 809 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 810
P 329 240
T 790 0 1 0 0
0 0
R 0 0
0
	0 0 811 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=11BBT10GT100XB02A;
//%TAG2%=11BBT10GT100XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44
	0 44
N 812
P 1266.67 227.667
T 812 0 1 0 0
0 0
R 0 0
0
	0 3 813 0
	Name VAR231
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31
	0 6 814 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31
	0 6 815 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31
	31 0
	0 2 816 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 817
P 1237.67 226.667
T 812 0 1 0 0
0 0
R 0 0
0
	0 3 818 0
	Name VAR232
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44
	0 3 819 0
	0 1 1
!
=
	0 35 20 9
	0 0 820 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35
	30 35
	30 35
	30 35
	0 0 821 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39
	23 39
	23 39
	23 39
	0 0 822 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43
	21 43
	0 2 823 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 824 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20
	20 35
	0 6 825 0
	Name S2
	0 1 1
!
=
	2
	20 20
	30 20
	0 6 826 0
	Name S1
	0 1 1
!
=
	2
	60 20
	70 20
	0 0 827 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20
	28 20
	28 20
	0 0 828 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20
	58 20
	58 20
	58 20
	0 5 829 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4
	0 23040
	0 5 830 0
	Name C2
	0 1 1
!
=
	57 17 4 4
	0 23040
	0 2 831 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 832
P 1237.67 226.667
T 812 0 1 0 0
0 0
R 0 0
0
	0 0 833 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=12BBT10GT100XB02A;
//%TAG2%=12BBT10GT100XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44
	0 44
N 834
P 475.667 432.166
T 834 0 1 0 0
0 0
R 0 0
0
	0 3 835 0
	Name VAR4
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_BreakerE_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad" || B;
}
func v_Congruency(){
TagRead(SO_Obj,SO_Tag2,".PV",C);
return (C < 0.5) || (C > 2.5 && C < 3.5);
}
func v_Open(){
TagRead(SO_Obj,SO_Tag2,".PV",D);
return D > 3.5 && D < 4.5;
}
func v_Closed(){
TagRead(SO_Obj,SO_Tag2,".PV",E11);
return E11 > 7.5 && E11 < 8.5;
}
func v_Tripped(){
TagRead(SO_Obj,SO_Tag2,".PV",F);
return F > 15.5 && F < 17.5;
}
func v_shadecolor(){
G=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",H);
if(v_BadQuality() && G || H > 99) return CHarmBQShadeClr;
if(v_Congruency()) return CHarmInTrblShadeClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func v_FillColor(){
I=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",J);
if(v_BadQuality() && I || J > 99) return CHarmBQClr;
if(v_Congruency()) return CHarmInTrblClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripClr;
return CHarmInTrblClr;
}
func Position(){
if(v_Closed()) return "Closed";
if(v_Open()) return "Opened";
if(v_Tripped()) return "Opened";
return "Opened";
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag3,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_shadecolor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag3,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_Position(){
return Position();
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_BreakerE_FNC END
//-----------------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if(gsa_Alarm()){
if(gsa_Orientation()=="Horizontal"){
object.AY.show = TRUE;
object.AY2.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.AY.show = FALSE;
object.AY2.show = TRUE;
} else {
object.AY.show = TRUE;
object.AY2.show = FALSE;
}
} else {
object.AY.show = FALSE;
object.AY2.show = FALSE;
}
if(gsa_Orientation()=="Horizontal"){
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.BASE.show = FALSE;
object.LINE1.show = FALSE;
object.LINE2.show = FALSE;
object.LINE3.show = FALSE;
object.LINE3O.show = FALSE;
object.BASE2.show = TRUE;
object.LINE11.show = TRUE;
object.LINE22.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE33O.show = FALSE;
object.LINE33.show = TRUE;
} else {
object.LINE33O.show = TRUE;
object.LINE33.show = FALSE;
}
} else {
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
}
//Graphic - Base/Base2
object.BASE.background = gsa_v_FillColor();
object.BASE.foreground = gsa_v_FillShadeColor();
object.BASE2.background = gsa_v_FillColor();
object.BASE2.foreground = gsa_v_FillShadeColor();
if(gsa_3Deffect()){
object.BASE.fillStyle = 15;
object.BASE2.fillStyle = 14;
} else {
object.BASE.fillStyle = 2;
object.BASE2.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.AY2.background = gsa_AlarmColor();
object.AY2.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.OUTL.show = FALSE;
end script
end dynamics
	0 0 60 54
	0 4 836 0
	Name OUTL
	0 0 1
!
=
	0 0 60 54 0 0
	0 3 837 0
	0 1 1
!
=
	0.27027 14.4643 59.4595 25.0714
	0 3 838 0
	0 1 1
!
=
	10 20.9732 39.4595 17.8393
	0 4 839 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	10 20.9732 39.4595 17.8393 0 0
	0 4 840 0
	Name BASE
	0 0 1
!
27e
808080
c0c0c0
0
0
0
2 0
	12.1622 22.9018 35.1351 13.9821 0 0
	0 2 841 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 842 0
	Name LINE1
	0 0 1
!
27e
000000
000000
0
0
0
1 0
	0.27027 32.7857 21.6216 0.964286 0 0
	0 4 843 0
	Name LINE2
	0 0 1
!
=
	38.1081 32.7857 21.6216 0.964286 0 0
	0 5 844 0
	Name LINE3
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	21.6216 25.0714 17.2973 14.4643
	0 11584
	0 5 845 0
	Name LINE3O
	0 0 1
!
=
	21.6216 14.4643 17.2973 14.4643
	0 11584
	0 2 846 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 847 0
	0 1 1
!
=
	14.3243 0.964286 31.3514 52.0714
	0 3 848 0
	0 1 1
!
=
	22.7027 8.4375 20 35.1964
	0 4 849 0
	Name AY2
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	22.7027 8.4375 20 35.1964 0 0
	0 4 850 0
	Name BASE2
	0 1 1
!
27e
808080
c0c0c0
0
0
0
2 0
	24.8649 10.3661 15.6757 31.3393 0 0
	0 2 851 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 852 0
	Name LINE11
	0 1 1
!
27e
000000
000000
0
0
0
1 0
	36.4865 33.75 1.08108 19.2857 0 0
	0 4 853 0
	Name LINE22
	0 1 1
!
=
	36.4865 0.964286 1.08108 19.2857 0 0
	0 5 854 0
	Name LINE33
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	28.3784 19.7679 17.2973 14.4643
	5760 11584
	0 5 855 0
	Name LINE33O
	0 1 1
!
=
	14.3243 19.7679 17.2973 14.4643
	5760 11584
	0 2 856 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 857 0
	0 1 1
!
=
	10.9654 2.65179 38.0692 48.6964
	0 6 858 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
2
0
0
0 0
	2
	10.9654 50.9895
	49.0346 3.00984
	0 6 859 0
	Name QL2
	0 0 1
!
=
	2
	11.5171 2.65179
	48.4829 51.3482
	0 2 860 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 861 0
	0 1 1
!
=
	0 0 0 0
N 862
P 487.829 443.255
T 834 0 1 0 0
0 0
R 0 0
0
	0 3 863 0
	Name VAR5
	0 1 1
!
27e
000000
d4d0c8
1
0
0
0 0
dynamics
script
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if (value == 1) {
object.show = TRUE;
} else {
object.show = FALSE;
object.ghostelement=FALSE;
}
end script
end dynamics
	0 0 35.6757 31.8214
	0 4 864 0
	0 1 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 35.6757 31.8214 0 0
	0 6 865 0
	0 1 1
!
=
	2
	35.0548 0.830134
	0.604671 31.5797
	0 6 866 0
	0 1 1
!
=
	2
	0.604671 0.830134
	34.859 31.4093
	0 2 867 0
	0 1 1
!
27e
000000
d4d0c8
0
0
0
0 0
	0 0 0 0
N 868
P 475.667 432.166
T 834 0 1 0 0
0 0
R 0 0
0
	0 0 869 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_BREAKERE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG3%=4;
//%TAG%_MAINT=5;
}

func Sym_Tag_Refr() {
//%TAG1%=00BFT10GT110;
//%TAG2%=00BFT10GT110_POS;
//%TAG3%=00BFT10GT110_MAINT;
//%TAG%_MAINT=%TAG%_MAINT;
}

//***GblSymDetails***
;DTLS; ORIENTATION = "Vertical"
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; GV_BQCOLOR = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	60 0
	60 54
	0 54
N 870
P 469 548.399
T 870 0 1 0 0
0 0
R 0 0
0
	0 3 871 0
	Name VAR234
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 872 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 873 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 874 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 875
P 440 547.399
T 870 0 1 0 0
0 0
R 0 0
0
	0 3 876 0
	Name VAR235
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 877 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 878 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 879 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 880 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 881 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 882 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 883 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 884 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 885 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 886 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 887 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 888 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 889 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 890
P 440 547.399
T 870 0 1 0 0
0 0
R 0 0
0
	0 0 891 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=00BFT10GT110XB02A;
//%TAG2%=00BFT10GT110XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 892
P 697.333 399.667
T -1
R 0 0
0
	0 6 893 0
	Name RND_L_29D77F8
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 45.6663
	0.666646 0
N 894
P 655 548.399
T 894 0 1 0 0
0 0
R 0 0
0
	0 3 895 0
	Name VAR236
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 896 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 897 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 898 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 899
P 626 547.399
T 894 0 1 0 0
0 0
R 0 0
0
	0 3 900 0
	Name VAR237
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 901 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 902 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 903 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 904 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 905 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 906 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 907 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 908 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 909 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 910 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 911 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 912 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 913 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 914
P 626 547.399
T 894 0 1 0 0
0 0
R 0 0
0
	0 0 915 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=00BFU10GT111XB02A;
//%TAG2%=00BFU10GT111XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 916
P 990.67 432.166
T 916 0 1 0 0
0 0
R 0 0
0
	0 3 917 0
	Name VAR6
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_BreakerE_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad" || B;
}
func v_Congruency(){
TagRead(SO_Obj,SO_Tag2,".PV",C);
return (C < 0.5) || (C > 2.5 && C < 3.5);
}
func v_Open(){
TagRead(SO_Obj,SO_Tag2,".PV",D);
return D > 3.5 && D < 4.5;
}
func v_Closed(){
TagRead(SO_Obj,SO_Tag2,".PV",E11);
return E11 > 7.5 && E11 < 8.5;
}
func v_Tripped(){
TagRead(SO_Obj,SO_Tag2,".PV",F);
return F > 15.5 && F < 17.5;
}
func v_shadecolor(){
G=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",H);
if(v_BadQuality() && G || H > 99) return CHarmBQShadeClr;
if(v_Congruency()) return CHarmInTrblShadeClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func v_FillColor(){
I=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",J);
if(v_BadQuality() && I || J > 99) return CHarmBQClr;
if(v_Congruency()) return CHarmInTrblClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripClr;
return CHarmInTrblClr;
}
func Position(){
if(v_Closed()) return "Closed";
if(v_Open()) return "Opened";
if(v_Tripped()) return "Opened";
return "Opened";
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag3,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_shadecolor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag3,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_Position(){
return Position();
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_BreakerE_FNC END
//-----------------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if(gsa_Alarm()){
if(gsa_Orientation()=="Horizontal"){
object.AY.show = TRUE;
object.AY2.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.AY.show = FALSE;
object.AY2.show = TRUE;
} else {
object.AY.show = TRUE;
object.AY2.show = FALSE;
}
} else {
object.AY.show = FALSE;
object.AY2.show = FALSE;
}
if(gsa_Orientation()=="Horizontal"){
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.BASE.show = FALSE;
object.LINE1.show = FALSE;
object.LINE2.show = FALSE;
object.LINE3.show = FALSE;
object.LINE3O.show = FALSE;
object.BASE2.show = TRUE;
object.LINE11.show = TRUE;
object.LINE22.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE33O.show = FALSE;
object.LINE33.show = TRUE;
} else {
object.LINE33O.show = TRUE;
object.LINE33.show = FALSE;
}
} else {
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
}
//Graphic - Base/Base2
object.BASE.background = gsa_v_FillColor();
object.BASE.foreground = gsa_v_FillShadeColor();
object.BASE2.background = gsa_v_FillColor();
object.BASE2.foreground = gsa_v_FillShadeColor();
if(gsa_3Deffect()){
object.BASE.fillStyle = 15;
object.BASE2.fillStyle = 14;
} else {
object.BASE.fillStyle = 2;
object.BASE2.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.AY2.background = gsa_AlarmColor();
object.AY2.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.OUTL.show = FALSE;
end script
end dynamics
	0 0 60 54
	0 4 918 0
	Name OUTL
	0 0 1
!
=
	0 0 60 54 0 0
	0 3 919 0
	0 1 1
!
=
	0.27027 14.4643 59.4595 25.0714
	0 3 920 0
	0 1 1
!
=
	10 20.9732 39.4595 17.8393
	0 4 921 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	10 20.9732 39.4595 17.8393 0 0
	0 4 922 0
	Name BASE
	0 0 1
!
27e
808080
c0c0c0
0
0
0
2 0
	12.1622 22.9018 35.1351 13.9821 0 0
	0 2 923 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 924 0
	Name LINE1
	0 0 1
!
27e
000000
000000
0
0
0
1 0
	0.27027 32.7857 21.6216 0.964286 0 0
	0 4 925 0
	Name LINE2
	0 0 1
!
=
	38.1081 32.7857 21.6216 0.964286 0 0
	0 5 926 0
	Name LINE3
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	21.6216 25.0714 17.2973 14.4643
	0 11584
	0 5 927 0
	Name LINE3O
	0 0 1
!
=
	21.6216 14.4643 17.2973 14.4643
	0 11584
	0 2 928 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 929 0
	0 1 1
!
=
	14.3243 0.964286 31.3514 52.0714
	0 3 930 0
	0 1 1
!
=
	22.7027 8.4375 20 35.1964
	0 4 931 0
	Name AY2
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	22.7027 8.4375 20 35.1964 0 0
	0 4 932 0
	Name BASE2
	0 1 1
!
27e
808080
c0c0c0
0
0
0
2 0
	24.8649 10.3661 15.6757 31.3393 0 0
	0 2 933 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 934 0
	Name LINE11
	0 1 1
!
27e
000000
000000
0
0
0
1 0
	36.4865 33.75 1.08108 19.2857 0 0
	0 4 935 0
	Name LINE22
	0 1 1
!
=
	36.4865 0.964286 1.08108 19.2857 0 0
	0 5 936 0
	Name LINE33
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	28.3784 19.7679 17.2973 14.4643
	5760 11584
	0 5 937 0
	Name LINE33O
	0 1 1
!
=
	14.3243 19.7679 17.2973 14.4643
	5760 11584
	0 2 938 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 939 0
	0 1 1
!
=
	10.9654 2.65179 38.0692 48.6964
	0 6 940 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
2
0
0
0 0
	2
	10.9654 50.9895
	49.0346 3.00984
	0 6 941 0
	Name QL2
	0 0 1
!
=
	2
	11.5171 2.65179
	48.4829 51.3482
	0 2 942 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 943 0
	0 1 1
!
=
	0 0 0 0
N 944
P 1002.83 443.255
T 916 0 1 0 0
0 0
R 0 0
0
	0 3 945 0
	Name VAR7
	0 1 1
!
27e
000000
d4d0c8
1
0
0
0 0
dynamics
script
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if (value == 1) {
object.show = TRUE;
} else {
object.show = FALSE;
object.ghostelement=FALSE;
}
end script
end dynamics
	0 0 35.6757 31.8214
	0 4 946 0
	0 1 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 35.6757 31.8214 0 0
	0 6 947 0
	0 1 1
!
=
	2
	35.0548 0.830134
	0.604671 31.5797
	0 6 948 0
	0 1 1
!
=
	2
	0.604671 0.830134
	34.859 31.4093
	0 2 949 0
	0 1 1
!
27e
000000
d4d0c8
0
0
0
0 0
	0 0 0 0
N 950
P 990.67 432.166
T 916 0 1 0 0
0 0
R 0 0
0
	0 0 951 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_BREAKERE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG3%=4;
//%TAG%_MAINT=5;
}

func Sym_Tag_Refr() {
//%TAG1%=00BFT20GT115;
//%TAG2%=00BFT20GT115_POS;
//%TAG3%=00BFT20GT115_MAINT;
//%TAG%_MAINT=%TAG%_MAINT;
}

//***GblSymDetails***
;DTLS; ORIENTATION = "Vertical"
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; GV_BQCOLOR = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	60 0
	60 54
	0 54
N 952
P 986.2 548.399
T 952 0 1 0 0
0 0
R 0 0
0
	0 3 953 0
	Name VAR239
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 954 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 955 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 956 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 957
P 957.2 547.399
T 952 0 1 0 0
0 0
R 0 0
0
	0 3 958 0
	Name VAR240
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 959 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 960 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 961 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 962 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 963 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 964 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 965 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 966 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 967 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 968 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 969 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 970 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 971 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 972
P 957.2 547.399
T 952 0 1 0 0
0 0
R 0 0
0
	0 0 973 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=00BFT20GT115XB02A;
//%TAG2%=00BFT20GT115XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 974
P 1198.67 400.5
T -1
R 0 0
0
	0 6 975 0
	Name RND_L_29D77F8
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 31.5
	0.673096 0
N 976
P 1161.67 432.166
T 976 0 1 0 0
0 0
R 0 0
0
	0 3 977 0
	Name VAR8
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_BreakerE_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad" || B;
}
func v_Congruency(){
TagRead(SO_Obj,SO_Tag2,".PV",C);
return (C < 0.5) || (C > 2.5 && C < 3.5);
}
func v_Open(){
TagRead(SO_Obj,SO_Tag2,".PV",D);
return D > 3.5 && D < 4.5;
}
func v_Closed(){
TagRead(SO_Obj,SO_Tag2,".PV",E11);
return E11 > 7.5 && E11 < 8.5;
}
func v_Tripped(){
TagRead(SO_Obj,SO_Tag2,".PV",F);
return F > 15.5 && F < 17.5;
}
func v_shadecolor(){
G=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",H);
if(v_BadQuality() && G || H > 99) return CHarmBQShadeClr;
if(v_Congruency()) return CHarmInTrblShadeClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func v_FillColor(){
I=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",J);
if(v_BadQuality() && I || J > 99) return CHarmBQClr;
if(v_Congruency()) return CHarmInTrblClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripClr;
return CHarmInTrblClr;
}
func Position(){
if(v_Closed()) return "Closed";
if(v_Open()) return "Opened";
if(v_Tripped()) return "Opened";
return "Opened";
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag3,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_shadecolor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag3,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_Position(){
return Position();
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_BreakerE_FNC END
//-----------------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if(gsa_Alarm()){
if(gsa_Orientation()=="Horizontal"){
object.AY.show = TRUE;
object.AY2.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.AY.show = FALSE;
object.AY2.show = TRUE;
} else {
object.AY.show = TRUE;
object.AY2.show = FALSE;
}
} else {
object.AY.show = FALSE;
object.AY2.show = FALSE;
}
if(gsa_Orientation()=="Horizontal"){
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.BASE.show = FALSE;
object.LINE1.show = FALSE;
object.LINE2.show = FALSE;
object.LINE3.show = FALSE;
object.LINE3O.show = FALSE;
object.BASE2.show = TRUE;
object.LINE11.show = TRUE;
object.LINE22.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE33O.show = FALSE;
object.LINE33.show = TRUE;
} else {
object.LINE33O.show = TRUE;
object.LINE33.show = FALSE;
}
} else {
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
}
//Graphic - Base/Base2
object.BASE.background = gsa_v_FillColor();
object.BASE.foreground = gsa_v_FillShadeColor();
object.BASE2.background = gsa_v_FillColor();
object.BASE2.foreground = gsa_v_FillShadeColor();
if(gsa_3Deffect()){
object.BASE.fillStyle = 15;
object.BASE2.fillStyle = 14;
} else {
object.BASE.fillStyle = 2;
object.BASE2.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.AY2.background = gsa_AlarmColor();
object.AY2.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.OUTL.show = FALSE;
end script
end dynamics
	0 0 60 54
	0 4 978 0
	Name OUTL
	0 0 1
!
=
	0 0 60 54 0 0
	0 3 979 0
	0 1 1
!
=
	0.27027 14.4643 59.4595 25.0714
	0 3 980 0
	0 1 1
!
=
	10 20.9732 39.4595 17.8393
	0 4 981 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	10 20.9732 39.4595 17.8393 0 0
	0 4 982 0
	Name BASE
	0 0 1
!
27e
808080
c0c0c0
0
0
0
2 0
	12.1622 22.9018 35.1351 13.9821 0 0
	0 2 983 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 984 0
	Name LINE1
	0 0 1
!
27e
000000
000000
0
0
0
1 0
	0.27027 32.7857 21.6216 0.964286 0 0
	0 4 985 0
	Name LINE2
	0 0 1
!
=
	38.1081 32.7857 21.6216 0.964286 0 0
	0 5 986 0
	Name LINE3
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	21.6216 25.0714 17.2973 14.4643
	0 11584
	0 5 987 0
	Name LINE3O
	0 0 1
!
=
	21.6216 14.4643 17.2973 14.4643
	0 11584
	0 2 988 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 989 0
	0 1 1
!
=
	14.3243 0.964286 31.3514 52.0714
	0 3 990 0
	0 1 1
!
=
	22.7027 8.4375 20 35.1964
	0 4 991 0
	Name AY2
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	22.7027 8.4375 20 35.1964 0 0
	0 4 992 0
	Name BASE2
	0 1 1
!
27e
808080
c0c0c0
0
0
0
2 0
	24.8649 10.3661 15.6757 31.3393 0 0
	0 2 993 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 994 0
	Name LINE11
	0 1 1
!
27e
000000
000000
0
0
0
1 0
	36.4865 33.75 1.08108 19.2857 0 0
	0 4 995 0
	Name LINE22
	0 1 1
!
=
	36.4865 0.964286 1.08108 19.2857 0 0
	0 5 996 0
	Name LINE33
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	28.3784 19.7679 17.2973 14.4643
	5760 11584
	0 5 997 0
	Name LINE33O
	0 1 1
!
=
	14.3243 19.7679 17.2973 14.4643
	5760 11584
	0 2 998 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 999 0
	0 1 1
!
=
	10.9654 2.65179 38.0692 48.6964
	0 6 1000 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
2
0
0
0 0
	2
	10.9654 50.9895
	49.0346 3.00984
	0 6 1001 0
	Name QL2
	0 0 1
!
=
	2
	11.5171 2.65179
	48.4829 51.3482
	0 2 1002 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 1003 0
	0 1 1
!
=
	0 0 0 0
N 1004
P 1173.83 443.255
T 976 0 1 0 0
0 0
R 0 0
0
	0 3 1005 0
	Name VAR9
	0 1 1
!
27e
000000
d4d0c8
1
0
0
0 0
dynamics
script
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if (value == 1) {
object.show = TRUE;
} else {
object.show = FALSE;
object.ghostelement=FALSE;
}
end script
end dynamics
	0 0 35.6757 31.8214
	0 4 1006 0
	0 1 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 35.6757 31.8214 0 0
	0 6 1007 0
	0 1 1
!
=
	2
	35.0548 0.830134
	0.604671 31.5797
	0 6 1008 0
	0 1 1
!
=
	2
	0.604671 0.830134
	34.859 31.4093
	0 2 1009 0
	0 1 1
!
27e
000000
d4d0c8
0
0
0
0 0
	0 0 0 0
N 1010
P 1161.67 432.166
T 976 0 1 0 0
0 0
R 0 0
0
	0 0 1011 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_BREAKERE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG3%=4;
//%TAG%_MAINT=5;
}

func Sym_Tag_Refr() {
//%TAG1%=00BFU20GT116;
//%TAG2%=00BFU20GT116_POS;
//%TAG3%=00BFU20GT116_MAINT;
//%TAG%_MAINT=%TAG%_MAINT;
}

//***GblSymDetails***
;DTLS; ORIENTATION = "Vertical"
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; GV_BQCOLOR = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	60 0
	60 54
	0 54
N 1012
P 1157.2 548.399
T 1012 0 1 0 0
0 0
R 0 0
0
	0 3 1013 0
	Name VAR242
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 1014 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 1015 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 1016 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 1017
P 1128.2 547.399
T 1012 0 1 0 0
0 0
R 0 0
0
	0 3 1018 0
	Name VAR243
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 1019 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 1020 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 1021 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 1022 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 1023 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 1024 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 1025 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 1026 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 1027 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 1028 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 1029 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 1030 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 1031 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1032
P 1128.2 547.399
T 1012 0 1 0 0
0 0
R 0 0
0
	0 0 1033 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=00BFU20GT116XB02A;
//%TAG2%=00BFU20GT116XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 1034
P 661.333 432.166
T 1034 0 1 0 0
0 0
R 0 0
0
	0 3 1035 0
	Name VAR10
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_BreakerE_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad" || B;
}
func v_Congruency(){
TagRead(SO_Obj,SO_Tag2,".PV",C);
return (C < 0.5) || (C > 2.5 && C < 3.5);
}
func v_Open(){
TagRead(SO_Obj,SO_Tag2,".PV",D);
return D > 3.5 && D < 4.5;
}
func v_Closed(){
TagRead(SO_Obj,SO_Tag2,".PV",E11);
return E11 > 7.5 && E11 < 8.5;
}
func v_Tripped(){
TagRead(SO_Obj,SO_Tag2,".PV",F);
return F > 15.5 && F < 17.5;
}
func v_shadecolor(){
G=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",H);
if(v_BadQuality() && G || H > 99) return CHarmBQShadeClr;
if(v_Congruency()) return CHarmInTrblShadeClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func v_FillColor(){
I=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",J);
if(v_BadQuality() && I || J > 99) return CHarmBQClr;
if(v_Congruency()) return CHarmInTrblClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripClr;
return CHarmInTrblClr;
}
func Position(){
if(v_Closed()) return "Closed";
if(v_Open()) return "Opened";
if(v_Tripped()) return "Opened";
return "Opened";
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag3,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_shadecolor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag3,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_Position(){
return Position();
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_BreakerE_FNC END
//-----------------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if(gsa_Alarm()){
if(gsa_Orientation()=="Horizontal"){
object.AY.show = TRUE;
object.AY2.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.AY.show = FALSE;
object.AY2.show = TRUE;
} else {
object.AY.show = TRUE;
object.AY2.show = FALSE;
}
} else {
object.AY.show = FALSE;
object.AY2.show = FALSE;
}
if(gsa_Orientation()=="Horizontal"){
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.BASE.show = FALSE;
object.LINE1.show = FALSE;
object.LINE2.show = FALSE;
object.LINE3.show = FALSE;
object.LINE3O.show = FALSE;
object.BASE2.show = TRUE;
object.LINE11.show = TRUE;
object.LINE22.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE33O.show = FALSE;
object.LINE33.show = TRUE;
} else {
object.LINE33O.show = TRUE;
object.LINE33.show = FALSE;
}
} else {
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
}
//Graphic - Base/Base2
object.BASE.background = gsa_v_FillColor();
object.BASE.foreground = gsa_v_FillShadeColor();
object.BASE2.background = gsa_v_FillColor();
object.BASE2.foreground = gsa_v_FillShadeColor();
if(gsa_3Deffect()){
object.BASE.fillStyle = 15;
object.BASE2.fillStyle = 14;
} else {
object.BASE.fillStyle = 2;
object.BASE2.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.AY2.background = gsa_AlarmColor();
object.AY2.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.OUTL.show = FALSE;
end script
end dynamics
	0 0 60 54
	0 4 1036 0
	Name OUTL
	0 0 1
!
=
	0 0 60 54 0 0
	0 3 1037 0
	0 1 1
!
=
	0.27027 14.4643 59.4595 25.0714
	0 3 1038 0
	0 1 1
!
=
	10 20.9732 39.4595 17.8393
	0 4 1039 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	10 20.9732 39.4595 17.8393 0 0
	0 4 1040 0
	Name BASE
	0 0 1
!
27e
808080
c0c0c0
0
0
0
2 0
	12.1622 22.9018 35.1351 13.9821 0 0
	0 2 1041 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 1042 0
	Name LINE1
	0 0 1
!
27e
000000
000000
0
0
0
1 0
	0.27027 32.7857 21.6216 0.964286 0 0
	0 4 1043 0
	Name LINE2
	0 0 1
!
=
	38.1081 32.7857 21.6216 0.964286 0 0
	0 5 1044 0
	Name LINE3
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	21.6216 25.0714 17.2973 14.4643
	0 11584
	0 5 1045 0
	Name LINE3O
	0 0 1
!
=
	21.6216 14.4643 17.2973 14.4643
	0 11584
	0 2 1046 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1047 0
	0 1 1
!
=
	14.3243 0.964286 31.3514 52.0714
	0 3 1048 0
	0 1 1
!
=
	22.7027 8.4375 20 35.1964
	0 4 1049 0
	Name AY2
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	22.7027 8.4375 20 35.1964 0 0
	0 4 1050 0
	Name BASE2
	0 1 1
!
27e
808080
c0c0c0
0
0
0
2 0
	24.8649 10.3661 15.6757 31.3393 0 0
	0 2 1051 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 1052 0
	Name LINE11
	0 1 1
!
27e
000000
000000
0
0
0
1 0
	36.4865 33.75 1.08108 19.2857 0 0
	0 4 1053 0
	Name LINE22
	0 1 1
!
=
	36.4865 0.964286 1.08108 19.2857 0 0
	0 5 1054 0
	Name LINE33
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	28.3784 19.7679 17.2973 14.4643
	5760 11584
	0 5 1055 0
	Name LINE33O
	0 1 1
!
=
	14.3243 19.7679 17.2973 14.4643
	5760 11584
	0 2 1056 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1057 0
	0 1 1
!
=
	10.9654 2.65179 38.0692 48.6964
	0 6 1058 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
2
0
0
0 0
	2
	10.9654 50.9895
	49.0346 3.00984
	0 6 1059 0
	Name QL2
	0 0 1
!
=
	2
	11.5171 2.65179
	48.4829 51.3482
	0 2 1060 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 1061 0
	0 1 1
!
=
	0 0 0 0
N 1062
P 673.495 443.255
T 1034 0 1 0 0
0 0
R 0 0
0
	0 3 1063 0
	Name VAR11
	0 1 1
!
27e
000000
d4d0c8
1
0
0
0 0
dynamics
script
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if (value == 1) {
object.show = TRUE;
} else {
object.show = FALSE;
object.ghostelement=FALSE;
}
end script
end dynamics
	0 0 35.6757 31.8214
	0 4 1064 0
	0 1 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 35.6757 31.8214 0 0
	0 6 1065 0
	0 1 1
!
=
	2
	35.0548 0.830134
	0.604671 31.5797
	0 6 1066 0
	0 1 1
!
=
	2
	0.604671 0.830134
	34.859 31.4093
	0 2 1067 0
	0 1 1
!
27e
000000
d4d0c8
0
0
0
0 0
	0 0 0 0
N 1068
P 661.333 432.166
T 1034 0 1 0 0
0 0
R 0 0
0
	0 0 1069 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_BREAKERE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG3%=4;
//%TAG%_MAINT=5;
}

func Sym_Tag_Refr() {
//%TAG1%=00BFU10GT111;
//%TAG2%=00BFU10GT111_POS;
//%TAG3%=00BFU10GT111_MAINT;
//%TAG%_MAINT=%TAG%_MAINT;
}

//***GblSymDetails***
;DTLS; ORIENTATION = "Vertical"
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; GV_BQCOLOR = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	60 0
	60 54
	0 54
N 1070
P 1357.33 399.833
T -1
R 0 0
0
	0 6 1071 0
	Name RND_L_29D77F8
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 36.167
	0.336833 0
N 1072
P 1546 400.167
T -1
R 0 0
0
	0 6 1073 0
	Name RND_L_29D77F8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 35.833
	0.430054 0
N 1074
P 470.667 234.667
T -1
R 0 0
0
	0 4 1075 0
	Name VAR102
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 25 25 5 0
N 1076
P 1146 234.667
T -1
R 0 0
0
	0 4 1077 0
	Name VAR103
	0 1 1
!
=
	0 0 25 25 5 0
N 1078
P 619 742
T -1
R 0 0
0
	0 4 1079 0
	Name VAR1
	0 1 1
!
=
	0 0 25 25 5 0
N 1080
P 532 364
T 1080 0 1 0 0
0 0
R 0 0
0
	0 3 1081 0
	Name VAR248
	0 1 1
!
=
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 1082 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 1083 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 1084 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 1085 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 1086 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 1087 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1088 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 1089 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 1090 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 1091 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1092 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 1093 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 1094 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 1095 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1096 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 1097 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 1098 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 1099 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 1100 0
	0 1 1
!
=
	0 0 0 0
N 1101
P 532 364
T 1080 0 1 0 0
0 0
R 0 0
0
	0 0 1102 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 1103
P 998 362
T 1103 0 1 0 0
0 0
R 0 0
0
	0 3 1104 0
	Name VAR249
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 1105 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 1106 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 1107 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 1108 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 1109 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 1110 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1111 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 1112 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 1113 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 1114 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1115 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 1116 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 1117 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 1118 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1119 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 1120 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 1121 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 1122 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 1123 0
	0 1 1
!
=
	0 0 0 0
N 1124
P 998 362
T 1103 0 1 0 0
0 0
R 0 0
0
	0 0 1125 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 1126
P 567.541 334
T -1
R 0 0
0
	1 1 1127 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	BUS-A VOLTAGE
N 1128
P 1028.54 336
T -1
R 0 0
0
	1 1 1129 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	BUS-B VOLTAGE
N 1130
P 1121.33 858
T 1130 0 1 0 0
0 0
R 0 0
0
	0 3 1131 0
	Name VAR250
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 1132 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 1133 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 1134 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 1135 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 1136 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 1137 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1138 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 1139 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 1140 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 1141 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1142 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 1143 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 1144 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 1145 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1146 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 1147 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 1148 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 1149 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 1150 0
	0 1 1
!
=
	0 0 0 0
N 1151
P 1121.33 858
T 1130 0 1 0 0
0 0
R 0 0
0
	0 0 1152 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 1153
P 3 858
T 1153 0 1 0 0
0 0
R 0 0
0
	0 3 1154 0
	Name VAR251
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 1155 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 1156 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 1157 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 1158 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 1159 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 1160 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1161 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 1162 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 1163 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 1164 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1165 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 1166 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 1167 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 1168 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1169 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 1170 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 1171 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 1172 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 1173 0
	0 1 1
!
=
	0 0 0 0
N 1174
P 3 858
T 1153 0 1 0 0
0 0
R 0 0
0
	0 0 1175 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 1176
P 267.485 858
T 1176 0 1 0 0
0 0
R 0 0
0
	0 3 1177 0
	Name VAR252
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 1178 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 1179 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 1180 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 1181 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 1182 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 1183 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1184 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 1185 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 1186 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 1187 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1188 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 1189 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 1190 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 1191 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1192 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 1193 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 1194 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 1195 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 1196 0
	0 1 1
!
=
	0 0 0 0
N 1197
P 267.485 858
T 1176 0 1 0 0
0 0
R 0 0
0
	0 0 1198 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 1199
P 1723.43 450.714
T -1
R 0 0
0
	0 6 1200 0
	Name RND_L_2A61120
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 0
	0 275
N 1201
P 1654 858
T 1201 0 1 0 0
0 0
R 0 0
0
	0 3 1202 0
	Name VAR253
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 1203 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 1204 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 1205 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 1206 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 1207 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 1208 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1209 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 1210 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 1211 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 1212 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1213 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 1214 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 1215 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 1216 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 1217 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 1218 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 1219 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 1220 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 1221 0
	0 1 1
!
=
	0 0 0 0
N 1222
P 1654 858
T 1201 0 1 0 0
0 0
R 0 0
0
	0 0 1223 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 1224
P 1682.33 808.33
T -1
R 0 0
0
	1 1 1225 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	HRSG#12 HP FW   PUMP #2
N 1226
P 1722.67 400.167
T -1
R 0 0
0
	0 6 1227 0
	Name RND_L_29D77F8
	0 1 1
!
27e
-1aa00
-1aa00
1
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 34.4997
	0.763346 0
N 1228
P 172 548.399
T 1228 0 1 0 0
0 0
R 0 0
0
	0 3 1229 0
	Name VAR254
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 1230 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 1231 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 1232 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 1233
P 143 547.399
T 1228 0 1 0 0
0 0
R 0 0
0
	0 3 1234 0
	Name VAR255
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 1235 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 1236 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 1237 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 1238 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 1239 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 1240 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 1241 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 1242 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 1243 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 1244 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 1245 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 1246 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 1247 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1248
P 143 547.399
T 1228 0 1 0 0
0 0
R 0 0
0
	0 0 1249 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=12LAC21AP001XB02A;
//%TAG2%=12LAC21AP001XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 1250
P 43 541.399
T 1250 0 1 0 0
0 0
R 0 0
0
	0 3 1251 0
	Name VAR256
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 1252 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 1253 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 1254 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 1255
P 14 540.399
T 1250 0 1 0 0
0 0
R 0 0
0
	0 3 1256 0
	Name VAR257
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 1257 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 1258 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 1259 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 1260 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 1261 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 1262 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 1263 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 1264 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 1265 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 1266 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 1267 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 1268 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 1269 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1270
P 14 540.399
T 1250 0 1 0 0
0 0
R 0 0
0
	0 0 1271 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=11LAC21AP001XB02A;
//%TAG2%=11LAC21AP001XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 1272
P 305 548.399
T 1272 0 1 0 0
0 0
R 0 0
0
	0 3 1273 0
	Name VAR258
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 1274 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 1275 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 1276 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 1277
P 276 547.399
T 1272 0 1 0 0
0 0
R 0 0
0
	0 3 1278 0
	Name VAR259
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 1279 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 1280 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 1281 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 1282 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 1283 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 1284 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 1285 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 1286 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 1287 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 1288 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 1289 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 1290 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 1291 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1292
P 276 547.399
T 1272 0 1 0 0
0 0
R 0 0
0
	0 0 1293 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=00LCB11AP001XB02A;
//%TAG2%=00LCB11AP001XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 1294
P 1315 548.399
T 1294 0 1 0 0
0 0
R 0 0
0
	0 3 1295 0
	Name VAR260
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 1296 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 1297 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 1298 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 1299
P 1286 547.399
T 1294 0 1 0 0
0 0
R 0 0
0
	0 3 1300 0
	Name VAR261
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 1301 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 1302 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 1303 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 1304 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 1305 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 1306 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 1307 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 1308 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 1309 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 1310 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 1311 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 1312 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 1313 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1314
P 1286 547.399
T 1294 0 1 0 0
0 0
R 0 0
0
	0 0 1315 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=00LCB12AP001XB02A;
//%TAG2%=00LCB12AP001XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 1316
P 1504 548.399
T 1316 0 1 0 0
0 0
R 0 0
0
	0 3 1317 0
	Name VAR262
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 1318 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 1319 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 1320 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 1321
P 1475 547.399
T 1316 0 1 0 0
0 0
R 0 0
0
	0 3 1322 0
	Name VAR263
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 1323 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 1324 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 1325 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 1326 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 1327 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 1328 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 1329 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 1330 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 1331 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 1332 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 1333 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 1334 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 1335 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1336
P 1475 547.399
T 1316 0 1 0 0
0 0
R 0 0
0
	0 0 1337 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=11LAC22AP001XB02A;
//%TAG2%=11LAC22AP001XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 1338
P 1681 548.399
T 1338 0 1 0 0
0 0
R 0 0
0
	0 3 1339 0
	Name VAR264
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 1340 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 1341 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 1342 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 1343
P 1652 547.399
T 1338 0 1 0 0
0 0
R 0 0
0
	0 3 1344 0
	Name VAR268
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 1345 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 1346 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 1347 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 1348 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 1349 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 1350 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 1351 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 1352 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 1353 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 1354 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 1355 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 1356 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 1357 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1358
P 1652 547.399
T 1338 0 1 0 0
0 0
R 0 0
0
	0 0 1359 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=12LAC22AP001XB02A;
//%TAG2%=12LAC22AP001XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 1360
P 1745 55
T -1
R 0 0
0
	0 3 1361 0
	Name VAR245
	0 1 1
!
27e
-1-1-1
000000
0
0
0
0 0
dynamics
script
object.T.x = object.R.x +( (object.R.width - object.T.width)/2);
end script
end dynamics
	0 0 130 35
	0 4 1362 0
	Name R
	0 1 1
!
27e
c0c0c0
808080
0
0
0
1 0
dynamics
script
LcFg(SO_Obj,"",PG_HRSG1_HEADER);
end script
end dynamics
	0 0 130 35 3 0
	1 1 1363 0
	Name T
	0 1 1
!
346
000000
d4d0c8
0 0
-*-Tahoma-regular-r-normal-*-16-*-*-p-*-iso8859-1-
	8.66665 2.69231 0
	PAGE 2
	0 2 1364 0
	0 1 1
!
27e
-1-1-1
000000
0
0
0
0 0
	0 0 0 0
N 1365
P 5 360
T -1
R 0 0
0
	1 1 1366 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TO PAGE2
N 1367
P 1748 365
T -1
R 0 0
0
	1 1 1368 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TO PAGE2
N 1369
P 649.333 64
T 1369 0 1 0 0
0 0
R 0 0
0
	0 3 1370 0
	Name VAR12
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = PG_GRAPHICS_BACKGROUND
TEXTCOLOR = Black
FILLCOLOR = CHarmAlmUnAckClr
ONESTATETEXT = "FAST XFER ON"
ZEROSTATETEXT = ""
FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 1) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1) {
object.QL1.show = TRUE;
object.QL2.show = TRUE;
} else {
object.QL1.show = FALSE;
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 170 27.125
	0 4 1371 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.982934 0.125 168.398 27 0 0
	1 1 1372 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-15-*-*-p-*-iso8859-1-
	14.0915 0.125 0
	FAST XFER ON
	0 6 1373 0
	Name QL2
	0 1 1
!
27e
-180-1
c0c0c0
1
0
0
0 0
	2
	0.618173 0.599998
	170 26.6
	0 6 1374 0
	Name QL1
	0 1 1
!
=
	2
	166.909 0
	0 27
	0 2 1375 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1376
P 649.333 64
T 1369 0 1 0 0
0 0
R 0 0
0
	0 0 1377 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
SG_TEXT_MULTIPLE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = PG_GRAPHICS_BACKGROUND
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = CHarmAlmUnAckClr
;DTLS; ONESTATETEXT = "FAST XFER ON"
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	170 0
	170 27.125
	0 27.125
N 1378
P 649.333 98
T 1378 25966 1 0 0
0 0
R 0 0
0
	0 3 1379 0
	Name VAR13
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = PG_GRAPHICS_BACKGROUND
TEXTCOLOR = Black
FILLCOLOR = CHarmAlmUnAckClr
ONESTATETEXT = "FAST XFER OFF"
ZEROSTATETEXT = ""
FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 1) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1) {
object.QL1.show = TRUE;
object.QL2.show = TRUE;
} else {
object.QL1.show = FALSE;
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 175.552 27.125
	0 4 1380 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	1.01504 0.125 173.897 27 0 0
	1 1 1381 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-15-*-*-p-*-iso8859-1-
	14.5517 0.125 0
	FAST XFER REMOTE
	0 6 1382 0
	Name QL2
	0 1 1
!
27e
-180-1
c0c0c0
1
0
0
0 0
	2
	0.638361 0.599998
	175.552 26.6
	0 6 1383 0
	Name QL1
	0 1 1
!
=
	2
	172.36 0
	0 27
	0 2 1384 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1385
P 649.333 98
T 1378 0 1 0 0
0 0
R 0 0
0
	0 0 1386 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
SG_TEXT_MULTIPLE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = PG_GRAPHICS_BACKGROUND
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = CHarmAlmUnAckClr
;DTLS; ONESTATETEXT = "FAST XFER OFF"
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	175.552 0
	175.552 27.125
	0 27.125
N 1387
P 649.333 130
T 1387 25966 1 0 0
0 0
R 0 0
0
	0 3 1388 0
	Name VAR14
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = PG_GRAPHICS_BACKGROUND
TEXTCOLOR = Black
FILLCOLOR = CHarmAlmUnAckClr
ONESTATETEXT = "FAST XFER TRBL"
ZEROSTATETEXT = ""
FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 1) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1) {
object.QL1.show = TRUE;
object.QL2.show = TRUE;
} else {
object.QL1.show = FALSE;
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 170 27.125
	0 4 1389 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.982934 0.125 168.398 27 0 0
	1 1 1390 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-15-*-*-p-*-iso8859-1-
	14.0915 0.125 0
	XFER READY A
	0 6 1391 0
	Name QL2
	0 1 1
!
27e
-180-1
c0c0c0
1
0
0
0 0
	2
	0.618173 0.599998
	170 26.6
	0 6 1392 0
	Name QL1
	0 1 1
!
=
	2
	166.909 0
	0 27
	0 2 1393 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1394
P 649.333 130
T 1387 0 1 0 0
0 0
R 0 0
0
	0 0 1395 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
SG_TEXT_MULTIPLE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = PG_GRAPHICS_BACKGROUND
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = CHarmAlmUnAckClr
;DTLS; ONESTATETEXT = "FAST XFER TRBL"
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	170 0
	170 27.125
	0 27.125
N 1396
P 649.333 162
T 1396 25966 1 0 0
0 0
R 0 0
0
	0 3 1397 0
	Name VAR15
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = PG_GRAPHICS_BACKGROUND
TEXTCOLOR = Black
FILLCOLOR = CHarmAlmUnAckClr
ONESTATETEXT = "FAST XFER AUTO"
ZEROSTATETEXT = ""
FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 1) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1) {
object.QL1.show = TRUE;
object.QL2.show = TRUE;
} else {
object.QL1.show = FALSE;
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 170 27.125
	0 4 1398 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.982934 0.125 168.398 27 0 0
	1 1 1399 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-15-*-*-p-*-iso8859-1-
	14.0915 0.125 0
	FAST XFERED A
	0 6 1400 0
	Name QL2
	0 1 1
!
27e
-180-1
c0c0c0
1
0
0
0 0
	2
	0.618173 0.599998
	170 26.6
	0 6 1401 0
	Name QL1
	0 1 1
!
=
	2
	166.909 0
	0 27
	0 2 1402 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1403
P 649.333 162
T 1396 0 1 0 0
0 0
R 0 0
0
	0 0 1404 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
SG_TEXT_MULTIPLE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = PG_GRAPHICS_BACKGROUND
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = CHarmAlmUnAckClr
;DTLS; ONESTATETEXT = "FAST XFER AUTO"
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	170 0
	170 27.125
	0 27.125
N 1405
P 649.333 194
T 1405 25966 1 0 0
0 0
R 0 0
0
	0 3 1406 0
	Name VAR16
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = PG_GRAPHICS_BACKGROUND
TEXTCOLOR = Black
FILLCOLOR = CHarmAlmUnAckClr
ONESTATETEXT = "FAST XFER MAN"
ZEROSTATETEXT = ""
FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 1) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1) {
object.QL1.show = TRUE;
object.QL2.show = TRUE;
} else {
object.QL1.show = FALSE;
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 170 27.125
	0 4 1407 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.982934 0.125 168.398 27 0 0
	1 1 1408 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-15-*-*-p-*-iso8859-1-
	14.0915 0.125 0
	SLOW XFERED A
	0 6 1409 0
	Name QL2
	0 1 1
!
27e
-180-1
c0c0c0
1
0
0
0 0
	2
	0.618173 0.599998
	170 26.6
	0 6 1410 0
	Name QL1
	0 1 1
!
=
	2
	166.909 0
	0 27
	0 2 1411 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1412
P 649.333 194
T 1405 0 1 0 0
0 0
R 0 0
0
	0 0 1413 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
SG_TEXT_MULTIPLE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = PG_GRAPHICS_BACKGROUND
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = CHarmAlmUnAckClr
;DTLS; ONESTATETEXT = "FAST XFER MAN"
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	170 0
	170 27.125
	0 27.125
N 1414
P 380 98
T -1
R 0 0
0
	0 3 1415 0
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_2A2E8D8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_2A2E8A8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_2A2E878",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_2A2E8D8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_2A2E8A8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_2A2E878",PG_10kvto15kv);
end script
end dynamics
	0 0 10 60
	0 3 1416 0
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	0 0 10 56.3265
	0 6 1417 0
	Name RND_L_2A2E878
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	0 0
	10 4.08163
	0 6 1418 0
	Name RND_L_2A2E8A8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	9 4.08163
	9 56.3265
	0 2 1419 0
	0 1 1
!
27e
000000
b4b4b4
0
0
0
0 0
	0 0 0 0
	0 6 1420 0
	Name RND_L_2A2E8D8
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	9 55.5102
	1 60
	0 2 1421 0
	0 1 1
!
27e
000000
b4b4b4
0
0
0
0 0
	0 0 0 0
N 1422
P 409 98
T -1
R 0 0
0
	0 3 1423 0
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29D75E8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29D71C8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29D71F8",PG_10kvto15kv);
LcBg(SO_Obj,"RND_L_29D7288",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29D75E8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29D71C8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29D71F8",PG_10kvto15kv);
LcFg(SO_Obj,"RND_L_29D7288",PG_10kvto15kv);
end script
end dynamics
	0 0 10 61
	0 6 1424 0
	Name RND_L_29D7288
	0 1 1
!
27e
c86e00
c86e00
0
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	1 56.4354
	9 61
	0 6 1425 0
	Name RND_L_29D71F8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	10 0
	0 4.14966
	0 6 1426 0
	Name RND_L_29D71C8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	1 18.6735
	1 57.2653
	0 6 1427 0
	Name RND_L_29D75E8
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_10kvto15kv);
LcFg(SO_Obj,"",PG_10kvto15kv);
end script
end dynamics
	2
	1 4.14966
	1 25.3129
	0 2 1428 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1429
P 5 392
T -1
R 0 0
0
	0 0 1430 0
	Name VAR114
	0 1 1
!
27e
c0c0c0
808080
6
0
0
1 0
	0 1 0
	2 0 0 0 1 
	5
	9.5967 20
	40.4962 19.8625
	40.9179 0.614998
	10.1144 0
	0 9.8538
N 1431
P 812 742
T -1
R 0 0
0
	0 4 1432 0
	Name VAR140
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 25 25 5 0
N 1433
P 990 742
T -1
R 0 0
0
	0 4 1434 0
	Name VAR141
	0 1 1
!
=
	0 0 25 25 5 0
N 1435
P 1159 742
T -1
R 0 0
0
	0 4 1436 0
	Name VAR142
	0 1 1
!
=
	0 0 25 25 5 0
N 1437
P 461 806.33
T -1
R 0 0
0
	0 4 1438 0
	Name VAR244
	0 1 1
!
27e
c0c0c0
bfbfbf
6
0
0
0 0
	0 0 118 44 1 0
N 1439
P 638.667 806.33
T -1
R 0 0
0
	0 4 1440 0
	Name VAR246
	0 1 1
!
=
	0 0 118 44 1 0
N 1441
P 967.333 806.33
T -1
R 0 0
0
	0 4 1442 0
	Name VAR2
	0 1 1
!
=
	0 0 118 44 1 0
N 1443
P 1142 806.33
T -1
R 0 0
0
	0 4 1444 0
	Name VAR3
	0 1 1
!
=
	0 0 118 44 1 0
N 1445
P 20.3333 806.33
T -1
R 0 0
0
	0 4 1446 0
	Name VAR265
	0 1 1
!
=
	0 0 118 44 1 0
N 1447
P 150.333 806.33
T -1
R 0 0
0
	0 4 1448 0
	Name VAR266
	0 1 1
!
=
	0 0 118 44 1 0
N 1449
P 287 806.33
T -1
R 0 0
0
	0 4 1450 0
	Name VAR267
	0 1 1
!
=
	0 0 118 44 1 0
N 1451
P 1303.33 806.33
T -1
R 0 0
0
	0 4 1452 0
	Name VAR25
	0 1 1
!
=
	0 0 118 44 1 0
N 1453
P 1503.67 806.33
T -1
R 0 0
0
	0 4 1454 0
	Name VAR26
	0 1 1
!
=
	0 0 118 44 1 0
N 1455
P 1680 806.33
T -1
R 0 0
0
	0 4 1456 0
	Name VAR27
	0 1 1
!
=
	0 0 118 44 1 0
N 1457
P 798 342
T -1
R 0 0
0
	0 6 1458 0
	0 1 1
!
27e
-1aa00
-1aa00
2
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 58
	0 0
N 1459
P 920 342
T -1
R 0 0
0
	0 6 1460 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 58
	0 0
N 1461
P 800 342
T -1
R 0 0
0
	0 6 1462 0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	120 0
	0 0
N 1463
P 826 296
T 1463 25966 1 0 0
0 0
R 0 0
0
	0 3 1464 0
	Name VAR17
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_BreakerE_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad" || B;
}
func v_Congruency(){
TagRead(SO_Obj,SO_Tag2,".PV",C);
return (C < 0.5) || (C > 2.5 && C < 3.5);
}
func v_Open(){
TagRead(SO_Obj,SO_Tag2,".PV",D);
return D > 3.5 && D < 4.5;
}
func v_Closed(){
TagRead(SO_Obj,SO_Tag2,".PV",E11);
return E11 > 7.5 && E11 < 8.5;
}
func v_Tripped(){
TagRead(SO_Obj,SO_Tag2,".PV",F);
return F > 15.5 && F < 17.5;
}
func v_shadecolor(){
G=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",H);
if(v_BadQuality() && G || H > 99) return CHarmBQShadeClr;
if(v_Congruency()) return CHarmInTrblShadeClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func v_FillColor(){
I=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",J);
if(v_BadQuality() && I || J > 99) return CHarmBQClr;
if(v_Congruency()) return CHarmInTrblClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripClr;
return CHarmInTrblClr;
}
func Position(){
if(v_Closed()) return "Closed";
if(v_Open()) return "Opened";
if(v_Tripped()) return "Opened";
return "Opened";
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag3,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_shadecolor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag3,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_Position(){
return Position();
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_BreakerE_FNC END
//-----------------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
ORIENTATION = "Horizontal"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if(gsa_Alarm()){
if(gsa_Orientation()=="Horizontal"){
object.AY.show = TRUE;
object.AY2.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.AY.show = FALSE;
object.AY2.show = TRUE;
} else {
object.AY.show = TRUE;
object.AY2.show = FALSE;
}
} else {
object.AY.show = FALSE;
object.AY2.show = FALSE;
}
if(gsa_Orientation()=="Horizontal"){
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.BASE.show = FALSE;
object.LINE1.show = FALSE;
object.LINE2.show = FALSE;
object.LINE3.show = FALSE;
object.LINE3O.show = FALSE;
object.BASE2.show = TRUE;
object.LINE11.show = TRUE;
object.LINE22.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE33O.show = FALSE;
object.LINE33.show = TRUE;
} else {
object.LINE33O.show = TRUE;
object.LINE33.show = FALSE;
}
} else {
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
}
//Graphic - Base/Base2
object.BASE.background = gsa_v_FillColor();
object.BASE.foreground = gsa_v_FillShadeColor();
object.BASE2.background = gsa_v_FillColor();
object.BASE2.foreground = gsa_v_FillShadeColor();
if(gsa_3Deffect()){
object.BASE.fillStyle = 15;
object.BASE2.fillStyle = 14;
} else {
object.BASE.fillStyle = 2;
object.BASE2.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.AY2.background = gsa_AlarmColor();
object.AY2.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.OUTL.show = FALSE;
end script
end dynamics
	0 0 80 74
	0 4 1465 0
	Name OUTL
	0 0 1
!
=
	0 0 80 74 0 0
	0 3 1466 0
	0 1 1
!
=
	0.36036 19.8214 79.2793 34.3571
	0 3 1467 0
	0 1 1
!
=
	13.3333 28.7411 52.6126 24.4464
	0 4 1468 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	13.3333 28.7411 52.6126 24.4464 0 0
	0 4 1469 0
	Name BASE
	0 1 1
!
27e
808080
c0c0c0
0
0
0
2 0
	16.2162 31.3839 46.8468 19.1607 0 0
	0 2 1470 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 1471 0
	Name LINE1
	0 1 1
!
27e
000000
000000
0
0
0
1 0
	0.36036 44.9286 28.8288 1.32143 0 0
	0 4 1472 0
	Name LINE2
	0 1 1
!
=
	50.8108 44.9286 28.8288 1.32143 0 0
	0 5 1473 0
	Name LINE3
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	28.8288 34.3571 23.0631 19.8214
	0 11584
	0 5 1474 0
	Name LINE3O
	0 1 1
!
=
	28.8288 19.8214 23.0631 19.8214
	0 11584
	0 2 1475 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1476 0
	0 1 1
!
=
	19.0991 1.32143 41.8018 71.3571
	0 3 1477 0
	0 1 1
!
=
	30.2703 11.5625 26.6667 48.2321
	0 4 1478 0
	Name AY2
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	30.2703 11.5625 26.6667 48.2321 0 0
	0 4 1479 0
	Name BASE2
	0 0 1
!
27e
808080
c0c0c0
0
0
0
2 0
	33.1532 14.2054 20.9009 42.9464 0 0
	0 2 1480 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 1481 0
	Name LINE11
	0 0 1
!
27e
000000
000000
0
0
0
1 0
	48.6486 46.25 1.44144 26.4286 0 0
	0 4 1482 0
	Name LINE22
	0 0 1
!
=
	48.6486 1.32143 1.44144 26.4286 0 0
	0 5 1483 0
	Name LINE33
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	37.8378 27.0893 23.0631 19.8214
	5760 11584
	0 5 1484 0
	Name LINE33O
	0 0 1
!
=
	19.0991 27.0893 23.0631 19.8214
	5760 11584
	0 2 1485 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1486 0
	0 1 1
!
=
	14.6205 3.63393 50.7589 66.7321
	0 6 1487 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
2
0
0
0 0
	2
	14.6205 69.8745
	65.3795 4.1246
	0 6 1488 0
	Name QL2
	0 0 1
!
=
	2
	15.3562 3.63393
	64.6438 70.3661
	0 2 1489 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 1490 0
	0 1 1
!
=
	0 0 0 0
N 1491
P 842.216 311.196
T 1463 0 1 0 0
0 0
R 0 0
0
	0 3 1492 0
	Name VAR18
	0 1 1
!
27e
000000
d4d0c8
1
0
0
0 0
dynamics
script
//***GblSymDetails_Init***
ORIENTATION = "Horizontal"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if (value == 1) {
object.show = TRUE;
} else {
object.show = FALSE;
object.ghostelement=FALSE;
}
end script
end dynamics
	0 0 47.5676 43.6071
	0 4 1493 0
	0 1 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 47.5676 43.6071 0 0
	0 6 1494 0
	0 1 1
!
=
	2
	46.7397 1.13759
	0.806229 43.2759
	0 6 1495 0
	0 1 1
!
=
	2
	0.806229 1.13759
	46.4787 43.0424
	0 2 1496 0
	0 1 1
!
27e
000000
d4d0c8
0
0
0
0 0
	0 0 0 0
N 1497
P 826 296
T 1463 0 1 0 0
0 0
R 0 0
0
	0 0 1498 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_BREAKERE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG3%=4;
//%TAG%_MAINT=5;
}

func Sym_Tag_Refr() {
//%TAG1%=00BBA00BC113;
//%TAG2%=00BBA00BC113_POS;
//%TAG3%=00BBA00BC113_MAINT;
//%TAG%_MAINT=%TAG%_MAINT;
}

//***GblSymDetails***
;DTLS; ORIENTATION = "Horizontal"
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; GV_BQCOLOR = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 74
	0 74
N 1499
P 790.333 397.667
T -1
R 0 0
0
	1 1 1500 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 1501
P 829.333 378.667
T -1
R 0 0
0
	1 1 1502 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 1503
P 824.333 416.667
T -1
R 0 0
0
	1 1 1504 0
	Name RND_T_8D24B10
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 1505
P 832.333 435.667
T -1
R 0 0
0
	1 1 1506 0
	Name RND_T_8D24840
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 1507
P 807.333 454.667
T -1
R 0 0
0
	1 1 1508 0
	Name RND_T_8D23910
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP COIL
N 1509
P 802.333 473.667
T -1
R 0 0
0
	1 1 1510 0
	Name RND_T_8D23CD0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	RELAY ALM
N 1511
P 865.022 377.267
T 1511 0 1 0 0
0 0
R 0 0
0
	0 3 1512 0
	Name VAR275
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1513 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1514 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1515 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1516 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1517 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1518
P 865.022 377.267
T 1511 0 1 0 0
0 0
R 0 0
0
	0 0 1519 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1520
P 865.022 396.267
T 1520 0 1 0 0
0 0
R 0 0
0
	0 3 1521 0
	Name VAR276
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1522 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1523 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1524 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1525 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1526 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1527
P 865.022 396.267
T 1520 0 1 0 0
0 0
R 0 0
0
	0 0 1528 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1529
P 865.022 415.267
T 1529 0 1 0 0
0 0
R 0 0
0
	0 3 1530 0
	Name VAR277
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1531 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1532 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1533 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1534 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1535 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1536
P 865.022 415.267
T 1529 0 1 0 0
0 0
R 0 0
0
	0 0 1537 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1538
P 865.022 434.267
T 1538 0 1 0 0
0 0
R 0 0
0
	0 3 1539 0
	Name VAR278
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1540 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1541 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1542 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1543 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1544 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1545
P 865.022 434.267
T 1538 0 1 0 0
0 0
R 0 0
0
	0 0 1546 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1547
P 865.022 453.267
T 1547 0 1 0 0
0 0
R 0 0
0
	0 3 1548 0
	Name VAR279
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1549 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1550 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1551 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1552 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1553 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1554
P 865.022 453.267
T 1547 0 1 0 0
0 0
R 0 0
0
	0 0 1555 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1556
P 865.022 472.267
T 1556 0 1 0 0
0 0
R 0 0
0
	0 3 1557 0
	Name VAR280
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1558 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1559 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1560 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1561 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1562 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1563
P 865.022 472.267
T 1556 0 1 0 0
0 0
R 0 0
0
	0 0 1564 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1565
P 387 463.667
T -1
R 0 0
0
	1 1 1566 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 1567
P 426 444.667
T -1
R 0 0
0
	1 1 1568 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 1569
P 421 482.667
T -1
R 0 0
0
	1 1 1570 0
	Name RND_T_8D24B10
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 1571
P 429 501.667
T -1
R 0 0
0
	1 1 1572 0
	Name RND_T_8D24840
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 1573
P 404 520.667
T -1
R 0 0
0
	1 1 1574 0
	Name RND_T_8D23910
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP COIL
N 1575
P 461.689 443.267
T 1575 0 1 0 0
0 0
R 0 0
0
	0 3 1576 0
	Name VAR281
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1577 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1578 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1579 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1580 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1581 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1582
P 461.689 443.267
T 1575 0 1 0 0
0 0
R 0 0
0
	0 0 1583 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1584
P 461.689 462.267
T 1584 0 1 0 0
0 0
R 0 0
0
	0 3 1585 0
	Name VAR282
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1586 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1587 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1588 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1589 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1590 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1591
P 461.689 462.267
T 1584 0 1 0 0
0 0
R 0 0
0
	0 0 1592 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1593
P 461.689 481.267
T 1593 0 1 0 0
0 0
R 0 0
0
	0 3 1594 0
	Name VAR283
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1595 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1596 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1597 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1598 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1599 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1600
P 461.689 481.267
T 1593 0 1 0 0
0 0
R 0 0
0
	0 0 1601 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1602
P 461.689 500.267
T 1602 0 1 0 0
0 0
R 0 0
0
	0 3 1603 0
	Name VAR284
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1604 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.0811009 18.8209 17.5179 0 0
	1 1 1605 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.0811009 0
	 
	0 6 1606 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1607 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1608 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1609
P 461.689 500.267
T 1602 0 1 0 0
0 0
R 0 0
0
	0 0 1610 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1611
P 461.689 519.267
T 1611 0 1 0 0
0 0
R 0 0
0
	0 3 1612 0
	Name VAR285
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1613 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1614 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1615 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1616 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1617 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1618
P 461.689 519.267
T 1611 0 1 0 0
0 0
R 0 0
0
	0 0 1619 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1620
P 570.333 467
T -1
R 0 0
0
	1 1 1621 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 1622
P 609.333 448
T -1
R 0 0
0
	1 1 1623 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 1624
P 604.333 486
T -1
R 0 0
0
	1 1 1625 0
	Name RND_T_8D24B10
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 1626
P 612.333 505
T -1
R 0 0
0
	1 1 1627 0
	Name RND_T_8D24840
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 1628
P 587.333 524
T -1
R 0 0
0
	1 1 1629 0
	Name RND_T_8D23910
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP COIL
N 1630
P 645.022 446.6
T 1630 0 1 0 0
0 0
R 0 0
0
	0 3 1631 0
	Name VAR286
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1632 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1633 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1634 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1635 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1636 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1637
P 645.022 446.6
T 1630 0 1 0 0
0 0
R 0 0
0
	0 0 1638 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1639
P 645.022 465.6
T 1639 0 1 0 0
0 0
R 0 0
0
	0 3 1640 0
	Name VAR287
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1641 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1642 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1643 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1644 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1645 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1646
P 645.022 465.6
T 1639 0 1 0 0
0 0
R 0 0
0
	0 0 1647 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1648
P 645.022 484.6
T 1648 0 1 0 0
0 0
R 0 0
0
	0 3 1649 0
	Name VAR288
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1650 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1651 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1652 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1653 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1654 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1655
P 645.022 484.6
T 1648 0 1 0 0
0 0
R 0 0
0
	0 0 1656 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1657
P 645.022 503.6
T 1657 0 1 0 0
0 0
R 0 0
0
	0 3 1658 0
	Name VAR289
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1659 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.0811009 18.8209 17.5179 0 0
	1 1 1660 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.0811009 0
	 
	0 6 1661 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1662 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1663 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1664
P 645.022 503.6
T 1657 0 1 0 0
0 0
R 0 0
0
	0 0 1665 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1666
P 645.022 522.6
T 1666 0 1 0 0
0 0
R 0 0
0
	0 3 1667 0
	Name VAR290
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1668 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1669 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1670 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1671 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1672 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1673
P 645.022 522.6
T 1666 0 1 0 0
0 0
R 0 0
0
	0 0 1674 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1675
P 1065.67 470.333
T -1
R 0 0
0
	1 1 1676 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 1677
P 1104.67 451.333
T -1
R 0 0
0
	1 1 1678 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 1679
P 1099.67 489.333
T -1
R 0 0
0
	1 1 1680 0
	Name RND_T_8D24B10
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 1681
P 1107.67 508.333
T -1
R 0 0
0
	1 1 1682 0
	Name RND_T_8D24840
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 1683
P 1082.67 527.333
T -1
R 0 0
0
	1 1 1684 0
	Name RND_T_8D23910
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP COIL
N 1685
P 1140.36 449.933
T 1685 0 1 0 0
0 0
R 0 0
0
	0 3 1686 0
	Name VAR291
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1687 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1688 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1689 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1690 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1691 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1692
P 1140.36 449.933
T 1685 0 1 0 0
0 0
R 0 0
0
	0 0 1693 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1694
P 1140.36 468.933
T 1694 0 1 0 0
0 0
R 0 0
0
	0 3 1695 0
	Name VAR292
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1696 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1697 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1698 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1699 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1700 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1701
P 1140.36 468.933
T 1694 0 1 0 0
0 0
R 0 0
0
	0 0 1702 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1703
P 1140.36 487.933
T 1703 0 1 0 0
0 0
R 0 0
0
	0 3 1704 0
	Name VAR293
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1705 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1706 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1707 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1708 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1709 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1710
P 1140.36 487.933
T 1703 0 1 0 0
0 0
R 0 0
0
	0 0 1711 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1712
P 1140.36 506.933
T 1712 0 1 0 0
0 0
R 0 0
0
	0 3 1713 0
	Name VAR294
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1714 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.0811009 18.8209 17.5179 0 0
	1 1 1715 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.0811009 0
	 
	0 6 1716 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1717 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1718 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1719
P 1140.36 506.933
T 1712 0 1 0 0
0 0
R 0 0
0
	0 0 1720 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1721
P 1140.36 525.933
T 1721 0 1 0 0
0 0
R 0 0
0
	0 3 1722 0
	Name VAR295
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1723 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1724 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1725 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1726 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1727 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1728
P 1140.36 525.933
T 1721 0 1 0 0
0 0
R 0 0
0
	0 0 1729 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1730
P 901 475
T -1
R 0 0
0
	1 1 1731 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 1732
P 940 456
T -1
R 0 0
0
	1 1 1733 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 1734
P 935 494
T -1
R 0 0
0
	1 1 1735 0
	Name RND_T_8D24B10
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 1736
P 943 513
T -1
R 0 0
0
	1 1 1737 0
	Name RND_T_8D24840
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 1738
P 918 532
T -1
R 0 0
0
	1 1 1739 0
	Name RND_T_8D23910
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP COIL
N 1740
P 975.689 454.6
T 1740 0 1 0 0
0 0
R 0 0
0
	0 3 1741 0
	Name VAR296
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1742 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1743 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1744 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1745 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1746 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1747
P 975.689 454.6
T 1740 0 1 0 0
0 0
R 0 0
0
	0 0 1748 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1749
P 975.689 473.6
T 1749 0 1 0 0
0 0
R 0 0
0
	0 3 1750 0
	Name VAR297
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1751 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1752 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1753 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1754 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1755 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1756
P 975.689 473.6
T 1749 0 1 0 0
0 0
R 0 0
0
	0 0 1757 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1758
P 975.689 492.6
T 1758 0 1 0 0
0 0
R 0 0
0
	0 3 1759 0
	Name VAR298
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1760 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1761 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1762 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1763 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1764 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1765
P 975.689 492.6
T 1758 0 1 0 0
0 0
R 0 0
0
	0 0 1766 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1767
P 975.689 511.6
T 1767 0 1 0 0
0 0
R 0 0
0
	0 3 1768 0
	Name VAR299
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1769 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.0811009 18.8209 17.5179 0 0
	1 1 1770 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.0811009 0
	 
	0 6 1771 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1772 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1773 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1774
P 975.689 511.6
T 1767 0 1 0 0
0 0
R 0 0
0
	0 0 1775 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1776
P 975.689 530.6
T 1776 0 1 0 0
0 0
R 0 0
0
	0 3 1777 0
	Name VAR300
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1778 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1779 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1780 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1781 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1782 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1783
P 975.689 530.6
T 1776 0 1 0 0
0 0
R 0 0
0
	0 0 1784 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1785
P 16 609.734
T -1
R 0 0
0
	1 1 1786 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 1787
P 10.3334 587.067
T -1
R 0 0
0
	1 1 1788 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 1789
P 51 588
T 1789 0 1 0 0
0 0
R 0 0
0
	0 3 1790 0
	Name VAR301
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1791 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1792 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1793 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1794 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1795 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1796
P 51 588
T 1789 0 1 0 0
0 0
R 0 0
0
	0 0 1797 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1798
P 51 607
T 1798 0 1 0 0
0 0
R 0 0
0
	0 3 1799 0
	Name VAR302
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1800 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1801 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1802 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1803 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1804 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1805
P 51 607
T 1798 0 1 0 0
0 0
R 0 0
0
	0 0 1806 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1807
P 49.848 701
T 1807 0 1 0 0
0 0
R 0 0
0
	0 3 1808 0
	Name VAR303
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_Pump_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad"||B;
}
func v_FillColor(){
C=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",D);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP1);
if(v_BadQuality()&&C||D>99) return CHarmBQClr;
if (TRIP1) return CHarmAlmAckClr;
if((D > 3.5  && D < 4.5)||(D > 1.5 && D < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((D > 7.5  && D < 8.5)||(D > 0.5 && D < 1.5))  return Charm_ASM_DynamicFillDevice;
if(D > 15.5  && D < 17.5) return CHarmTripClr;
return CHarmInTrblClr;
}
func v_FillShadeColor(){
EAT=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",F);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP2);
if(v_BadQuality()&&EAT||F>99) return CHarmBQShadeClr;
if (TRIP2) return CHarmAlmAckClr;
if((F > 3.5  && F < 4.5)||(F > 1.5 && F < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((F > 7.5  && F < 8.5)||(F > 0.5 && F < 1.5)) return Charm_ASM_DynamicFillDevice;
if(F>15.5&&F<17.5) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_Maint(){
TagRead(SO_Obj,SO_Tag3,".OUT",MAINT);
return MAINT;
}
func e_StartingStopping(){
TagRead(SO_Obj,SO_Tag2,".PV",D2);
return (D2 > 0.5  && D2 < 2.5);
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag2,".PV",D1);
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
if(D1 > 0.5  && D1 < 1.5) return Charm_ASM_VlvClsgClr;
if(D1 > 1.5  && D1 < 2.5) return Charm_ASM_VlvOpngClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_FillShadeColor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_Pump_FNC END
//-------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
SYMBOL3DEFFECT = FALSE
LABEL = "M"
LABELVISIBILITY = TRUE
GV_BQCOLOR = FALSE
FONT = "Font(Tahoma, 12, bold, *)"
//***GblSymDetails_End***
//Graphic - Pump BODY
object.OC.background = gsa_v_FillShadeColor();
object.IC.background = gsa_v_FillColor();
object.DIV.background = gsa_v_FillColor(); 
object.TOPC.background = gsa_v_FillColor();
if(gsa_Alarm()||e_StartingStopping()){
	object.AY.show = TRUE;
	} else {
	object.AY.show = FALSE;
}
if(gsa_3Deffect()){
object.OC.fillStyle = 14;
object.DIV.fillStyle = 14;
} else {
object.OC.fillStyle = 2;
object.DIV.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.M1.show = e_Maint();
object.M2.show = e_Maint();
object.M3.show = e_Maint();
end script
end dynamics
	0 0 66 66
	0 0 1809 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	72
	64.8214 33
	64.7004 30.2266
	64.338 27.4743
	63.7371 24.764
	62.9024 22.1165
	61.84 19.5517
	60.5582 17.0893
	59.0666 14.7479
	57.3766 12.5455
	55.5012 10.4989
	53.4545 8.62337
	51.2521 6.93341
	48.9107 5.44183
	46.4483 4.15999
	43.8835 3.09764
	41.236 2.26286
	38.5257 1.66201
	35.7734 1.29966
	33 1.17857
	30.2266 1.29966
	27.4743 1.66201
	24.764 2.26286
	22.1165 3.09764
	19.5517 4.15999
	17.0893 5.44183
	14.7479 6.93341
	12.5455 8.62337
	10.4989 10.4989
	8.62337 12.5455
	6.93341 14.7479
	5.44183 17.0893
	4.15999 19.5517
	3.09764 22.1165
	2.26286 24.764
	1.66201 27.4743
	1.29966 30.2266
	1.17857 33
	1.29966 35.7734
	1.66201 38.5257
	2.26286 41.236
	3.09764 43.8835
	4.15999 46.4483
	5.44183 48.9107
	6.93341 51.2521
	8.62337 53.4545
	10.4989 55.5012
	12.5455 57.3766
	14.7479 59.0666
	17.0893 60.5582
	19.5517 61.84
	22.1165 62.9024
	24.764 63.7371
	27.4743 64.338
	30.2266 64.7004
	33 64.8214
	35.7734 64.7004
	38.5257 64.338
	41.236 63.7371
	43.8835 62.9024
	46.4483 61.84
	48.9107 60.5582
	51.2521 59.0666
	53.4545 57.3766
	55.5012 55.5012
	57.3766 53.4545
	59.0666 51.2521
	60.5582 48.9107
	61.84 46.4483
	62.9024 43.8835
	63.7371 41.236
	64.338 38.5257
	64.7004 35.7734
	0 3 1810 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	3.53571 3.53571 58.9286 58.9286
	0 5 1811 0
	Name OC
	0 1 1
!
2fe
5a5a5a
808080
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	0 23040
	0 5 1812 0
	Name DIV
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	2880 11584
	0 5 1813 0
	Name IC
	0 1 1
!
2fe
5a5a5a
c0c0c0
0
0
0
2 0
1
	9.42855 9.42857 47.1429 47.1429
	0 23040
	0 2 1814 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1815 0
	0 1 1
!
=
	18.8165 18.826 28.3669 28.3479
	0 0 1816 0
	Name TOPC
	0 1 1
!
27e
5a5a5a
c0c0c0
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	4
	33 18.826
	47.1834 33
	33 47.174
	18.8165 33
	1 1 1817 0
	Name TXT
	0 1 1
!
346
808080
c0c0c0
0 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
	22.3522 20.0046 0
	M
	0 2 1818 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1819 0
	0 1 1
!
=
	3.53571 3.53571 58.9286 58.9286
	0 6 1820 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	3.53571 62.4643
	62.4643 3.53571
	0 6 1821 0
	Name QL2
	0 0 1
!
=
	2
	3.53571 3.53571
	62.4643 62.4643
	0 2 1822 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1823 0
	0 1 1
!
=
	0 0 66 66
	0 4 1824 0
	Name M1
	0 0 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 66 66 0 0
	0 6 1825 0
	Name M2
	0 0 1
!
=
	2
	66 0
	0 66
	0 6 1826 0
	Name M3
	0 0 1
!
=
	2
	0 0
	66 66
	0 2 1827 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 1828 0
	0 1 1
!
=
	0 0 0 0
N 1829
P 49.848 701
T 1807 0 1 0 0
0 0
R 0 0
0
	0 0 1830 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_MOTORE_ELE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG%=1;
//%TAG_POS%=2;
//%TAG_MAINT%=3;
}
func Sym_Tag_Refr() {
//%TAG%=11LAC21AP001;
//%TAG_POS%=11LAC21AP001_POS;
//%TAG_MAINT%=11LAC21AP001_MAINT;
}
//***GblSymDetails***
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; LABEL = "M"
;DTLS; LABELVISIBILITY = TRUE
;DTLS; GV_BQCOLOR = FALSE
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	66 0
	66 66
	0 66
N 1831
P 180.833 701
T 1831 0 1 0 0
0 0
R 0 0
0
	0 3 1832 0
	Name VAR304
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_Pump_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad"||B;
}
func v_FillColor(){
C=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",D);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP1);
if(v_BadQuality()&&C||D>99) return CHarmBQClr;
if (TRIP1) return CHarmAlmAckClr;
if((D > 3.5  && D < 4.5)||(D > 1.5 && D < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((D > 7.5  && D < 8.5)||(D > 0.5 && D < 1.5))  return Charm_ASM_DynamicFillDevice;
if(D > 15.5  && D < 17.5) return CHarmTripClr;
return CHarmInTrblClr;
}
func v_FillShadeColor(){
EAT=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",F);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP2);
if(v_BadQuality()&&EAT||F>99) return CHarmBQShadeClr;
if (TRIP2) return CHarmAlmAckClr;
if((F > 3.5  && F < 4.5)||(F > 1.5 && F < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((F > 7.5  && F < 8.5)||(F > 0.5 && F < 1.5)) return Charm_ASM_DynamicFillDevice;
if(F>15.5&&F<17.5) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_Maint(){
TagRead(SO_Obj,SO_Tag3,".OUT",MAINT);
return MAINT;
}
func e_StartingStopping(){
TagRead(SO_Obj,SO_Tag2,".PV",D2);
return (D2 > 0.5  && D2 < 2.5);
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag2,".PV",D1);
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
if(D1 > 0.5  && D1 < 1.5) return Charm_ASM_VlvClsgClr;
if(D1 > 1.5  && D1 < 2.5) return Charm_ASM_VlvOpngClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_FillShadeColor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_Pump_FNC END
//-------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
SYMBOL3DEFFECT = FALSE
LABEL = "M"
LABELVISIBILITY = TRUE
GV_BQCOLOR = FALSE
FONT = "Font(Tahoma, 12, bold, *)"
//***GblSymDetails_End***
//Graphic - Pump BODY
object.OC.background = gsa_v_FillShadeColor();
object.IC.background = gsa_v_FillColor();
object.DIV.background = gsa_v_FillColor(); 
object.TOPC.background = gsa_v_FillColor();
if(gsa_Alarm()||e_StartingStopping()){
	object.AY.show = TRUE;
	} else {
	object.AY.show = FALSE;
}
if(gsa_3Deffect()){
object.OC.fillStyle = 14;
object.DIV.fillStyle = 14;
} else {
object.OC.fillStyle = 2;
object.DIV.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.M1.show = e_Maint();
object.M2.show = e_Maint();
object.M3.show = e_Maint();
end script
end dynamics
	0 0 66 66
	0 0 1833 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	72
	64.8214 33
	64.7004 30.2266
	64.338 27.4743
	63.7371 24.764
	62.9024 22.1165
	61.84 19.5517
	60.5582 17.0893
	59.0666 14.7479
	57.3766 12.5455
	55.5012 10.4989
	53.4545 8.62337
	51.2521 6.93341
	48.9107 5.44183
	46.4483 4.15999
	43.8835 3.09764
	41.236 2.26286
	38.5257 1.66201
	35.7734 1.29966
	33 1.17857
	30.2266 1.29966
	27.4743 1.66201
	24.764 2.26286
	22.1165 3.09764
	19.5517 4.15999
	17.0893 5.44183
	14.7479 6.93341
	12.5455 8.62337
	10.4989 10.4989
	8.62337 12.5455
	6.93341 14.7479
	5.44183 17.0893
	4.15999 19.5517
	3.09764 22.1165
	2.26286 24.764
	1.66201 27.4743
	1.29966 30.2266
	1.17857 33
	1.29966 35.7734
	1.66201 38.5257
	2.26286 41.236
	3.09764 43.8835
	4.15999 46.4483
	5.44183 48.9107
	6.93341 51.2521
	8.62337 53.4545
	10.4989 55.5012
	12.5455 57.3766
	14.7479 59.0666
	17.0893 60.5582
	19.5517 61.84
	22.1165 62.9024
	24.764 63.7371
	27.4743 64.338
	30.2266 64.7004
	33 64.8214
	35.7734 64.7004
	38.5257 64.338
	41.236 63.7371
	43.8835 62.9024
	46.4483 61.84
	48.9107 60.5582
	51.2521 59.0666
	53.4545 57.3766
	55.5012 55.5012
	57.3766 53.4545
	59.0666 51.2521
	60.5582 48.9107
	61.84 46.4483
	62.9024 43.8835
	63.7371 41.236
	64.338 38.5257
	64.7004 35.7734
	0 3 1834 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	3.53571 3.53571 58.9286 58.9286
	0 5 1835 0
	Name OC
	0 1 1
!
2fe
5a5a5a
808080
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	0 23040
	0 5 1836 0
	Name DIV
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	2880 11584
	0 5 1837 0
	Name IC
	0 1 1
!
2fe
5a5a5a
c0c0c0
0
0
0
2 0
1
	9.42855 9.42857 47.1429 47.1429
	0 23040
	0 2 1838 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1839 0
	0 1 1
!
=
	18.8165 18.826 28.3669 28.3479
	0 0 1840 0
	Name TOPC
	0 1 1
!
27e
5a5a5a
c0c0c0
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	4
	33 18.826
	47.1834 33
	33 47.174
	18.8165 33
	1 1 1841 0
	Name TXT
	0 1 1
!
346
808080
c0c0c0
0 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
	22.3522 20.0046 0
	M
	0 2 1842 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1843 0
	0 1 1
!
=
	3.53571 3.53571 58.9286 58.9286
	0 6 1844 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	3.53571 62.4643
	62.4643 3.53571
	0 6 1845 0
	Name QL2
	0 0 1
!
=
	2
	3.53571 3.53571
	62.4643 62.4643
	0 2 1846 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1847 0
	0 1 1
!
=
	0 0 66 66
	0 4 1848 0
	Name M1
	0 0 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 66 66 0 0
	0 6 1849 0
	Name M2
	0 0 1
!
=
	2
	66 0
	0 66
	0 6 1850 0
	Name M3
	0 0 1
!
=
	2
	0 0
	66 66
	0 2 1851 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 1852 0
	0 1 1
!
=
	0 0 0 0
N 1853
P 180.833 701
T 1831 0 1 0 0
0 0
R 0 0
0
	0 0 1854 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_MOTORE_ELE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG%=1;
//%TAG_POS%=2;
//%TAG_MAINT%=3;
}
func Sym_Tag_Refr() {
//%TAG%=12LAC21AP001;
//%TAG_POS%=12LAC21AP001_POS;
//%TAG_MAINT%=12LAC21AP001_MAINT;
}
//***GblSymDetails***
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; LABEL = "M"
;DTLS; LABELVISIBILITY = TRUE
;DTLS; GV_BQCOLOR = FALSE
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	66 0
	66 66
	0 66
N 1855
P 314.333 701
T 1855 0 1 0 0
0 0
R 0 0
0
	0 3 1856 0
	Name VAR305
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_Pump_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad"||B;
}
func v_FillColor(){
C=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",D);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP1);
if(v_BadQuality()&&C||D>99) return CHarmBQClr;
if (TRIP1) return CHarmAlmAckClr;
if((D > 3.5  && D < 4.5)||(D > 1.5 && D < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((D > 7.5  && D < 8.5)||(D > 0.5 && D < 1.5))  return Charm_ASM_DynamicFillDevice;
if(D > 15.5  && D < 17.5) return CHarmTripClr;
return CHarmInTrblClr;
}
func v_FillShadeColor(){
EAT=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",F);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP2);
if(v_BadQuality()&&EAT||F>99) return CHarmBQShadeClr;
if (TRIP2) return CHarmAlmAckClr;
if((F > 3.5  && F < 4.5)||(F > 1.5 && F < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((F > 7.5  && F < 8.5)||(F > 0.5 && F < 1.5)) return Charm_ASM_DynamicFillDevice;
if(F>15.5&&F<17.5) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_Maint(){
TagRead(SO_Obj,SO_Tag3,".OUT",MAINT);
return MAINT;
}
func e_StartingStopping(){
TagRead(SO_Obj,SO_Tag2,".PV",D2);
return (D2 > 0.5  && D2 < 2.5);
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag2,".PV",D1);
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
if(D1 > 0.5  && D1 < 1.5) return Charm_ASM_VlvClsgClr;
if(D1 > 1.5  && D1 < 2.5) return Charm_ASM_VlvOpngClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_FillShadeColor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_Pump_FNC END
//-------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
SYMBOL3DEFFECT = FALSE
LABEL = "M"
LABELVISIBILITY = TRUE
GV_BQCOLOR = FALSE
FONT = "Font(Tahoma, 12, bold, *)"
//***GblSymDetails_End***
//Graphic - Pump BODY
object.OC.background = gsa_v_FillShadeColor();
object.IC.background = gsa_v_FillColor();
object.DIV.background = gsa_v_FillColor(); 
object.TOPC.background = gsa_v_FillColor();
if(gsa_Alarm()||e_StartingStopping()){
	object.AY.show = TRUE;
	} else {
	object.AY.show = FALSE;
}
if(gsa_3Deffect()){
object.OC.fillStyle = 14;
object.DIV.fillStyle = 14;
} else {
object.OC.fillStyle = 2;
object.DIV.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.M1.show = e_Maint();
object.M2.show = e_Maint();
object.M3.show = e_Maint();
end script
end dynamics
	0 0 66 66
	0 0 1857 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	72
	64.8214 33
	64.7004 30.2266
	64.338 27.4743
	63.7371 24.764
	62.9024 22.1165
	61.84 19.5517
	60.5582 17.0893
	59.0666 14.7479
	57.3766 12.5455
	55.5012 10.4989
	53.4545 8.62337
	51.2521 6.93341
	48.9107 5.44183
	46.4483 4.15999
	43.8835 3.09764
	41.236 2.26286
	38.5257 1.66201
	35.7734 1.29966
	33 1.17857
	30.2266 1.29966
	27.4743 1.66201
	24.764 2.26286
	22.1165 3.09764
	19.5517 4.15999
	17.0893 5.44183
	14.7479 6.93341
	12.5455 8.62337
	10.4989 10.4989
	8.62337 12.5455
	6.93341 14.7479
	5.44183 17.0893
	4.15999 19.5517
	3.09764 22.1165
	2.26286 24.764
	1.66201 27.4743
	1.29966 30.2266
	1.17857 33
	1.29966 35.7734
	1.66201 38.5257
	2.26286 41.236
	3.09764 43.8835
	4.15999 46.4483
	5.44183 48.9107
	6.93341 51.2521
	8.62337 53.4545
	10.4989 55.5012
	12.5455 57.3766
	14.7479 59.0666
	17.0893 60.5582
	19.5517 61.84
	22.1165 62.9024
	24.764 63.7371
	27.4743 64.338
	30.2266 64.7004
	33 64.8214
	35.7734 64.7004
	38.5257 64.338
	41.236 63.7371
	43.8835 62.9024
	46.4483 61.84
	48.9107 60.5582
	51.2521 59.0666
	53.4545 57.3766
	55.5012 55.5012
	57.3766 53.4545
	59.0666 51.2521
	60.5582 48.9107
	61.84 46.4483
	62.9024 43.8835
	63.7371 41.236
	64.338 38.5257
	64.7004 35.7734
	0 3 1858 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	3.53571 3.53571 58.9286 58.9286
	0 5 1859 0
	Name OC
	0 1 1
!
2fe
5a5a5a
808080
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	0 23040
	0 5 1860 0
	Name DIV
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	2880 11584
	0 5 1861 0
	Name IC
	0 1 1
!
2fe
5a5a5a
c0c0c0
0
0
0
2 0
1
	9.42855 9.42857 47.1429 47.1429
	0 23040
	0 2 1862 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1863 0
	0 1 1
!
=
	18.8165 18.826 28.3669 28.3479
	0 0 1864 0
	Name TOPC
	0 1 1
!
27e
5a5a5a
c0c0c0
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	4
	33 18.826
	47.1834 33
	33 47.174
	18.8165 33
	1 1 1865 0
	Name TXT
	0 1 1
!
346
808080
c0c0c0
0 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
	22.3522 20.0046 0
	M
	0 2 1866 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1867 0
	0 1 1
!
=
	3.53571 3.53571 58.9286 58.9286
	0 6 1868 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	3.53571 62.4643
	62.4643 3.53571
	0 6 1869 0
	Name QL2
	0 0 1
!
=
	2
	3.53571 3.53571
	62.4643 62.4643
	0 2 1870 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1871 0
	0 1 1
!
=
	0 0 66 66
	0 4 1872 0
	Name M1
	0 0 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 66 66 0 0
	0 6 1873 0
	Name M2
	0 0 1
!
=
	2
	66 0
	0 66
	0 6 1874 0
	Name M3
	0 0 1
!
=
	2
	0 0
	66 66
	0 2 1875 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 1876 0
	0 1 1
!
=
	0 0 0 0
N 1877
P 314.333 701
T 1855 0 1 0 0
0 0
R 0 0
0
	0 0 1878 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_MOTORE_ELE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG%=1;
//%TAG_POS%=2;
//%TAG_MAINT%=3;
}
func Sym_Tag_Refr() {
//%TAG%=00LCB11AP001;
//%TAG_POS%=00LCB11AP001_POS;
//%TAG_MAINT%=00LCB11AP001_MAINT;
}
//***GblSymDetails***
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; LABEL = "M"
;DTLS; LABELVISIBILITY = TRUE
;DTLS; GV_BQCOLOR = FALSE
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	66 0
	66 66
	0 66
N 1879
P 1322.36 706
T 1879 0 1 0 0
0 0
R 0 0
0
	0 3 1880 0
	Name VAR306
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_Pump_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad"||B;
}
func v_FillColor(){
C=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",D);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP1);
if(v_BadQuality()&&C||D>99) return CHarmBQClr;
if (TRIP1) return CHarmAlmAckClr;
if((D > 3.5  && D < 4.5)||(D > 1.5 && D < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((D > 7.5  && D < 8.5)||(D > 0.5 && D < 1.5))  return Charm_ASM_DynamicFillDevice;
if(D > 15.5  && D < 17.5) return CHarmTripClr;
return CHarmInTrblClr;
}
func v_FillShadeColor(){
EAT=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",F);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP2);
if(v_BadQuality()&&EAT||F>99) return CHarmBQShadeClr;
if (TRIP2) return CHarmAlmAckClr;
if((F > 3.5  && F < 4.5)||(F > 1.5 && F < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((F > 7.5  && F < 8.5)||(F > 0.5 && F < 1.5)) return Charm_ASM_DynamicFillDevice;
if(F>15.5&&F<17.5) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_Maint(){
TagRead(SO_Obj,SO_Tag3,".OUT",MAINT);
return MAINT;
}
func e_StartingStopping(){
TagRead(SO_Obj,SO_Tag2,".PV",D2);
return (D2 > 0.5  && D2 < 2.5);
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag2,".PV",D1);
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
if(D1 > 0.5  && D1 < 1.5) return Charm_ASM_VlvClsgClr;
if(D1 > 1.5  && D1 < 2.5) return Charm_ASM_VlvOpngClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_FillShadeColor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_Pump_FNC END
//-------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
SYMBOL3DEFFECT = FALSE
LABEL = "M"
LABELVISIBILITY = TRUE
GV_BQCOLOR = FALSE
FONT = "Font(Tahoma, 12, bold, *)"
//***GblSymDetails_End***
//Graphic - Pump BODY
object.OC.background = gsa_v_FillShadeColor();
object.IC.background = gsa_v_FillColor();
object.DIV.background = gsa_v_FillColor(); 
object.TOPC.background = gsa_v_FillColor();
if(gsa_Alarm()||e_StartingStopping()){
	object.AY.show = TRUE;
	} else {
	object.AY.show = FALSE;
}
if(gsa_3Deffect()){
object.OC.fillStyle = 14;
object.DIV.fillStyle = 14;
} else {
object.OC.fillStyle = 2;
object.DIV.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.M1.show = e_Maint();
object.M2.show = e_Maint();
object.M3.show = e_Maint();
end script
end dynamics
	0 0 66 66
	0 0 1881 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	72
	64.8214 33
	64.7004 30.2266
	64.338 27.4743
	63.7371 24.764
	62.9024 22.1165
	61.84 19.5517
	60.5582 17.0893
	59.0666 14.7479
	57.3766 12.5455
	55.5012 10.4989
	53.4545 8.62337
	51.2521 6.93341
	48.9107 5.44183
	46.4483 4.15999
	43.8835 3.09764
	41.236 2.26286
	38.5257 1.66201
	35.7734 1.29966
	33 1.17857
	30.2266 1.29966
	27.4743 1.66201
	24.764 2.26286
	22.1165 3.09764
	19.5517 4.15999
	17.0893 5.44183
	14.7479 6.93341
	12.5455 8.62337
	10.4989 10.4989
	8.62337 12.5455
	6.93341 14.7479
	5.44183 17.0893
	4.15999 19.5517
	3.09764 22.1165
	2.26286 24.764
	1.66201 27.4743
	1.29966 30.2266
	1.17857 33
	1.29966 35.7734
	1.66201 38.5257
	2.26286 41.236
	3.09764 43.8835
	4.15999 46.4483
	5.44183 48.9107
	6.93341 51.2521
	8.62337 53.4545
	10.4989 55.5012
	12.5455 57.3766
	14.7479 59.0666
	17.0893 60.5582
	19.5517 61.84
	22.1165 62.9024
	24.764 63.7371
	27.4743 64.338
	30.2266 64.7004
	33 64.8214
	35.7734 64.7004
	38.5257 64.338
	41.236 63.7371
	43.8835 62.9024
	46.4483 61.84
	48.9107 60.5582
	51.2521 59.0666
	53.4545 57.3766
	55.5012 55.5012
	57.3766 53.4545
	59.0666 51.2521
	60.5582 48.9107
	61.84 46.4483
	62.9024 43.8835
	63.7371 41.236
	64.338 38.5257
	64.7004 35.7734
	0 3 1882 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	3.53571 3.53571 58.9286 58.9286
	0 5 1883 0
	Name OC
	0 1 1
!
2fe
5a5a5a
808080
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	0 23040
	0 5 1884 0
	Name DIV
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	2880 11584
	0 5 1885 0
	Name IC
	0 1 1
!
2fe
5a5a5a
c0c0c0
0
0
0
2 0
1
	9.42855 9.42857 47.1429 47.1429
	0 23040
	0 2 1886 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1887 0
	0 1 1
!
=
	18.8165 18.826 28.3669 28.3479
	0 0 1888 0
	Name TOPC
	0 1 1
!
27e
5a5a5a
c0c0c0
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	4
	33 18.826
	47.1834 33
	33 47.174
	18.8165 33
	1 1 1889 0
	Name TXT
	0 1 1
!
346
808080
c0c0c0
0 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
	22.3522 20.0046 0
	M
	0 2 1890 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1891 0
	0 1 1
!
=
	3.53571 3.53571 58.9286 58.9286
	0 6 1892 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	3.53571 62.4643
	62.4643 3.53571
	0 6 1893 0
	Name QL2
	0 0 1
!
=
	2
	3.53571 3.53571
	62.4643 62.4643
	0 2 1894 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1895 0
	0 1 1
!
=
	0 0 66 66
	0 4 1896 0
	Name M1
	0 0 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 66 66 0 0
	0 6 1897 0
	Name M2
	0 0 1
!
=
	2
	66 0
	0 66
	0 6 1898 0
	Name M3
	0 0 1
!
=
	2
	0 0
	66 66
	0 2 1899 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 1900 0
	0 1 1
!
=
	0 0 0 0
N 1901
P 1322.36 706
T 1879 0 1 0 0
0 0
R 0 0
0
	0 0 1902 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_MOTORE_ELE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG%=1;
//%TAG_POS%=2;
//%TAG_MAINT%=3;
}
func Sym_Tag_Refr() {
//%TAG%=00LCB12AP001;
//%TAG_POS%=00LCB12AP001_POS;
//%TAG_MAINT%=00LCB12AP001_MAINT;
}
//***GblSymDetails***
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; LABEL = "M"
;DTLS; LABELVISIBILITY = TRUE
;DTLS; GV_BQCOLOR = FALSE
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	66 0
	66 66
	0 66
N 1903
P 1515.36 706
T 1903 0 1 0 0
0 0
R 0 0
0
	0 3 1904 0
	Name VAR307
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_Pump_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad"||B;
}
func v_FillColor(){
C=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",D);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP1);
if(v_BadQuality()&&C||D>99) return CHarmBQClr;
if (TRIP1) return CHarmAlmAckClr;
if((D > 3.5  && D < 4.5)||(D > 1.5 && D < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((D > 7.5  && D < 8.5)||(D > 0.5 && D < 1.5))  return Charm_ASM_DynamicFillDevice;
if(D > 15.5  && D < 17.5) return CHarmTripClr;
return CHarmInTrblClr;
}
func v_FillShadeColor(){
EAT=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",F);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP2);
if(v_BadQuality()&&EAT||F>99) return CHarmBQShadeClr;
if (TRIP2) return CHarmAlmAckClr;
if((F > 3.5  && F < 4.5)||(F > 1.5 && F < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((F > 7.5  && F < 8.5)||(F > 0.5 && F < 1.5)) return Charm_ASM_DynamicFillDevice;
if(F>15.5&&F<17.5) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_Maint(){
TagRead(SO_Obj,SO_Tag3,".OUT",MAINT);
return MAINT;
}
func e_StartingStopping(){
TagRead(SO_Obj,SO_Tag2,".PV",D2);
return (D2 > 0.5  && D2 < 2.5);
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag2,".PV",D1);
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
if(D1 > 0.5  && D1 < 1.5) return Charm_ASM_VlvClsgClr;
if(D1 > 1.5  && D1 < 2.5) return Charm_ASM_VlvOpngClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_FillShadeColor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_Pump_FNC END
//-------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
SYMBOL3DEFFECT = FALSE
LABEL = "M"
LABELVISIBILITY = TRUE
GV_BQCOLOR = FALSE
FONT = "Font(Tahoma, 12, bold, *)"
//***GblSymDetails_End***
//Graphic - Pump BODY
object.OC.background = gsa_v_FillShadeColor();
object.IC.background = gsa_v_FillColor();
object.DIV.background = gsa_v_FillColor(); 
object.TOPC.background = gsa_v_FillColor();
if(gsa_Alarm()||e_StartingStopping()){
	object.AY.show = TRUE;
	} else {
	object.AY.show = FALSE;
}
if(gsa_3Deffect()){
object.OC.fillStyle = 14;
object.DIV.fillStyle = 14;
} else {
object.OC.fillStyle = 2;
object.DIV.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.M1.show = e_Maint();
object.M2.show = e_Maint();
object.M3.show = e_Maint();
end script
end dynamics
	0 0 66 66
	0 0 1905 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	72
	64.8214 33
	64.7004 30.2266
	64.338 27.4743
	63.7371 24.764
	62.9024 22.1165
	61.84 19.5517
	60.5582 17.0893
	59.0666 14.7479
	57.3766 12.5455
	55.5012 10.4989
	53.4545 8.62337
	51.2521 6.93341
	48.9107 5.44183
	46.4483 4.15999
	43.8835 3.09764
	41.236 2.26286
	38.5257 1.66201
	35.7734 1.29966
	33 1.17857
	30.2266 1.29966
	27.4743 1.66201
	24.764 2.26286
	22.1165 3.09764
	19.5517 4.15999
	17.0893 5.44183
	14.7479 6.93341
	12.5455 8.62337
	10.4989 10.4989
	8.62337 12.5455
	6.93341 14.7479
	5.44183 17.0893
	4.15999 19.5517
	3.09764 22.1165
	2.26286 24.764
	1.66201 27.4743
	1.29966 30.2266
	1.17857 33
	1.29966 35.7734
	1.66201 38.5257
	2.26286 41.236
	3.09764 43.8835
	4.15999 46.4483
	5.44183 48.9107
	6.93341 51.2521
	8.62337 53.4545
	10.4989 55.5012
	12.5455 57.3766
	14.7479 59.0666
	17.0893 60.5582
	19.5517 61.84
	22.1165 62.9024
	24.764 63.7371
	27.4743 64.338
	30.2266 64.7004
	33 64.8214
	35.7734 64.7004
	38.5257 64.338
	41.236 63.7371
	43.8835 62.9024
	46.4483 61.84
	48.9107 60.5582
	51.2521 59.0666
	53.4545 57.3766
	55.5012 55.5012
	57.3766 53.4545
	59.0666 51.2521
	60.5582 48.9107
	61.84 46.4483
	62.9024 43.8835
	63.7371 41.236
	64.338 38.5257
	64.7004 35.7734
	0 3 1906 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	3.53571 3.53571 58.9286 58.9286
	0 5 1907 0
	Name OC
	0 1 1
!
2fe
5a5a5a
808080
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	0 23040
	0 5 1908 0
	Name DIV
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	2880 11584
	0 5 1909 0
	Name IC
	0 1 1
!
2fe
5a5a5a
c0c0c0
0
0
0
2 0
1
	9.42855 9.42857 47.1429 47.1429
	0 23040
	0 2 1910 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1911 0
	0 1 1
!
=
	18.8165 18.826 28.3669 28.3479
	0 0 1912 0
	Name TOPC
	0 1 1
!
27e
5a5a5a
c0c0c0
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	4
	33 18.826
	47.1834 33
	33 47.174
	18.8165 33
	1 1 1913 0
	Name TXT
	0 1 1
!
346
808080
c0c0c0
0 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
	22.3522 20.0046 0
	M
	0 2 1914 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1915 0
	0 1 1
!
=
	3.53571 3.53571 58.9286 58.9286
	0 6 1916 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	3.53571 62.4643
	62.4643 3.53571
	0 6 1917 0
	Name QL2
	0 0 1
!
=
	2
	3.53571 3.53571
	62.4643 62.4643
	0 2 1918 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1919 0
	0 1 1
!
=
	0 0 66 66
	0 4 1920 0
	Name M1
	0 0 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 66 66 0 0
	0 6 1921 0
	Name M2
	0 0 1
!
=
	2
	66 0
	0 66
	0 6 1922 0
	Name M3
	0 0 1
!
=
	2
	0 0
	66 66
	0 2 1923 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 1924 0
	0 1 1
!
=
	0 0 0 0
N 1925
P 1515.36 706
T 1903 0 1 0 0
0 0
R 0 0
0
	0 0 1926 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_MOTORE_ELE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG%=1;
//%TAG_POS%=2;
//%TAG_MAINT%=3;
}
func Sym_Tag_Refr() {
//%TAG%=11LAC22AP001;
//%TAG_POS%=11LAC22AP001_POS;
//%TAG_MAINT%=11LAC22AP001_MAINT;
}
//***GblSymDetails***
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; LABEL = "M"
;DTLS; LABELVISIBILITY = TRUE
;DTLS; GV_BQCOLOR = FALSE
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	66 0
	66 66
	0 66
N 1927
P 1692.36 704
T 1927 0 1 0 0
0 0
R 0 0
0
	0 3 1928 0
	Name VAR308
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_Pump_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad"||B;
}
func v_FillColor(){
C=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",D);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP1);
if(v_BadQuality()&&C||D>99) return CHarmBQClr;
if (TRIP1) return CHarmAlmAckClr;
if((D > 3.5  && D < 4.5)||(D > 1.5 && D < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((D > 7.5  && D < 8.5)||(D > 0.5 && D < 1.5))  return Charm_ASM_DynamicFillDevice;
if(D > 15.5  && D < 17.5) return CHarmTripClr;
return CHarmInTrblClr;
}
func v_FillShadeColor(){
EAT=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",F);
TagRead(SO_Obj,SO_Tag,".FB4",TRIP2);
if(v_BadQuality()&&EAT||F>99) return CHarmBQShadeClr;
if (TRIP2) return CHarmAlmAckClr;
if((F > 3.5  && F < 4.5)||(F > 1.5 && F < 2.5)) return Charm_ASM_DynamicOffStpdClsdClr;
if((F > 7.5  && F < 8.5)||(F > 0.5 && F < 1.5)) return Charm_ASM_DynamicFillDevice;
if(F>15.5&&F<17.5) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_Maint(){
TagRead(SO_Obj,SO_Tag3,".OUT",MAINT);
return MAINT;
}
func e_StartingStopping(){
TagRead(SO_Obj,SO_Tag2,".PV",D2);
return (D2 > 0.5  && D2 < 2.5);
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag2,".PV",D1);
TagRead(SO_Obj,SO_Tag,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
if(D1 > 0.5  && D1 < 1.5) return Charm_ASM_VlvClsgClr;
if(D1 > 1.5  && D1 < 2.5) return Charm_ASM_VlvOpngClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadPumpMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_FillShadeColor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_Pump_FNC END
//-------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
SYMBOL3DEFFECT = FALSE
LABEL = "M"
LABELVISIBILITY = TRUE
GV_BQCOLOR = FALSE
FONT = "Font(Tahoma, 12, bold, *)"
//***GblSymDetails_End***
//Graphic - Pump BODY
object.OC.background = gsa_v_FillShadeColor();
object.IC.background = gsa_v_FillColor();
object.DIV.background = gsa_v_FillColor(); 
object.TOPC.background = gsa_v_FillColor();
if(gsa_Alarm()||e_StartingStopping()){
	object.AY.show = TRUE;
	} else {
	object.AY.show = FALSE;
}
if(gsa_3Deffect()){
object.OC.fillStyle = 14;
object.DIV.fillStyle = 14;
} else {
object.OC.fillStyle = 2;
object.DIV.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.M1.show = e_Maint();
object.M2.show = e_Maint();
object.M3.show = e_Maint();
end script
end dynamics
	0 0 66 66
	0 0 1929 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	72
	64.8214 33
	64.7004 30.2266
	64.338 27.4743
	63.7371 24.764
	62.9024 22.1165
	61.84 19.5517
	60.5582 17.0893
	59.0666 14.7479
	57.3766 12.5455
	55.5012 10.4989
	53.4545 8.62337
	51.2521 6.93341
	48.9107 5.44183
	46.4483 4.15999
	43.8835 3.09764
	41.236 2.26286
	38.5257 1.66201
	35.7734 1.29966
	33 1.17857
	30.2266 1.29966
	27.4743 1.66201
	24.764 2.26286
	22.1165 3.09764
	19.5517 4.15999
	17.0893 5.44183
	14.7479 6.93341
	12.5455 8.62337
	10.4989 10.4989
	8.62337 12.5455
	6.93341 14.7479
	5.44183 17.0893
	4.15999 19.5517
	3.09764 22.1165
	2.26286 24.764
	1.66201 27.4743
	1.29966 30.2266
	1.17857 33
	1.29966 35.7734
	1.66201 38.5257
	2.26286 41.236
	3.09764 43.8835
	4.15999 46.4483
	5.44183 48.9107
	6.93341 51.2521
	8.62337 53.4545
	10.4989 55.5012
	12.5455 57.3766
	14.7479 59.0666
	17.0893 60.5582
	19.5517 61.84
	22.1165 62.9024
	24.764 63.7371
	27.4743 64.338
	30.2266 64.7004
	33 64.8214
	35.7734 64.7004
	38.5257 64.338
	41.236 63.7371
	43.8835 62.9024
	46.4483 61.84
	48.9107 60.5582
	51.2521 59.0666
	53.4545 57.3766
	55.5012 55.5012
	57.3766 53.4545
	59.0666 51.2521
	60.5582 48.9107
	61.84 46.4483
	62.9024 43.8835
	63.7371 41.236
	64.338 38.5257
	64.7004 35.7734
	0 3 1930 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	3.53571 3.53571 58.9286 58.9286
	0 5 1931 0
	Name OC
	0 1 1
!
2fe
5a5a5a
808080
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	0 23040
	0 5 1932 0
	Name DIV
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
2 0
1
	3.53571 3.53571 58.9286 58.9286
	2880 11584
	0 5 1933 0
	Name IC
	0 1 1
!
2fe
5a5a5a
c0c0c0
0
0
0
2 0
1
	9.42855 9.42857 47.1429 47.1429
	0 23040
	0 2 1934 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1935 0
	0 1 1
!
=
	18.8165 18.826 28.3669 28.3479
	0 0 1936 0
	Name TOPC
	0 1 1
!
27e
5a5a5a
c0c0c0
0
0
0
2 0
	0 1 0
	0 0 0 0 1 
	4
	33 18.826
	47.1834 33
	33 47.174
	18.8165 33
	1 1 1937 0
	Name TXT
	0 1 1
!
346
808080
c0c0c0
0 0
-*-Tahoma-bold-r-normal-*-14-*-*-p-*-iso8859-1-
	22.3522 20.0046 0
	M
	0 2 1938 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1939 0
	0 1 1
!
=
	3.53571 3.53571 58.9286 58.9286
	0 6 1940 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	3.53571 62.4643
	62.4643 3.53571
	0 6 1941 0
	Name QL2
	0 0 1
!
=
	2
	3.53571 3.53571
	62.4643 62.4643
	0 2 1942 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 1943 0
	0 1 1
!
=
	0 0 66 66
	0 4 1944 0
	Name M1
	0 0 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 66 66 0 0
	0 6 1945 0
	Name M2
	0 0 1
!
=
	2
	66 0
	0 66
	0 6 1946 0
	Name M3
	0 0 1
!
=
	2
	0 0
	66 66
	0 2 1947 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 1948 0
	0 1 1
!
=
	0 0 0 0
N 1949
P 1692.36 704
T 1927 0 1 0 0
0 0
R 0 0
0
	0 0 1950 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_MOTORE_ELE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG%=1;
//%TAG_POS%=2;
//%TAG_MAINT%=3;
}
func Sym_Tag_Refr() {
//%TAG%=12LAC22AP001;
//%TAG_POS%=11LAC22AP001_POS;
//%TAG_MAINT%=11LAC22AP001_MAINT;
}
//***GblSymDetails***
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; LABEL = "M"
;DTLS; LABELVISIBILITY = TRUE
;DTLS; GV_BQCOLOR = FALSE
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	66 0
	66 66
	0 66
N 1951
P 1813.33 2
T -1
R 0 0
0
	0 4 1952 0
	Name VAR329
	0 1 1
!
27e
3a3a3a
dfdfdf
0
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",ValueBgFillColor);
LcFg(SO_Obj,"",PG_MAJORLABEL);
ToolTipText = "Click Here";
end script
end dynamics
	0 0 67.3333 40 4 0
N 1953
P 1827.5 8
T -1
R 0 0
0
	1 1 1954 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-18-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	SLD
N 1955
P 76.3333 434.667
T -1
R 0 0
0
	0 4 1956 0
	Name RND_R_29C0C80
	0 1 1
!
27e
a3a3a3
b4b4b4
1
0
0
2 0
dynamics
script
LcBg(SO_Obj,"",PG_Static_Objects);
LcFg(SO_Obj,"",PG_BORDER_Static_Objects);
end script
end dynamics
	0 0 16 41.3333 0 0
N 1957
P 205.333 434.667
T -1
R 0 0
0
	0 4 1958 0
	Name RND_R_29C0C80
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_Static_Objects);
LcFg(SO_Obj,"",PG_BORDER_Static_Objects);
end script
end dynamics
	0 0 16 41.3333 0 0
N 1959
P 339.333 434.667
T -1
R 0 0
0
	0 4 1960 0
	Name RND_R_29C0C80
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_Static_Objects);
LcFg(SO_Obj,"",PG_BORDER_Static_Objects);
end script
end dynamics
	0 0 16 41.3333 0 0
N 1961
P 1350.33 431.333
T -1
R 0 0
0
	0 4 1962 0
	Name RND_R_29C0C80
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_Static_Objects);
LcFg(SO_Obj,"",PG_BORDER_Static_Objects);
end script
end dynamics
	0 0 16 41.3333 0 0
N 1963
P 1538 431.333
T -1
R 0 0
0
	0 4 1964 0
	Name RND_R_29C0C80
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_Static_Objects);
LcFg(SO_Obj,"",PG_BORDER_Static_Objects);
end script
end dynamics
	0 0 16 41.3333 0 0
N 1965
P 1720 431.333
T -1
R 0 0
0
	0 4 1966 0
	Name RND_R_29C0C80
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_Static_Objects);
LcFg(SO_Obj,"",PG_BORDER_Static_Objects);
end script
end dynamics
	0 0 16 41.3333 0 0
N 1967
P 105 629
T -1
R 0 0
0
	1 1 1968 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 1969
P 144 610
T -1
R 0 0
0
	1 1 1970 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 1971
P 179.689 608.6
T 1971 0 1 0 0
0 0
R 0 0
0
	0 3 1972 0
	Name VAR309
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1973 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1974 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1975 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1976 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1977 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1978
P 179.689 608.6
T 1971 0 1 0 0
0 0
R 0 0
0
	0 0 1979 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1980
P 179.689 627.6
T 1980 0 1 0 0
0 0
R 0 0
0
	0 3 1981 0
	Name VAR310
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1982 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1983 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1984 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1985 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1986 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 1987
P 179.689 627.6
T 1980 0 1 0 0
0 0
R 0 0
0
	0 0 1988 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 1989
P 233 623.667
T -1
R 0 0
0
	1 1 1990 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 1991
P 272 604.667
T -1
R 0 0
0
	1 1 1992 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 1993
P 307.689 603.267
T 1993 0 1 0 0
0 0
R 0 0
0
	0 3 1994 0
	Name VAR311
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 1995 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 1996 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 1997 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 1998 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 1999 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2000
P 307.689 603.267
T 1993 0 1 0 0
0 0
R 0 0
0
	0 0 2001 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2002
P 307.689 622.267
T 2002 0 1 0 0
0 0
R 0 0
0
	0 3 2003 0
	Name VAR312
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2004 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2005 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2006 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2007 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2008 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2009
P 307.689 622.267
T 2002 0 1 0 0
0 0
R 0 0
0
	0 0 2010 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2011
P 1236.33 628.334
T -1
R 0 0
0
	1 1 2012 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 2013
P 1275.33 609.334
T -1
R 0 0
0
	1 1 2014 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 2015
P 1311.02 607.934
T 2015 0 1 0 0
0 0
R 0 0
0
	0 3 2016 0
	Name VAR313
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2017 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2018 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2019 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2020 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2021 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2022
P 1311.02 607.934
T 2015 0 1 0 0
0 0
R 0 0
0
	0 0 2023 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2024
P 1311.02 626.934
T 2024 0 1 0 0
0 0
R 0 0
0
	0 3 2025 0
	Name VAR314
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2026 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2027 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2028 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2029 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2030 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2031
P 1311.02 626.934
T 2024 0 1 0 0
0 0
R 0 0
0
	0 0 2032 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2033
P 1427.51 637.667
T -1
R 0 0
0
	1 1 2034 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 2035
P 1466.51 618.667
T -1
R 0 0
0
	1 1 2036 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 2037
P 1501.62 618.267
T 2037 0 1 0 0
0 0
R 0 0
0
	0 3 2038 0
	Name VAR315
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2039 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2040 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2041 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2042 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2043 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2044
P 1501.62 618.267
T 2037 0 1 0 0
0 0
R 0 0
0
	0 0 2045 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2046
P 1501.62 637.267
T 2046 0 1 0 0
0 0
R 0 0
0
	0 3 2047 0
	Name VAR316
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2048 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2049 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2050 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2051 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2052 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2053
P 1501.62 637.267
T 2046 0 1 0 0
0 0
R 0 0
0
	0 0 2054 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2055
P 1609.33 635.5
T -1
R 0 0
0
	1 1 2056 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 2057
P 1648.33 616.5
T -1
R 0 0
0
	1 1 2058 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 2059
P 1684.02 615.1
T 2059 0 1 0 0
0 0
R 0 0
0
	0 3 2060 0
	Name VAR317
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2061 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2062 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2063 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2064 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2065 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2066
P 1684.02 615.1
T 2059 0 1 0 0
0 0
R 0 0
0
	0 0 2067 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2068
P 1684.02 634.1
T 2068 0 1 0 0
0 0
R 0 0
0
	0 3 2069 0
	Name VAR318
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2070 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2071 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2072 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2073 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2074 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2075
P 1684.02 634.1
T 2068 0 1 0 0
0 0
R 0 0
0
	0 0 2076 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2077
P 747 274.334
T -1
R 0 0
0
	1 1 2078 0
	Name RND_T_8D23CD0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	AC INCOMING SUPPLY FAIL
N 2079
P 887.022 274.267
T 2079 0 1 0 0
0 0
R 0 0
0
	0 3 2080 0
	Name VAR319
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2081 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2082 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2083 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2084 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2085 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2086
P 887.022 274.267
T 2079 0 1 0 0
0 0
R 0 0
0
	0 0 2087 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2088
P 649.333 229.333
T 2088 0 1 0 0
0 0
R 0 0
0
	0 3 2089 0
	Name VAR19
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = PG_GRAPHICS_BACKGROUND
TEXTCOLOR = Black
FILLCOLOR = CHarmAlmUnAckClr
ONESTATETEXT = "FAST XFER TRBL"
ZEROSTATETEXT = ""
FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 1) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1) {
object.QL1.show = TRUE;
object.QL2.show = TRUE;
} else {
object.QL1.show = FALSE;
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 170 27.125
	0 4 2090 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.982934 0.125 168.398 27 0 0
	1 1 2091 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-15-*-*-p-*-iso8859-1-
	14.0915 0.125 0
	XFER READY B
	0 6 2092 0
	Name QL2
	0 1 1
!
27e
-180-1
c0c0c0
1
0
0
0 0
	2
	0.618173 0.599998
	170 26.6
	0 6 2093 0
	Name QL1
	0 1 1
!
=
	2
	166.909 0
	0 27
	0 2 2094 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2095
P 649.333 229.333
T 2088 0 1 0 0
0 0
R 0 0
0
	0 0 2096 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
SG_TEXT_MULTIPLE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = PG_GRAPHICS_BACKGROUND
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = CHarmAlmUnAckClr
;DTLS; ONESTATETEXT = "FAST XFER TRBL"
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = PG_GRAPHICS_BACKGROUND
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	170 0
	170 27.125
	0 27.125
N 2097
P 401 329
T -1
R 0 0
0
	0 6 2098 0
	0 1 1
!
27e
-1aa00
-1aa00
2
0
0
0 0
dynamics
script
LcBg(SO_Obj,"",PG_5p5kvto10kv);
LcFg(SO_Obj,"",PG_5p5kvto10kv);
end script
end dynamics
	2
	0 70
	0 0
N 2099
P 351 307.5
T 2099 25966 1 0 0
0 0
R 0 0
0
	0 3 2100 0
	Name VAR20
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_BreakerE_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad" || B;
}
func v_Congruency(){
TagRead(SO_Obj,SO_Tag2,".PV",C);
return (C < 0.5) || (C > 2.5 && C < 3.5);
}
func v_Open(){
TagRead(SO_Obj,SO_Tag2,".PV",D);
return D > 3.5 && D < 4.5;
}
func v_Closed(){
TagRead(SO_Obj,SO_Tag2,".PV",E11);
return E11 > 7.5 && E11 < 8.5;
}
func v_Tripped(){
TagRead(SO_Obj,SO_Tag2,".PV",F);
return F > 15.5 && F < 17.5;
}
func v_shadecolor(){
G=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",H);
if(v_BadQuality() && G || H > 99) return CHarmBQShadeClr;
if(v_Congruency()) return CHarmInTrblShadeClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func v_FillColor(){
I=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",J);
if(v_BadQuality() && I || J > 99) return CHarmBQClr;
if(v_Congruency()) return CHarmInTrblClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripClr;
return CHarmInTrblClr;
}
func Position(){
if(v_Closed()) return "Closed";
if(v_Open()) return "Opened";
if(v_Tripped()) return "Opened";
return "Opened";
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag3,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_shadecolor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag3,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_Position(){
return Position();
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_BreakerE_FNC END
//-----------------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if(gsa_Alarm()){
if(gsa_Orientation()=="Horizontal"){
object.AY.show = TRUE;
object.AY2.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.AY.show = FALSE;
object.AY2.show = TRUE;
} else {
object.AY.show = TRUE;
object.AY2.show = FALSE;
}
} else {
object.AY.show = FALSE;
object.AY2.show = FALSE;
}
if(gsa_Orientation()=="Horizontal"){
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.BASE.show = FALSE;
object.LINE1.show = FALSE;
object.LINE2.show = FALSE;
object.LINE3.show = FALSE;
object.LINE3O.show = FALSE;
object.BASE2.show = TRUE;
object.LINE11.show = TRUE;
object.LINE22.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE33O.show = FALSE;
object.LINE33.show = TRUE;
} else {
object.LINE33O.show = TRUE;
object.LINE33.show = FALSE;
}
} else {
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
}
//Graphic - Base/Base2
object.BASE.background = gsa_v_FillColor();
object.BASE.foreground = gsa_v_FillShadeColor();
object.BASE2.background = gsa_v_FillColor();
object.BASE2.foreground = gsa_v_FillShadeColor();
if(gsa_3Deffect()){
object.BASE.fillStyle = 15;
object.BASE2.fillStyle = 14;
} else {
object.BASE.fillStyle = 2;
object.BASE2.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.AY2.background = gsa_AlarmColor();
object.AY2.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.OUTL.show = FALSE;
end script
end dynamics
	0 0 80 74
	0 4 2101 0
	Name OUTL
	0 0 1
!
=
	0 0 80 74 0 0
	0 3 2102 0
	0 1 1
!
=
	0.36036 19.8214 79.2793 34.3571
	0 3 2103 0
	0 1 1
!
=
	13.3333 28.7411 52.6126 24.4464
	0 4 2104 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	13.3333 28.7411 52.6126 24.4464 0 0
	0 4 2105 0
	Name BASE
	0 0 1
!
27e
808080
c0c0c0
0
0
0
2 0
	16.2162 31.3839 46.8468 19.1607 0 0
	0 2 2106 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 2107 0
	Name LINE1
	0 0 1
!
27e
000000
000000
0
0
0
1 0
	0.36036 44.9286 28.8288 1.32143 0 0
	0 4 2108 0
	Name LINE2
	0 0 1
!
=
	50.8108 44.9286 28.8288 1.32143 0 0
	0 5 2109 0
	Name LINE3
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	28.8288 34.3571 23.0631 19.8214
	0 11584
	0 5 2110 0
	Name LINE3O
	0 0 1
!
=
	28.8288 19.8214 23.0631 19.8214
	0 11584
	0 2 2111 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 2112 0
	0 1 1
!
=
	19.0991 1.32143 41.8018 71.3571
	0 3 2113 0
	0 1 1
!
=
	30.2703 11.5625 26.6667 48.2321
	0 4 2114 0
	Name AY2
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	30.2703 11.5625 26.6667 48.2321 0 0
	0 4 2115 0
	Name BASE2
	0 1 1
!
27e
808080
c0c0c0
0
0
0
2 0
	33.1532 14.2054 20.9009 42.9464 0 0
	0 2 2116 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 2117 0
	Name LINE11
	0 1 1
!
27e
000000
000000
0
0
0
1 0
	48.6486 46.25 1.44144 26.4286 0 0
	0 4 2118 0
	Name LINE22
	0 1 1
!
=
	48.6486 1.32143 1.44144 26.4286 0 0
	0 5 2119 0
	Name LINE33
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	37.8378 27.0893 23.0631 19.8214
	5760 11584
	0 5 2120 0
	Name LINE33O
	0 1 1
!
=
	19.0991 27.0893 23.0631 19.8214
	5760 11584
	0 2 2121 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 2122 0
	0 1 1
!
=
	14.6205 3.63393 50.7589 66.7321
	0 6 2123 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
2
0
0
0 0
	2
	14.6205 69.8745
	65.3795 4.1246
	0 6 2124 0
	Name QL2
	0 0 1
!
=
	2
	15.3562 3.63393
	64.6438 70.3661
	0 2 2125 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 2126 0
	0 1 1
!
=
	0 0 0 0
N 2127
P 367.216 322.696
T 2099 0 1 0 0
0 0
R 0 0
0
	0 3 2128 0
	Name VAR21
	0 1 1
!
27e
000000
d4d0c8
1
0
0
0 0
dynamics
script
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if (value == 1) {
object.show = TRUE;
} else {
object.show = FALSE;
object.ghostelement=FALSE;
}
end script
end dynamics
	0 0 47.5676 43.6071
	0 4 2129 0
	0 1 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 47.5676 43.6071 0 0
	0 6 2130 0
	0 1 1
!
=
	2
	46.7397 1.13759
	0.806229 43.2759
	0 6 2131 0
	0 1 1
!
=
	2
	0.806229 1.13759
	46.4787 43.0424
	0 2 2132 0
	0 1 1
!
27e
000000
d4d0c8
0
0
0
0 0
	0 0 0 0
N 2133
P 351 307.5
T 2099 0 1 0 0
0 0
R 0 0
0
	0 0 2134 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_BREAKERE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG3%=4;
//%TAG%_MAINT=5;
}

func Sym_Tag_Refr() {
//%TAG1%=11BBT10GT100;
//%TAG2%=11BBT10GT100_POS;
//%TAG3%=11BBT10GT100_MAINT;
//%TAG%_MAINT=%TAG%_MAINT;
}

//***GblSymDetails***
;DTLS; ORIENTATION = "Vertical"
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; GV_BQCOLOR = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 74
	0 74
N 2135
P 426 299.333
T -1
R 0 0
0
	1 1 2136 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 2137
P 465 280.333
T -1
R 0 0
0
	1 1 2138 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 2139
P 460 318.333
T -1
R 0 0
0
	1 1 2140 0
	Name RND_T_8D24B10
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 2141
P 468 337.333
T -1
R 0 0
0
	1 1 2142 0
	Name RND_T_8D24840
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 2143
P 443 356.333
T -1
R 0 0
0
	1 1 2144 0
	Name RND_T_8D23910
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP COIL
N 2145
P 500.689 278.933
T 2145 0 1 0 0
0 0
R 0 0
0
	0 3 2146 0
	Name VAR322
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2147 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2148 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2149 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2150 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2151 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2152
P 500.689 278.933
T 2145 0 1 0 0
0 0
R 0 0
0
	0 0 2153 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2154
P 500.689 297.933
T 2154 0 1 0 0
0 0
R 0 0
0
	0 3 2155 0
	Name VAR323
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2156 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2157 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2158 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2159 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2160 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2161
P 500.689 297.933
T 2154 0 1 0 0
0 0
R 0 0
0
	0 0 2162 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2163
P 500.689 316.933
T 2163 0 1 0 0
0 0
R 0 0
0
	0 3 2164 0
	Name VAR324
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2165 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2166 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2167 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2168 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2169 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2170
P 500.689 316.933
T 2163 0 1 0 0
0 0
R 0 0
0
	0 0 2171 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2172
P 500.689 335.933
T 2172 0 1 0 0
0 0
R 0 0
0
	0 3 2173 0
	Name VAR325
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2174 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2175 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2176 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2177 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2178 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2179
P 500.689 335.933
T 2172 0 1 0 0
0 0
R 0 0
0
	0 0 2180 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2181
P 500.689 354.933
T 2181 0 1 0 0
0 0
R 0 0
0
	0 3 2182 0
	Name VAR326
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2183 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2184 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2185 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2186 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2187 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2188
P 500.689 354.933
T 2181 0 1 0 0
0 0
R 0 0
0
	0 0 2189 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2190
P 1261 291
T 2190 0 1 0 0
0 0
R 0 0
0
	0 3 2191 0
	Name VAR22
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
// S+_FNC UT_Har_BreakerE_FNC INIT
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
func gsa_3Deffect(){
return SYMBOL3DEFFECT;
}
func gsa_Orientation(){
return ORIENTATION;
}
// S+_FNC BASIC_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 INIT
//Common String Concat function
func v_BadQuality(){
DataQuality(SO_Obj,SO_Tag2,".PV",A);
TagRead(SO_Obj,SO_Tag2,".BAD",B);
return A=="Bad" || B;
}
func v_Congruency(){
TagRead(SO_Obj,SO_Tag2,".PV",C);
return (C < 0.5) || (C > 2.5 && C < 3.5);
}
func v_Open(){
TagRead(SO_Obj,SO_Tag2,".PV",D);
return D > 3.5 && D < 4.5;
}
func v_Closed(){
TagRead(SO_Obj,SO_Tag2,".PV",E11);
return E11 > 7.5 && E11 < 8.5;
}
func v_Tripped(){
TagRead(SO_Obj,SO_Tag2,".PV",F);
return F > 15.5 && F < 17.5;
}
func v_shadecolor(){
G=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",H);
if(v_BadQuality() && G || H > 99) return CHarmBQShadeClr;
if(v_Congruency()) return CHarmInTrblShadeClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripShadeClr;
return CHarmInTrblShadeClr;
}
func v_FillColor(){
I=GV_BQCOLOR;
TagRead(SO_Obj,SO_Tag2,".PV",J);
if(v_BadQuality() && I || J > 99) return CHarmBQClr;
if(v_Congruency()) return CHarmInTrblClr;
if(v_Open()) return Charm_ASM_DynamicOffStpdClsdClr
if(v_Closed()) return Charm_ASM_DynamicFillDevice
if(v_Tripped()) return CHarmTripClr;
return CHarmInTrblClr;
}
func Position(){
if(v_Closed()) return "Closed";
if(v_Open()) return "Opened";
if(v_Tripped()) return "Opened";
return "Opened";
}
func e_Unack(){
TagRead(SO_Obj,SO_Tag3,".UNACK",UNACK);
return UNACK;
}
func e_Alarm(){
UNK = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if((ALARM&&UNK)||(ALARM&&!UNK)||(!ALARM&&UNK)) return TRUE;
return FALSE;
}
func e_AlarmColor(){
UNK1 = e_Unack();
TagRead(SO_Obj,SO_Tag3,".ALARM",ALARM);
if(ALARM&&UNK1) return CHarmAlmUnAckClr;
if(ALARM&&!UNK1) return CHarmAlmAckClr;
if(!ALARM&&UNK1) return CHarmAlmRTNClr;
return RGB(215,215,215);
}
func e_QL1Visible(){
CCC=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA);
if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL1);
if(FL1>99) return TRUE;
return FALSE;
}
func e_QL2Visible(){
CCC1=GV_BQCOLOR;
QualityDetail(SO_Obj,SO_Tag2,".PV",DDD1);
TagRead(SO_Obj,SO_Tag2,".SUBSTITUTED",AAA1);
if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
TagRead(SO_Obj,SO_Tag2,".PV",FL2);
if(FL2>99) return TRUE;
return FALSE;
}
// S+_FNC CONNECT_FUNC_INFI90HarmonyAnalogRead_AnalogReadBreakerEMultiTagPG2 END
func gsa_v_FillShadeColor(){
return v_shadecolor();
}
func gsa_v_FillColor() {
return v_FillColor();
}
func gsa_Alarm(){
TagRead(SO_Obj,SO_Tag3,".INHB",LLLO);
return (e_Alarm()&&!LLLO);
}
func gsa_Position(){
return Position();
}
func gsa_AlarmColor() {
return e_AlarmColor();
}
func gsa_QL1Visible(){
return e_QL1Visible();
}
func gsa_QL2Visible(){
return e_QL2Visible();
}
// S+_FNC UT_Har_BreakerE_FNC END
//-----------------------------------------------------------------------
func e_RunIP()  {
}
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if(gsa_Alarm()){
if(gsa_Orientation()=="Horizontal"){
object.AY.show = TRUE;
object.AY2.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.AY.show = FALSE;
object.AY2.show = TRUE;
} else {
object.AY.show = TRUE;
object.AY2.show = FALSE;
}
} else {
object.AY.show = FALSE;
object.AY2.show = FALSE;
}
if(gsa_Orientation()=="Horizontal"){
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
} else if(gsa_Orientation()=="Vertical"){
object.BASE.show = FALSE;
object.LINE1.show = FALSE;
object.LINE2.show = FALSE;
object.LINE3.show = FALSE;
object.LINE3O.show = FALSE;
object.BASE2.show = TRUE;
object.LINE11.show = TRUE;
object.LINE22.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE33O.show = FALSE;
object.LINE33.show = TRUE;
} else {
object.LINE33O.show = TRUE;
object.LINE33.show = FALSE;
}
} else {
object.BASE.show = TRUE;
object.LINE1.show = TRUE;
object.LINE2.show = TRUE;
if(gsa_Position() == "Closed"){
object.LINE3O.show = FALSE;
object.LINE3.show = TRUE;
} else {
object.LINE3O.show = TRUE;
object.LINE3.show = FALSE;
}
object.BASE2.show = FALSE;
object.LINE11.show = FALSE;
object.LINE22.show = FALSE;
object.LINE33.show = FALSE;
object.LINE33O.show = FALSE;
}
//Graphic - Base/Base2
object.BASE.background = gsa_v_FillColor();
object.BASE.foreground = gsa_v_FillShadeColor();
object.BASE2.background = gsa_v_FillColor();
object.BASE2.foreground = gsa_v_FillShadeColor();
if(gsa_3Deffect()){
object.BASE.fillStyle = 15;
object.BASE2.fillStyle = 14;
} else {
object.BASE.fillStyle = 2;
object.BASE2.fillStyle = 2;
}
object.AY.background = gsa_AlarmColor();
object.AY.foreground = gsa_AlarmColor();
object.AY2.background = gsa_AlarmColor();
object.AY2.foreground = gsa_AlarmColor();
object.QL1.show = gsa_QL1Visible();
object.QL2.show = gsa_QL2Visible();
object.OUTL.show = FALSE;
end script
end dynamics
	0 0 80 74
	0 4 2192 0
	Name OUTL
	0 0 1
!
=
	0 0 80 74 0 0
	0 3 2193 0
	0 1 1
!
=
	0.36036 19.8214 79.2793 34.3571
	0 3 2194 0
	0 1 1
!
=
	13.3333 28.7411 52.6126 24.4464
	0 4 2195 0
	Name AY
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	13.3333 28.7411 52.6126 24.4464 0 0
	0 4 2196 0
	Name BASE
	0 0 1
!
27e
808080
c0c0c0
0
0
0
2 0
	16.2162 31.3839 46.8468 19.1607 0 0
	0 2 2197 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 2198 0
	Name LINE1
	0 0 1
!
27e
000000
000000
0
0
0
1 0
	0.36036 44.9286 28.8288 1.32143 0 0
	0 4 2199 0
	Name LINE2
	0 0 1
!
=
	50.8108 44.9286 28.8288 1.32143 0 0
	0 5 2200 0
	Name LINE3
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	28.8288 34.3571 23.0631 19.8214
	0 11584
	0 5 2201 0
	Name LINE3O
	0 0 1
!
=
	28.8288 19.8214 23.0631 19.8214
	0 11584
	0 2 2202 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 2203 0
	0 1 1
!
=
	19.0991 1.32143 41.8018 71.3571
	0 3 2204 0
	0 1 1
!
=
	30.2703 11.5625 26.6667 48.2321
	0 4 2205 0
	Name AY2
	0 0 1
!
27e
d70000
d70000
0
0
0
2 0
	30.2703 11.5625 26.6667 48.2321 0 0
	0 4 2206 0
	Name BASE2
	0 1 1
!
27e
808080
c0c0c0
0
0
0
2 0
	33.1532 14.2054 20.9009 42.9464 0 0
	0 2 2207 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 4 2208 0
	Name LINE11
	0 1 1
!
27e
000000
000000
0
0
0
1 0
	48.6486 46.25 1.44144 26.4286 0 0
	0 4 2209 0
	Name LINE22
	0 1 1
!
=
	48.6486 1.32143 1.44144 26.4286 0 0
	0 5 2210 0
	Name LINE33
	0 0 1
!
2fe
000000
c0c0c0
3
0
0
0 0
1
	37.8378 27.0893 23.0631 19.8214
	5760 11584
	0 5 2211 0
	Name LINE33O
	0 1 1
!
=
	19.0991 27.0893 23.0631 19.8214
	5760 11584
	0 2 2212 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 3 2213 0
	0 1 1
!
=
	14.6205 3.63393 50.7589 66.7321
	0 6 2214 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
2
0
0
0 0
	2
	14.6205 69.8745
	65.3795 4.1246
	0 6 2215 0
	Name QL2
	0 0 1
!
=
	2
	15.3562 3.63393
	64.6438 70.3661
	0 2 2216 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 2 2217 0
	0 1 1
!
=
	0 0 0 0
N 2218
P 1277.22 306.196
T 2190 0 1 0 0
0 0
R 0 0
0
	0 3 2219 0
	Name VAR23
	0 1 1
!
27e
000000
d4d0c8
1
0
0
0 0
dynamics
script
//***GblSymDetails_Init***
ORIENTATION = "Vertical"
SYMBOL3DEFFECT = FALSE
GV_BQCOLOR = FALSE
//***GblSymDetails_End***
if (value == 1) {
object.show = TRUE;
} else {
object.show = FALSE;
object.ghostelement=FALSE;
}
end script
end dynamics
	0 0 47.5676 43.6071
	0 4 2220 0
	0 1 1
!
27e
-10000
d4d0c8
1
0
0
0 0
	0 0 47.5676 43.6071 0 0
	0 6 2221 0
	0 1 1
!
=
	2
	46.7397 1.13759
	0.806229 43.2759
	0 6 2222 0
	0 1 1
!
=
	2
	0.806229 1.13759
	46.4787 43.0424
	0 2 2223 0
	0 1 1
!
27e
000000
d4d0c8
0
0
0
0 0
	0 0 0 0
N 2224
P 1261 291
T 2190 0 1 0 0
0 0
R 0 0
0
	0 0 2225 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_BREAKERE_MULTITAG_ASM;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG3%=4;
//%TAG%_MAINT=5;
}

func Sym_Tag_Refr() {
//%TAG1%=12BBT10GT100;
//%TAG2%=12BBT10GT100_POS;
//%TAG3%=12BBT10GT100_MAINT;
//%TAG%_MAINT=%TAG%_MAINT;
}

//***GblSymDetails***
;DTLS; ORIENTATION = "Vertical"
;DTLS; SYMBOL3DEFFECT = FALSE
;DTLS; GV_BQCOLOR = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 74
	0 74
N 2226
P 1140 297.333
T -1
R 0 0
0
	1 1 2227 0
	Name RND_T_8D23D90
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	NOT SERVICE
N 2228
P 1179 278.333
T -1
R 0 0
0
	1 1 2229 0
	Name RND_T_8D24E40
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TEST
N 2230
P 1174 316.333
T -1
R 0 0
0
	1 1 2231 0
	Name RND_T_8D24B10
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 2232
P 1182 335.333
T -1
R 0 0
0
	1 1 2233 0
	Name RND_T_8D24840
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 2234
P 1157 354.333
T -1
R 0 0
0
	1 1 2235 0
	Name RND_T_8D23910
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP COIL
N 2236
P 1214.69 276.933
T 2236 0 1 0 0
0 0
R 0 0
0
	0 3 2237 0
	Name VAR328
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2238 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2239 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2240 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2241 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2242 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2243
P 1214.69 276.933
T 2236 0 1 0 0
0 0
R 0 0
0
	0 0 2244 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2245
P 1214.69 295.933
T 2245 0 1 0 0
0 0
R 0 0
0
	0 3 2246 0
	Name VAR330
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2247 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2248 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2249 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2250 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2251 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2252
P 1214.69 295.933
T 2245 0 1 0 0
0 0
R 0 0
0
	0 0 2253 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2254
P 1214.69 314.933
T 2254 0 1 0 0
0 0
R 0 0
0
	0 3 2255 0
	Name VAR331
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2256 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2257 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2258 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2259 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2260 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2261
P 1214.69 314.933
T 2254 0 1 0 0
0 0
R 0 0
0
	0 0 2262 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2263
P 1214.69 333.933
T 2263 0 1 0 0
0 0
R 0 0
0
	0 3 2264 0
	Name VAR332
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2265 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2266 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2267 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2268 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2269 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2270
P 1214.69 333.933
T 2263 0 1 0 0
0 0
R 0 0
0
	0 0 2271 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2272
P 1214.69 352.933
T 2272 0 1 0 0
0 0
R 0 0
0
	0 3 2273 0
	Name VAR333
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
if(IsToAck) {
} else {
object.blink = FALSE ;
object.show = TRUE;
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2274 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2275 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2276 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2277 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2278 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2279
P 1214.69 352.933
T 2272 0 1 0 0
0 0
R 0 0
0
	0 0 2280 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A0;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2281
P 17.3333 645.429
T -1
R 0 0
0
	1 1 2282 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 2283
P 51 646.696
T 2283 0 1 0 0
0 0
R 0 0
0
	0 3 2284 0
	Name VAR334
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2285 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2286 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2287 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2288 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2289 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2290
P 51 646.696
T 2283 0 1 0 0
0 0
R 0 0
0
	0 0 2291 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2292
P 9.33334 662
T -1
R 0 0
0
	1 1 2293 0
	Name RND_T_8D24B10
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 2294
P 0 680
T -1
R 0 0
0
	1 1 2295 0
	Name RND_T_8D23CD0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	RELAY ALM
N 2296
P 51 665.267
T 2296 0 1 0 0
0 0
R 0 0
0
	0 3 2297 0
	Name VAR335
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2298 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2299 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2300 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2301 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2302 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2303
P 51 665.267
T 2296 0 1 0 0
0 0
R 0 0
0
	0 0 2304 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2305
P 51 683.267
T 2305 0 1 0 0
0 0
R 0 0
0
	0 3 2306 0
	Name VAR336
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2307 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2308 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2309 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2310 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2311 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2312
P 51 683.267
T 2305 0 1 0 0
0 0
R 0 0
0
	0 0 2313 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2314
P 1469.51 657.962
T -1
R 0 0
0
	1 1 2315 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 2316
P 1501.62 656.562
T 2316 0 1 0 0
0 0
R 0 0
0
	0 3 2317 0
	Name VAR337
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2318 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2319 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2320 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2321 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2322 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2323
P 1501.62 656.562
T 2316 0 1 0 0
0 0
R 0 0
0
	0 0 2324 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2325
P 1461.51 676.533
T -1
R 0 0
0
	1 1 2326 0
	Name RND_T_8D24B10
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 2327
P 1439.51 694.533
T -1
R 0 0
0
	1 1 2328 0
	Name RND_T_8D23CD0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	RELAY ALM
N 2329
P 1501.62 675.133
T 2329 0 1 0 0
0 0
R 0 0
0
	0 3 2330 0
	Name VAR338
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2331 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2332 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2333 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2334 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2335 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2336
P 1501.62 675.133
T 2329 0 1 0 0
0 0
R 0 0
0
	0 0 2337 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2338
P 1501.62 693.133
T 2338 0 1 0 0
0 0
R 0 0
0
	0 3 2339 0
	Name VAR339
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2340 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2341 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2342 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2343 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2344 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2345
P 1501.62 693.133
T 2338 0 1 0 0
0 0
R 0 0
0
	0 0 2346 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2347
P 147.508 648.729
T -1
R 0 0
0
	1 1 2348 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 2349
P 179.689 647.329
T 2349 0 1 0 0
0 0
R 0 0
0
	0 3 2350 0
	Name VAR340
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2351 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2352 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2353 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2354 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2355 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2356
P 179.689 647.329
T 2349 0 1 0 0
0 0
R 0 0
0
	0 0 2357 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2358
P 139.267 667.3
T -1
R 0 0
0
	1 1 2359 0
	Name RND_T_8D24B10
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 2360
P 116.934 685.3
T -1
R 0 0
0
	1 1 2361 0
	Name RND_T_8D23CD0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	RELAY ALM
N 2362
P 179.689 665.9
T 2362 0 1 0 0
0 0
R 0 0
0
	0 3 2363 0
	Name VAR341
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2364 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2365 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2366 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2367 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2368 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2369
P 179.689 665.9
T 2362 0 1 0 0
0 0
R 0 0
0
	0 0 2370 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2371
P 179.689 683.9
T 2371 0 1 0 0
0 0
R 0 0
0
	0 3 2372 0
	Name VAR342
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2373 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2374 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2375 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2376 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2377 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2378
P 179.689 683.9
T 2371 0 1 0 0
0 0
R 0 0
0
	0 0 2379 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2380
P 1652.24 654.929
T -1
R 0 0
0
	1 1 2381 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 2382
P 1684.02 653.529
T 2382 0 1 0 0
0 0
R 0 0
0
	0 3 2383 0
	Name VAR343
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2384 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2385 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2386 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2387 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2388 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2389
P 1684.02 653.529
T 2382 0 1 0 0
0 0
R 0 0
0
	0 0 2390 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2391
P 1644 673.5
T -1
R 0 0
0
	1 1 2392 0
	Name RND_T_8D24B10
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 2393
P 1621.67 691.5
T -1
R 0 0
0
	1 1 2394 0
	Name RND_T_8D23CD0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	RELAY ALM
N 2395
P 1684.02 672.1
T 2395 0 1 0 0
0 0
R 0 0
0
	0 3 2396 0
	Name VAR344
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2397 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2398 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2399 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2400 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2401 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2402
P 1684.02 672.1
T 2395 0 1 0 0
0 0
R 0 0
0
	0 0 2403 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2404
P 1684.02 690.1
T 2404 0 1 0 0
0 0
R 0 0
0
	0 3 2405 0
	Name VAR345
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2406 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2407 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2408 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2409 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2410 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2411
P 1684.02 690.1
T 2404 0 1 0 0
0 0
R 0 0
0
	0 0 2412 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2413
P 275.575 642.096
T -1
R 0 0
0
	1 1 2414 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 2415
P 307.689 640.696
T 2415 0 1 0 0
0 0
R 0 0
0
	0 3 2416 0
	Name VAR346
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2417 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2418 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2419 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2420 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2421 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2422
P 307.689 640.696
T 2415 0 1 0 0
0 0
R 0 0
0
	0 0 2423 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2424
P 267.334 660.667
T -1
R 0 0
0
	1 1 2425 0
	Name RND_T_8D24B10
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 2426
P 245 678.667
T -1
R 0 0
0
	1 1 2427 0
	Name RND_T_8D23CD0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	RELAY ALM
N 2428
P 307.689 659.267
T 2428 0 1 0 0
0 0
R 0 0
0
	0 3 2429 0
	Name VAR347
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2430 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2431 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2432 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2433 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2434 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2435
P 307.689 659.267
T 2428 0 1 0 0
0 0
R 0 0
0
	0 0 2436 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2437
P 307.689 677.267
T 2437 0 1 0 0
0 0
R 0 0
0
	0 3 2438 0
	Name VAR348
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2439 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2440 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2441 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2442 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2443 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2444
P 307.689 677.267
T 2437 0 1 0 0
0 0
R 0 0
0
	0 0 2445 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2446
P 1279.24 648.096
T -1
R 0 0
0
	1 1 2447 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	TRIP
N 2448
P 1311.02 646.696
T 2448 0 1 0 0
0 0
R 0 0
0
	0 3 2449 0
	Name VAR349
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2450 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2451 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2452 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2453 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2454 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2455
P 1311.02 646.696
T 2448 0 1 0 0
0 0
R 0 0
0
	0 0 2456 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2457
P 1271 666.667
T -1
R 0 0
0
	1 1 2458 0
	Name RND_T_8D24B10
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	LOCAL
N 2459
P 1248.67 684.667
T -1
R 0 0
0
	1 1 2460 0
	Name RND_T_8D23CD0
	0 1 1
!
=
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	RELAY ALM
N 2461
P 1311.02 665.267
T 2461 0 1 0 0
0 0
R 0 0
0
	0 3 2462 0
	Name VAR350
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(175, 210, 210)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(192, 192, 192)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if (value == 0) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
}
//
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2463 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2464 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2465 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2466 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2467 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2468
P 1311.02 665.267
T 2461 0 1 0 0
0 0
R 0 0
0
	0 0 2469 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(175, 210, 210)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(192, 192, 192)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2470
P 1311.02 683.267
T 2470 0 1 0 0
0 0
R 0 0
0
	0 3 2471 0
	Name VAR351
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2472 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2473 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2474 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2475 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2476 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2477
P 1311.02 683.267
T 2470 0 1 0 0
0 0
R 0 0
0
	0 0 2478 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2479
P 521 657
T 2479 0 1 0 0
0 0
R 0 0
0
	0 3 2480 0
	Name VAR512
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 2481 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 2482 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 2483 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 2484 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 2485 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 2486 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2487 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 2488 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 2489 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 2490 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2491 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 2492 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 2493 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 2494 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2495 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 2496 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 2497 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 2498 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 2499 0
	0 1 1
!
=
	0 0 0 0
N 2500
P 521 657
T 2479 0 1 0 0
0 0
R 0 0
0
	0 0 2501 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 2502
P 532.541 630
T -1
R 0 0
0
	1 1 2503 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	AUXT-1  FDR CURR
N 2504
P 702 657
T 2504 0 1 0 0
0 0
R 0 0
0
	0 3 2505 0
	Name VAR513
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 2506 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 2507 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 2508 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 2509 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 2510 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 2511 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2512 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 2513 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 2514 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 2515 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2516 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 2517 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 2518 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 2519 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2520 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 2521 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 2522 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 2523 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 2524 0
	0 1 1
!
=
	0 0 0 0
N 2525
P 702 657
T 2504 0 1 0 0
0 0
R 0 0
0
	0 0 2526 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 2527
P 713.541 630
T -1
R 0 0
0
	1 1 2528 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	AUXT-2  FDR CURR
N 2529
P 864 657
T 2529 0 1 0 0
0 0
R 0 0
0
	0 3 2530 0
	Name VAR514
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 2531 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 2532 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 2533 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 2534 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 2535 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 2536 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2537 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 2538 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 2539 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 2540 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2541 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 2542 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 2543 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 2544 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2545 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 2546 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 2547 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 2548 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 2549 0
	0 1 1
!
=
	0 0 0 0
N 2550
P 864 657
T 2529 0 1 0 0
0 0
R 0 0
0
	0 0 2551 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 2552
P 871.541 630
T -1
R 0 0
0
	1 1 2553 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	AUXT-3  FDR CURR
N 2554
P 1034 657
T 2554 0 1 0 0
0 0
R 0 0
0
	0 3 2555 0
	Name VAR515
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
dynamics
script
/////// PV UNIT DECIMALS ALARM SYMBOL //////
// THIS SYMBOL WILL DISPLAY THE PV WITH EU UNITS
// THE ALARM CONDITIONS WILL BE SHOWN IN A BOX TO THE 
// SIDE OF THE VALUE. THE SIDE DEPENDS ON THE ALLIGNMENT
// Near (RIGHT) ALLIGNMENT
// | ALM | |   PV UNIT|				With Box (Frame) Shown
//         ALM PV UNIT				Without Box (Frame) Shown
// 
// Far (LEFT) ALLIGNMENT
//         |PV UNIT   | | ALM | 	With Box (Frame) Shown
//          PV UNIT ALM				Without Box (Frame) Shown
// 
// Center (Center) ALLIGNMENT
// | ALM | | PV UNIT  |				With Box (Frame) Shown
//
//////////////////////////////////////////
// BEGIN DETAILS FUNCTIONS ///
// THESE FUNCTIONS READ THE DETAILS OF THE SYMBOL
// THE DETAILS ARE DEFINED IN THE SYMBOL HEADER FILE
	// CHANGES TO COLOUR OF THE TEXT
	func gsa_ValueColor() {
		return VALUECOLOR;
	}
	// CHANGES THE UNIT COLOUR OF THE TEXT
	func gsa_UnitValueColor() {
		return VALUEENGINEERINGUNITCOLOR;
	}
	// SETS THE ALLIGNMENT OF THE TEXT
	func gsa_TextAlignment(){
		return TEXTALIGNMENT;
	}
	// SETS THE ALLIGNMENT OF THE ALARM
	func gsa_AlarmAlignment(){
		return ALARMALIGNMENT;
	}
	// OVERRIDE THE SPLUS DATABASE NUMBER OF DECIMALS WITH THE DETAILS NUMBER
	func gsa_UseDecimalsInput(){
		return USEDECIMALSINPUT;
	}
	// CONTROLS THE NUMBER OF DECIMALS TO DISPLAY
	func gsa_NumbOfDec(){
		return NUMBEROFDECIMALS;
	}
	// SET THE FONT OF THE VALUE
	func gsa_Font() {
		return FONT;
	}
	// SET THE FONT OF THE UNIT
	func gsa_UNITFont() {
		return UNITFONT;
	}
	// WHETHER TO DISPLAY A BOX (FRAME) AROUND THE PV AND UNIT
	func gsa_BoxVisible(){
		return BOXVISIBLE;
	}
	// THE WIDTH OF THE BOX (FRAME)
	func e_FrameWidth(){
		return GV_FRAMEWIDTH;
	}
	// WHETHER TO CHANGE THE COLOUR OF THE FRAME ABD PV TO BAD QAULITY
	func gsa_GV_BQCOLOR(){
		return GV_BQCOLOR
	}
	// WHICH ATOM OF THE TAG TO READ
	func gsa_GetPvAtom(){
		return ATOMNAME
	}
	// END DETAILS FUNCTIONS ///
// BEGIN LOCAL FUNCTIONS //////
	// CHECK THE SIGNAL FOR OVERRIDE ENABLE
	func v_OverrideEnable(){
		TagRead(SO_Obj,SO_Tag,".OVRENBL",OVR);
		return OVR;
	}
	// CHECK THE SIGNAL FOR BAD QUALITY
	func v_BadQuality(){
		DataQuality(SO_Obj,SO_Tag,".PV",DATABQ);
		TagRead(SO_Obj,SO_Tag,".BAD",F);
		return DATABQ=="Bad"||F;
	}
	// CHECK THE SIGNAL COLOUR IF IT IS SUBSTITUTED
	func e_FillColor(){
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",G);
		QualityDetail(SO_Obj,SO_Tag,".PV",DATASUB);
		if(G||DATASUB==68) return CHarmForceSubstClr;
		return CHarmPVValBGClr;
	}
	// CHANGE THE FRAME COLOR IF THE VALUE IF BADQUALITY
	func e_FrameColor(){
		H=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&H) return CHarmBQClr;
		return RGB(128,128,128);
	}
	// SET THE TEXT COLOR 
	func e_TextColor(){
		J=gsa_GV_BQCOLOR();
		if(v_BadQuality()&&J) return CHarmBQClr;
		return gsa_ValueColor();
	}
	// SET THE UNIT TEXT COLOR 
	func e_UnitTextColor(){
		return gsa_UnitValueColor();
	}
	// SET THE PV VALUE
	func e_PVText(){
                          Atom = gsa_GetPvAtom();
		TagRead(SO_Obj,SO_Tag,Atom,P);
		return P;
	}
	// SET THE UNIT TEXT
	func e_UnitText(){
                          AtomUnit = gsa_GetPvAtom();
                          S2 = ".UNITS";
                          concat (AtomUnit, S2)
		TagRead(SO_Obj,SO_Tag,AtomUnit,EU);
		return EU;
	}
	// CALCULATE HOW MANY DECIMALS TO USE
	func e_NumberOfDecimals(){
		if(gsa_UseDecimalsInput()){
			return gsa_NumbOfDec();
		} else {
			TagRead(SO_Obj,SO_Tag,".NUMDECPL",N);
			if(N>0) return N;
			return gsa_NumbOfDec();
		}
	}
	// CONTROLS THE DISPLAY OF THE MAGENTA CROSSES
	func e_QL1Visible(){
		CCC=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA);
		if((v_BadQuality()&&!CCC)||DDD==68||DDD==88||AAA) return TRUE;
		return FALSE;
	}
	// CONTROLS THE DISPLAY OF THE OTHER MAGENTA CROSSES
	func e_QL2Visible(){
		CCC1=gsa_GV_BQCOLOR();
		QualityDetail(SO_Obj,SO_Tag,".PV",DDD1);
		TagRead(SO_Obj,SO_Tag,".SUBSTITUTED",AAA1);
		if(v_BadQuality()&&!CCC1&&!AAA1&&!(DDD1==68||DDD1==88)) return TRUE;
		return FALSE;
	}
// END LOCAL FUNCTIONS //////
// BEGIN STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
	func gsa_QL1Visible(){
		return e_QL1Visible();
	}
	func gsa_QL2Visible(){
		return e_QL2Visible();
	}
	func gsa_PVValue() {
		return e_PVText();
	}
	func gsa_UnitValue() {
		return e_UnitText();
	}
	func gsa_TextColor(){
		return e_TextColor();
	}
	func gsa_UnitTextColor(){
		return e_UnitTextColor();
	}
	func gsa_NumberOfDecimals(){
		return e_NumberOfDecimals();
	}
	func gsa_FillColor(){
		return e_FillColor();
	}
	func gsa_FrameColor(){
		return e_FrameColor();
	}
	func gsa_FrameWidth(){
		return e_FrameWidth();
	}
// END STRANGE ONE LEVEL OF ABSTRACT FUNCTIONS /////
// ALLIGNMENT FUNCTION
	func center() {
	  return ($1 + int ($2 / 2) - int ($3 / 2));
	}
// ALLIGNMENT FUNCTION
// THIS FUNCTION ALOWS THE SYMBOL TO CHANGE IN THE GRAPHIC DISPLAY
func e_RunIP()  {
}
// END RUNIP
// when - instruction to set Input Parameters here
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
// BEGIN Graphic - PV Box (BOX)
	object.OBOX.background = gsa_FillColor();
	object.OBOX.foreground = gsa_FrameColor();
	object.OBOX.lineWidth = gsa_FrameWidth();
	object.OBOX.show = gsa_BoxVisible();
// END Graphic Box
// BEGIN NUMBER OF DECIMALS CODE
	NumDec = gsa_NumberOfDecimals();
	if(first == 0){
		DBNUMDEC = -1;
		first = 1; 
	}
	if(NumDec < 0) NumDec = 0;
	if(NumDec > 6) NumDec = 6;
	if(NumDec != DBNUMDEC){
		DBNUMDEC = NumDec;
		textFormat = 0;
		cur = toString(DBNUMDEC);
		txt = "%.";
		concat (txt, cur);
		concat (txt,"f%");
		textFormat = txt;
	}
// END NUMBER OF DECIMALS CODE
// BEGIN ALARM BOX CODE
	if (fsrt == 0) {
		SetFont(SO_Obj,"ATEXT",gsa_Font());
		object.ABOX.show = FALSE;
		object.ATEXT.fillStyle = 1;
		object.ABOX.fillStyle = 0;
		frst = 1;
	}
	SetFont(SO_Obj,"ATEXT",gsa_Font());
	qualstr = value;
	toShow = TRUE;
	colFg = CHarmTxtBlackClr;
	testAl = FALSE;
	if (qualstr == "NI") {
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmDisplayBackgroundClr;
	  showST = true
	} else if (qualstr == "IN") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "OS") {
	  colBg = CHarmForceSubstClr;
	  showST = true
	} else if (qualstr == "HI") {
	  testAl = TRUE;
	} else if (qualstr == "LI") {
	  testAl = TRUE;
	} else if (qualstr == "SH") {
	  qualstr = "HHH";
	  testAl = TRUE;
	} else if (qualstr == "HH") {
	  testAl = TRUE;
	} else if (qualstr == "H ") {
	  qualstr = "H";
	  testAl = TRUE;
	} else if (qualstr == "SL") {
	  qualstr = "LLL";
	  testAl = TRUE;
	} else if (qualstr == "LL") {
	  testAl = TRUE;
	} else if (qualstr == "L ") {
	  qualstr = "L";
	  testAl = TRUE;
	} else if (qualstr == "IR") {
	  testAl = TRUE;
	} else if (qualstr == "DR") {
	  testAl = TRUE;
	} else if (qualstr == "HD") {
	  testAl = TRUE;
	} else if (qualstr == "LD") {
	  testAl = TRUE;
	} else if (qualstr == "AL") {
	  testAl = TRUE;
	} else if (qualstr == "RN") {
	  qualstr = "RN";
	  colBg = CHarmDisplayBackgroundClr;
	  colFg = CHarmAlmRTNClr;
	} else if (qualstr == "OA") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "AI") {
	  colBg = CHarmDisplayBackgroundClr;
	} else if (qualstr == "BC") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "CF") {
	  colBg = CHarmBQClr;
	  object.ABOX.fillStyle = 2;
	  object.ABOX.show = TRUE;
	  object.ABOX.background = CHarmBQClr;
	} else if (qualstr == "OL") {
	  colBg = CHarmBQClr;
	} else if (qualstr == "  ") {
	  qualstr = "";
	  toShow = FALSE;
	} else {
	  toShow = FALSE;
	}
	if (testAl) {
	 if (IsAlm == TRUE && IsToAck == TRUE) {
		colBg = CHarmAlmUnAckClr;
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmUnAckClr;
	  } else if (IsAlm == TRUE && IsToAck == FALSE) {
		colBg = CHarmAlmAckClr;  
		object.ABOX.fillStyle = 2;
		object.ABOX.show = TRUE;
		object.ABOX.background = CHarmAlmAckClr;  
	  } else {
		toShow = FALSE;
		object.ABOX.show = FALSE;
	  }
	}
	object.ATEXT.string = qualstr;
	object.ATEXT.foreground = colFg;
	object.ATEXT.background = colBg;
	object.ATEXT.show = toShow;
// END ALARM BOX CODE	
// BEGIN SET PV VALUE AND UNIT 
	SetFont(SO_Obj,"PVVAL",gsa_Font());
	object.PVVAL.string = gsa_PVValue();
	SetFont(SO_Obj,"UVAL",gsa_UNITFont());
	object.UVAL.string = gsa_UnitValue();
	if(v_OverrideEnable()){		 
		 object.OVBOX.show = TRUE;
		 object.OVTEXT.show = TRUE;
		 object.OVTEXT.string = "OVR";
	} else {
		object.OVBOX.show = FALSE;
		object.OVTEXT.show = FALSE;
	}
// END SET PV VALUE AND UNIT 
////// BEGIN TEXT ALLIGNMENT CODE //////////////
// "Far" = LEFT ALLIGNMENT
// "Near" = RIGHT ALLIGNMENT
// "Center" = CENTER ALLIGNMENT
	if(gsa_TextAlignment()=="Far"){								
		object.PVVAL.x = object.OBOX.x;
		object.UVAL.x = object.OBOX.x+object.PVVAL.width;
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}else if(gsa_TextAlignment()=="Center"){
		object.UVAL.x = object.OBOX.x+(object.OBOX.width/2);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width/2)-object.PVVAL.width;
		object.ABOX.x = object.OBOX.x - object.ABOX.width 
		object.OVBOX.x = object.OBOX.x + object.OBOX.width;
	}else{
		object.UVAL.x = object.OBOX.x+(object.OBOX.width-object.UVAL.width);
		object.PVVAL.x = object.OBOX.x+(object.OBOX.width-object.PVVAL.width-object.UVAL.width);
		if(gsa_BoxVisible()){	
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x + object.OBOX.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x + object.OBOX.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}else{
			if(gsa_AlarmAlignment()=="Far"){
				object.ABOX.x = object.OBOX.x - object.ABOX.width - 3;
				object.OVBOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
			}else{
				object.ABOX.x = object.OBOX.x+object.PVVAL.width+object.UVAL.width + 3;
				object.OVBOX.x = object.OBOX.x - object.OVBOX.width - 3;
			}
		}
	}
	object.OVTEXT.x =  object.OVBOX.x+(object.OVBOX.width/2)-(object.OVTEXT.width/2)
	object.ATEXT.x =  object.ABOX.x+(object.ABOX.width/2)-(object.ATEXT.width/2)
	object.PVVAL.y = center(object.OBOX.y,object.OBOX.height,object.PVVAL.height);
	object.UVAL.y = center(object.OBOX.y,object.OBOX.height,object.UVAL.height);
	object.ATEXT.y = center(object.OBOX.y,object.OBOX.height,object.ATEXT.height);
////// END TEXT ALLIGNMENT CODE //////////////
////// BEGIN TEXT COLOUR CODE //////////////
	object.PVVAL.foreground = gsa_TextColor();
	object.UVAL.foreground = gsa_UnitTextColor();
////// END TEXT COLOUR CODE //////////////
////// BEGIN DISPLAY MAGENTA CROSS CODE ///////
	object.QL1.show = gsa_QL1Visible();
	object.QL2.show = gsa_QL2Visible();
////// END DISPLAY MAGENTA CROSS CODE ///////
end script
end dynamics
	0 0 159.696 26.0417
	0 4 2556 0
	Name BORDER
	0 0 1
!
27e
8080-1
bfbfbf
0
0
0
0 0
	0 0 159.696 26.0417 0 0
	0 3 2557 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	37.6922 0 84.3116 26.0417
	0 4 2558 0
	Name OBOX
	0 1 1
!
27e
800000
c0c0c0
1
0
0
2 0
	47.6112 0 65.4654 26.0417 0 0
	1 1 2559 0
	Name UVAL
	0 1 1
!
346
800000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
	82.3278 1.04167 0
	0.00
	1 1 2560 0
	Name PVVAL
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-10-*-*-p-*-iso8859-1-
	48.6031 1.04167 0
	0.00
	0 2 2561 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2562 0
	0 1 1
!
=
	40.6679 0 65.4654 26.0417
	0 6 2563 0
	Name QL1
	0 0 1
!
27e
-100-1
f0f0f0
0
0
0
0 0
	2
	47.6112 26.0417
	113.077 0
	0 6 2564 0
	Name QL2
	0 0 1
!
=
	2
	48.6031 0
	114.069 26.0417
	0 2 2565 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2566 0
	0 1 1
!
=
	0 0 37.6922 26.0417
	0 4 2567 0
	Name ABOX
	0 0 1
!
27e
e6e6e6
283e3e
0
0
0
0 0
	116.052 0 24.7975 26.0417 0 0
	1 1 2568 0
	Name ATEXT
	0 0 1
!
346
000000
000000
1 0
-*-Tahoma-bold-r-normal-*-7-*-*-p-*-iso8859-1-
	113.573 4.16667 0
	0.00
	0 2 2569 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 3 2570 0
	0 1 1
!
=
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"OVBOX",CHarmForceSubstClr);
LcFg(SO_Obj,"OVBOX",CHarmForceSubstClr);
end script
end dynamics
	122.004 0 29.757 26.0417
	0 4 2571 0
	Name OVBOX
	0 0 1
!
27e
e6e6e6
-1c000
0
0
0
2 0
dynamics
script
//***GblSymDetails_Init***
USEDECIMALSINPUT = FALSE
NUMBEROFDECIMALS = 2
VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
FONT = "Font(Tahoma, 12, bold, *)"
VALUECOLOR = RGB(0, 0, 0)
TEXTALIGNMENT = "Near"
GV_BQCOLOR = FALSE
GV_FRAMEWIDTH = 1
BOXVISIBLE = TRUE
UNITFONT = "Font(Tahoma, 12, normal, *)"
ALARMALIGNMENT = "Near"
ATOMNAME = ".PV"
//***GblSymDetails_End***
LcBg(SO_Obj,"",CHarmForceSubstClr);
LcFg(SO_Obj,"",CHarmForceSubstClr);
end script
end dynamics
	19.838 0 24.7975 26.0417 0 0
	1 1 2572 0
	Name OVTEXT
	0 0 1
!
346
000000
283e3e
0 0
-*-Tahoma-bold-r-normal-*-9-*-*-p-*-iso8859-1-
	17.8542 3.125 0
	OVR
	0 2 2573 0
	0 1 1
!
27e
e6e6e6
bfbfbf
0
0
0
0 0
	0 0 0 0
	0 2 2574 0
	0 1 1
!
=
	0 0 0 0
N 2575
P 1034 657
T 2554 0 1 0 0
0 0
R 0 0
0
	0 0 2576 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_PVVALEUD_IPDECIMALS_SG_SMALL;
//***GblSymDetails***
;DTLS; USEDECIMALSINPUT = FALSE
;DTLS; NUMBEROFDECIMALS = 2
;DTLS; VALUEENGINEERINGUNITCOLOR = RGB(128, 128, 128)
;DTLS; FONT = "Font(Tahoma, 12, bold, *)"
;DTLS; VALUECOLOR = RGB(0, 0, 0)
;DTLS; TEXTALIGNMENT = "Near"
;DTLS; GV_BQCOLOR = FALSE
;DTLS; GV_FRAMEWIDTH = 1
;DTLS; BOXVISIBLE = TRUE
;DTLS; UNITFONT = "Font(Tahoma, 12, normal, *)"
;DTLS; ALARMALIGNMENT = "Near"
;DTLS; ATOMNAME = ".PV"
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	159.696 0
	159.696 26.0417
	0 26.0417
N 2577
P 1045.54 630
T -1
R 0 0
0
	1 1 2578 0
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-14-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	AUXT-4  FDR CURR
N 2579
P 754 338.399
T 2579 0 1 0 0
0 0
R 0 0
0
	0 3 2580 0
	Name VAR516
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 2581 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 2582 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 2583 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 2584
P 725 337.399
T 2579 0 1 0 0
0 0
R 0 0
0
	0 3 2585 0
	Name VAR517
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 2586 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 2587 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 2588 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 2589 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 2590 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 2591 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 2592 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 2593 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 2594 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 2595 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 2596 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 2597 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 2598 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2599
P 725 337.399
T 2579 0 1 0 0
0 0
R 0 0
0
	0 0 2600 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=00BBA00BC113XB02A;
//%TAG2%=00BFU10GT111XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 2601
P 943 338.399
T 2601 0 1 0 0
0 0
R 0 0
0
	0 3 2602 0
	Name VAR518
	0 1 1
!
27e
-100-1
-100-1
3
0
0
1 0
dynamics
script
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
//bad quality indication
object.BADQUAL1.foreground  =  CHarm_badquality;
object.BADQUAL2.foreground  =  CHarm_badquality;
//
if(((badq != QDise) && (IsBad == 1)) || ((badq_2 != QDise) && (IsBad_2 == 1))) {
//if((badq != QDise) && (IsBad == 1) && (gv_HarmonyBQColor == 0 || gv_HarmonyBQColor == 2)) {
  object.BADQUAL1.show = TRUE;
  object.BADQUAL2.show = TRUE;
} else {
  object.BADQUAL1.show = FALSE;
  object.BADQUAL2.show = FALSE;
}
end script
end dynamics
	0 0 31 31.0001
	0 6 2603 0
	Name BADQUAL2
	0 0 1
!
27e
-100-1
-100-1
0
0
0
1 0
	2
	0 0
	31 31.0001
	0 6 2604 0
	Name BADQUAL1
	0 0 1
!
=
	2
	0 31.0001
	31 0
	0 2 2605 0
	0 1 1
!
27e
000000
ece9d8
0
0
0
0 0
	0 0 0 0
N 2606
P 914 337.399
T 2601 0 1 0 0
0 0
R 0 0
0
	0 3 2607 0
	Name VAR519
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
dynamics
script
func e_LineColor(){
return LINECOLOR;
}
//***GblSymDetails_Init***
LINECOLOR = RGB(128, 128, 128)
//***GblSymDetails_End***
if  ((value==0) && (value_2==1)) {
object.L2.foregroundName="red";
object.L2.show = TRUE;
object.L1.show = FALSE;
}else if  ((value==1) && (value_2==0)) {
object.L1.foregroundName="green";
object.L1.show = TRUE;
object.L2.show = FALSE;
}else{
object.L1.foregroundName="gray";
object.L1.show = TRUE;
object.L2.show = FALSE;
}
object.S1.foreground = e_LineColor();
object.S2.foreground = e_LineColor();
object.S3.foreground = e_LineColor();
object.S4.foreground = e_LineColor();
object.S5.foreground = e_LineColor();
object.S6.foreground = e_LineColor();
object.C1.foreground = e_LineColor();
object.C2.foreground = e_LineColor();
end script
end dynamics
	0 0 80 44.0001
	0 3 2608 0
	0 1 1
!
=
	0 35.0001 20 9.00002
	0 0 2609 0
	Name S4
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	10 35.0001
	30 35.0001
	30 35.0001
	30 35.0001
	0 0 2610 0
	Name S5
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	15 39.0001
	23 39.0001
	23 39.0001
	23 39.0001
	0 0 2611 0
	Name S6
	0 1 1
!
=
	0 0 0
	0 0 0 0 1 
	2
	17 43.0001
	21 43.0001
	0 2 2612 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
	0 6 2613 0
	Name S3
	0 1 1
!
27e
808080
c0c0c0
1
0
0
0 0
	2
	20 20.0001
	20 35.0001
	0 6 2614 0
	Name S2
	0 1 1
!
=
	2
	20 20.0001
	30 20.0001
	0 6 2615 0
	Name S1
	0 1 1
!
=
	2
	60 20.0001
	70 20.0001
	0 0 2616 0
	Name L1
	0 65535 1
!
27e
000000
c0c0c0
2
0
0
0 0
	0 0 0
	0 0 0 0 1 
	4
	48 0
	28 20.0001
	28 20.0001
	28 20.0001
	0 0 2617 0
	Name L2
	0 0 1
!
=
	0 0 0
	0 0 0 0 1 
	4
	30 20.0001
	58 20.0001
	58 20.0001
	58 20.0001
	0 5 2618 0
	Name C1
	0 1 1
!
2fe
808080
c0c0c0
0
0
0
1 0
1
	28 17 4 4.00001
	0 23040
	0 5 2619 0
	Name C2
	0 1 1
!
=
	57 17 4 4.00001
	0 23040
	0 2 2620 0
	0 1 1
!
27e
000000
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2621
P 914 337.399
T 2601 0 1 0 0
0 0
R 0 0
0
	0 0 2622 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_AOL_EARTHSWITCH_MYG;
func Sym_Tag_List() {
//%TAG1%=1;
//%TAG1%=2;
//%TAG2%=3;
//%TAG1%=4;
//%TAG2%=5;
}
func Sym_Tag_Refr() {
//%TAG1%=00BBA10GT112XB02A;
//%TAG2%=00BFU10GT111XB01A;
}
//***GblSymDetails***
;DTLS; LINECOLOR = RGB(128, 128, 128)
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	80 0
	80 44.0001
	0 44.0001
N 2623
P 714 301.333
T -1
R 0 0
0
	1 1 2624 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	PRTN RLY TRBL
N 2625
P 799.689 299.933
T 2625 0 1 0 0
0 0
R 0 0
0
	0 3 2626 0
	Name VAR523
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2627 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2628 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2629 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2630 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2631 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2632
P 799.689 299.933
T 2625 0 1 0 0
0 0
R 0 0
0
	0 0 2633 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2634
P 937 299.333
T -1
R 0 0
0
	1 1 2635 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	UNRVLT RLY ALM
N 2636
P 917.689 299.933
T 2636 0 1 0 0
0 0
R 0 0
0
	0 3 2637 0
	Name VAR524
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2638 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2639 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2640 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2641 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2642 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2643
P 917.689 299.933
T 2636 0 1 0 0
0 0
R 0 0
0
	0 0 2644 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2645
P 560 773.333
T -1
R 0 0
0
	1 1 2646 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	PRTN RLY TRBL
N 2647
P 534.689 772.933
T 2647 0 1 0 0
0 0
R 0 0
0
	0 3 2648 0
	Name VAR525
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2649 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2650 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2651 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2652 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2653 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2654
P 534.689 772.933
T 2647 0 1 0 0
0 0
R 0 0
0
	0 0 2655 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2656
P 746 773.333
T -1
R 0 0
0
	1 1 2657 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	PRTN RLY TRBL
N 2658
P 720.689 772.933
T 2658 0 1 0 0
0 0
R 0 0
0
	0 3 2659 0
	Name VAR526
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2660 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2661 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2662 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2663 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2664 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2665
P 720.689 772.933
T 2658 0 1 0 0
0 0
R 0 0
0
	0 0 2666 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2667
P 932 773.333
T -1
R 0 0
0
	1 1 2668 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	PRTN RLY TRBL
N 2669
P 906.689 772.933
T 2669 0 1 0 0
0 0
R 0 0
0
	0 3 2670 0
	Name VAR527
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2671 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2672 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2673 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2674 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2675 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2676
P 906.689 772.933
T 2669 0 1 0 0
0 0
R 0 0
0
	0 0 2677 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2678
P 1107 773.333
T -1
R 0 0
0
	1 1 2679 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	PRTN RLY TRBL
N 2680
P 1081.69 772.933
T 2680 0 1 0 0
0 0
R 0 0
0
	0 3 2681 0
	Name VAR528
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2682 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2683 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2684 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2685 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2686 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2687
P 1081.69 772.933
T 2680 0 1 0 0
0 0
R 0 0
0
	0 0 2688 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2689
P 324 777.333
T -1
R 0 0
0
	1 1 2690 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	EMRG STP BUTTON OPRTD AT FLD
N 2691
P 298.689 776.933
T 2691 0 1 0 0
0 0
R 0 0
0
	0 3 2692 0
	Name VAR532
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2693 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2694 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2695 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2696 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2697 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2698
P 298.689 776.933
T 2691 0 1 0 0
0 0
R 0 0
0
	0 0 2699 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2700
P 1321 780.333
T -1
R 0 0
0
	1 1 2701 0
	Name RND_T_8D24840
	0 1 1
!
346
4d4d4d
000001
0 0
-*-Tahoma-regular-r-normal-*-10-*-*-p-*-iso8859-1-
dynamics
script
LcBg(SO_Obj,"",PG_TEXT_COLORS);
LcFg(SO_Obj,"",PG_STATICLABEL);
end script
end dynamics
	0 0 0
	EMRG STP BUTTON OPRTD AT FLD
N 2702
P 1295.69 779.933
T 2702 0 1 0 0
0 0
R 0 0
0
	0 3 2703 0
	Name VAR533
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
dynamics
script
TagRead(SO_Obj,SO_Tag,".UNACK",D);
//Attribute Definitions
func gsa_BoxVisble(){
return BOXVISIBLE;
}
func gsa_LineWidth(){
return LINEWIDTH;
}
func gsa_LineColor(){
return LINECOLOR;
}
func gsa_TextColor(){
return TEXTCOLOR;
}
func gsa_FillColor(){
return FILLCOLOR;
}
func gsa_FillOffColor(){
return FILLOFFCOLOR;
}
func gsa_OneStateText(){
return ONESTATETEXT;
}
func gsa_ZeroStateText(){
return ZEROSTATETEXT;
}
func gsa_QL1Visible(){
return QL1VISIBLE;
}
func gsa_QL2Visible(){
return QL2VISIBLE;
}
//***GblSymDetails_Init***
BOXVISIBLE = TRUE
LINEWIDTH = 1
LINECOLOR = RGB(64, 64, 64)
TEXTCOLOR = Black
FILLCOLOR = RGB(255, 255, 0)
ONESTATETEXT = ""
ZEROSTATETEXT = ""
FILLOFFCOLOR = RGB(191, 191, 191)
QL1VISIBLE = FALSE
QL2VISIBLE = FALSE
//***GblSymDetails_End***
//Object Alignment
object.TEXT1.x = object.BOX1.x + ((object.BOX1.width - object.TEXT1.width)/2); //center justify
object.TEXT1.y = object.BOX1.y + ((object.BOX1.height - object.TEXT1.height)/2); //center justify
//
object.BOX1.lineWidth = gsa_LineWidth();
object.BOX1.foreground = gsa_LineColor();
object.TEXT1.foreground = gsa_TextColor();
//object.BOX1.background = gsa_FillColor();
//
if(gsa_BoxVisble() == TRUE) {
object.BOX1.show = TRUE;
} else object.BOX1.show = FALSE;
//
if ((value == 1) && (D == 1)) {
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.blink = TRUE;
}else if ((value == 1) && (D == 0)){
object.TEXT1.string = gsa_OneStateText();
object.BOX1.background = gsa_FillColor();
object.show = TRUE;
object.blink = FALSE ;
}else if((value == 0) && (D == 1)) {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.BOX1.foregroundName = "green";
object.blink =TRUE;
}else if ((value == 0) && (D == 0)){
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
} else {
object.TEXT1.string = gsa_ZeroStateText();
object.BOX1.background = gsa_FillOffColor();
object.blink = FALSE ;
object.show = TRUE;
}
if (IsBad==1&&gsa_QL1Visible()) {
object.QL1.show = TRUE;
} else {
object.QL1.show = FALSE;
}
if (IsBad==1&&gsa_QL2Visible()) {
object.QL2.show = TRUE;
} else {
object.QL2.show = FALSE;
}
end script
end dynamics
	0 0 19 17.599
	0 4 2704 0
	Name BOX1
	0 1 1
!
27e
-1-1-1
c0c0c0
0
0
0
2 0
	0.109857 0.081101 18.8209 17.5179 0 0
	1 1 2705 0
	Name TEXT1
	0 1 1
!
346
000000
283e3e
0 0
-*-Tahoma-regular-r-normal-*-9-*-*-p-*-iso8859-1-
	1.57493 0.081101 0
	 
	0 6 2706 0
	Name QL2
	0 1 1
!
27e
-100-1
c0c0c0
0
0
0
0 0
	2
	0.0690899 0.389285
	19 17.2583
	0 6 2707 0
	Name QL1
	0 1 1
!
=
	2
	18.6546 0
	0 17.5179
	0 2 2708 0
	0 1 1
!
27e
e6e6e6
c0c0c0
0
0
0
0 0
	0 0 0 0
N 2709
P 1295.69 779.933
T 2702 0 1 0 0
0 0
R 0 0
0
	0 0 2710 0
	Name #SYM
	0 0 1
!
27e
0000-1
bfbfbf
0
0
0
0 0
dynamics
script
HAR_DOL_STATUS_ELE_A1;
//***GblSymDetails***
;DTLS; BOXVISIBLE = TRUE
;DTLS; LINEWIDTH = 1
;DTLS; LINECOLOR = RGB(64, 64, 64)
;DTLS; TEXTCOLOR = Black
;DTLS; FILLCOLOR = RGB(255, 255, 0)
;DTLS; ONESTATETEXT = ""
;DTLS; ZEROSTATETEXT = ""
;DTLS; FILLOFFCOLOR = RGB(191, 191, 191)
;DTLS; QL1VISIBLE = FALSE
;DTLS; QL2VISIBLE = FALSE
end script
end dynamics
	0 1 0
	0 0 0 0 1 
	4
	0 0
	19 0
	19 19.088
	0 19.088
N 2711
P 864 100
T -1
R 0 0
0
	0 0 2712 0
	Name TX
	0 65535 1
!
27e
-10000
bfbfbf
3
0
0
0 0
	0 1 0
	2 0 0 0 1 
	3
	0 6
	41 59
	76 0
N 2713
P 1035.36 59.8245
T -1
R 0 0
0
	0 6 2714 0
	Name LX
	0 1 5
!
27e
-10000
bfbfbf
2
0
0
0 0
	2
	0 0
	142.29 66.3511
